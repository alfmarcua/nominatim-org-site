{
    "docs": [
        {
            "location": "/",
            "text": "Nominatim (from the Latin, 'by name') is a tool to search OSM data by name and address and to generate synthetic addresses of OSM points (reverse geocoding).",
            "title": "Introduction"
        },
        {
            "location": "/admin/Installation/",
            "text": "This page contains generic installation instructions for Nominatim and its\nprerequisites. There are also step-by-step instructions available for\nthe following operating systems:\n\n\n\n\nUbuntu 16.04\n\n\nCentOS 7.2\n\n\n\n\nThese OS-specific instructions can also be found in executable form\nin the \nvagrant/\n directory.\n\n\nPrerequisites\n\n\nSoftware\n\n\nFor compiling:\n\n\n\n\ncmake\n\n\nlibxml2\n\n\na recent C++ compiler\n\n\n\n\nNominatim comes with its own version of osm2pgsql. See the\nosm2pgsql README for additional dependencies required for compiling osm2pgsql.\n\n\nFor running tests:\n\n\n\n\nbehave\n\n\nPsycopg2\n\n\nnose\n\n\nphpunit\n\n\n\n\nFor running Nominatim:\n\n\n\n\nPostgreSQL\n (9.1 or later)\n\n\nPostGIS\n (2.0 or later)\n\n\nPHP\n (5.4 or later)\n\n\nPHP-pgsql\n\n\nPHP-intl (bundled with PHP)\n\n\nPEAR::DB\n\n\na webserver (apache or nginx are recommended)\n\n\n\n\nFor running continuous updates:\n\n\n\n\npyosmium\n\n\n\n\nHardware\n\n\nA minimum of 2GB of RAM is required or installation will fail. For a full\nplanet import 32GB of RAM or more strongly are recommended.\n\n\nFor a full planet install you will need about 600GB of hard disk space (as of\nJanuary 2017, take into account that the OSM database is growing fast). SSD disks\nwill help considerably to speed up import and queries.\n\n\nOn a 6-core machine with 32GB RAM and SSDs the import of a full planet takes\na bit more than 2 days. Without SSDs 7-8 days are more realistic.\n\n\nSetup of the server\n\n\nPostgreSQL tuning\n\n\nYou might want to tune your PostgreSQL installation so that the later steps\nmake best use of your hardware. You should tune the following parameters in\nyour \npostgresql.conf\n file.\n\n\nshared_buffers (2GB)\nmaintenance_work_mem (10GB)\nwork_mem (50MB)\neffective_cache_size (24GB)\nsynchronous_commit = off\ncheckpoint_segments = 100 # only for postgresql <= 9.4\ncheckpoint_timeout = 10min\ncheckpoint_completion_target = 0.9\n\n\n\n\nThe numbers in brackets behind some parameters seem to work fine for\n32GB RAM machine. Adjust to your setup.\n\n\nFor the initial import, you should also set:\n\n\nfsync = off\nfull_page_writes = off\n\n\n\n\nDon't forget to reenable them after the initial import or you risk database\ncorruption. Autovacuum must not be switched off because it ensures that the\ntables are frequently analysed.\n\n\nWebserver setup\n\n\nThe \nwebsite/\n directory in the build directory contains the configured\nwebsite. Include the directory into your webbrowser to serve php files\nfrom there.\n\n\nConfigure for use with Apache\n\n\nMake sure your Apache configuration contains the required permissions for the\ndirectory and create an alias:\n\n\n<Directory \"/srv/nominatim/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\nAlias /nominatim /srv/nominatim/build/website\n\n\n\n\n/srv/nominatim/build\n should be replaced with the location of your\nbuild directory.\n\n\nAfter making changes in the apache config you need to restart apache.\nThe website should now be available on http://localhost/nominatim.\n\n\nConfigure for use with Nginx\n\n\nUse php-fpm as a deamon for serving PHP cgi. Install php-fpm together with nginx.\n\n\nBy default php listens on a network socket. If you want it to listen to a\nUnix socket instead, change the pool configuration (\npool.d/www.conf\n) as\nfollows:\n\n\n; Comment out the tcp listener and add the unix socket\n;listen = 127.0.0.1:9000\nlisten = /var/run/php5-fpm.sock\n\n; Ensure that the daemon runs as the correct user\nlisten.owner = www-data\nlisten.group = www-data\nlisten.mode = 0666\n\n\n\n\nTell nginx that php files are special and to fastcgi_pass to the php-fpm\nunix socket by adding the location definition to the default configuration.\n\n\nroot /srv/nominatim/build/website;\nindex search.php index.html;\nlocation ~ [^/]\\.php(/|$) {\n    fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\n    if (!-f $document_root$fastcgi_script_name) {\n        return 404;\n    }\n    fastcgi_pass unix:/var/run/php5-fpm.sock;\n    fastcgi_index search.php;\n    include fastcgi.conf;\n}\n\n\n\n\nRestart the nginx and php5-fpm services and the website should now be available\nat \nhttp://localhost/\n.\n\n\nNow continue with \nimporting the database\n.",
            "title": "Basic Installation"
        },
        {
            "location": "/admin/Installation/#prerequisites",
            "text": "",
            "title": "Prerequisites"
        },
        {
            "location": "/admin/Installation/#software",
            "text": "For compiling:   cmake  libxml2  a recent C++ compiler   Nominatim comes with its own version of osm2pgsql. See the\nosm2pgsql README for additional dependencies required for compiling osm2pgsql.  For running tests:   behave  Psycopg2  nose  phpunit   For running Nominatim:   PostgreSQL  (9.1 or later)  PostGIS  (2.0 or later)  PHP  (5.4 or later)  PHP-pgsql  PHP-intl (bundled with PHP)  PEAR::DB  a webserver (apache or nginx are recommended)   For running continuous updates:   pyosmium",
            "title": "Software"
        },
        {
            "location": "/admin/Installation/#hardware",
            "text": "A minimum of 2GB of RAM is required or installation will fail. For a full\nplanet import 32GB of RAM or more strongly are recommended.  For a full planet install you will need about 600GB of hard disk space (as of\nJanuary 2017, take into account that the OSM database is growing fast). SSD disks\nwill help considerably to speed up import and queries.  On a 6-core machine with 32GB RAM and SSDs the import of a full planet takes\na bit more than 2 days. Without SSDs 7-8 days are more realistic.",
            "title": "Hardware"
        },
        {
            "location": "/admin/Installation/#setup-of-the-server",
            "text": "",
            "title": "Setup of the server"
        },
        {
            "location": "/admin/Installation/#postgresql-tuning",
            "text": "You might want to tune your PostgreSQL installation so that the later steps\nmake best use of your hardware. You should tune the following parameters in\nyour  postgresql.conf  file.  shared_buffers (2GB)\nmaintenance_work_mem (10GB)\nwork_mem (50MB)\neffective_cache_size (24GB)\nsynchronous_commit = off\ncheckpoint_segments = 100 # only for postgresql <= 9.4\ncheckpoint_timeout = 10min\ncheckpoint_completion_target = 0.9  The numbers in brackets behind some parameters seem to work fine for\n32GB RAM machine. Adjust to your setup.  For the initial import, you should also set:  fsync = off\nfull_page_writes = off  Don't forget to reenable them after the initial import or you risk database\ncorruption. Autovacuum must not be switched off because it ensures that the\ntables are frequently analysed.",
            "title": "PostgreSQL tuning"
        },
        {
            "location": "/admin/Installation/#webserver-setup",
            "text": "The  website/  directory in the build directory contains the configured\nwebsite. Include the directory into your webbrowser to serve php files\nfrom there.",
            "title": "Webserver setup"
        },
        {
            "location": "/admin/Installation/#configure-for-use-with-apache",
            "text": "Make sure your Apache configuration contains the required permissions for the\ndirectory and create an alias:  <Directory \"/srv/nominatim/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\nAlias /nominatim /srv/nominatim/build/website  /srv/nominatim/build  should be replaced with the location of your\nbuild directory.  After making changes in the apache config you need to restart apache.\nThe website should now be available on http://localhost/nominatim.",
            "title": "Configure for use with Apache"
        },
        {
            "location": "/admin/Installation/#configure-for-use-with-nginx",
            "text": "Use php-fpm as a deamon for serving PHP cgi. Install php-fpm together with nginx.  By default php listens on a network socket. If you want it to listen to a\nUnix socket instead, change the pool configuration ( pool.d/www.conf ) as\nfollows:  ; Comment out the tcp listener and add the unix socket\n;listen = 127.0.0.1:9000\nlisten = /var/run/php5-fpm.sock\n\n; Ensure that the daemon runs as the correct user\nlisten.owner = www-data\nlisten.group = www-data\nlisten.mode = 0666  Tell nginx that php files are special and to fastcgi_pass to the php-fpm\nunix socket by adding the location definition to the default configuration.  root /srv/nominatim/build/website;\nindex search.php index.html;\nlocation ~ [^/]\\.php(/|$) {\n    fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\n    if (!-f $document_root$fastcgi_script_name) {\n        return 404;\n    }\n    fastcgi_pass unix:/var/run/php5-fpm.sock;\n    fastcgi_index search.php;\n    include fastcgi.conf;\n}  Restart the nginx and php5-fpm services and the website should now be available\nat  http://localhost/ .  Now continue with  importing the database .",
            "title": "Configure for use with Nginx"
        },
        {
            "location": "/admin/Import-and-Update/",
            "text": "The following instructions explain how to create a Nominatim database\nfrom an OSM planet file and how to keep the database up to date. It\nis assumed that you have already successfully installed the Nominatim\nsoftware itself, if not return to the \ninstallation page\n.\n\n\nConfiguration setup in settings/local.php\n\n\nThe Nominatim server can be customized via the file \nsettings/local.php\n\nin the build directory. Note that this is a PHP file, so it must always\nstart like this:\n\n\n<?php\n\n\n\n\nwithout any leading spaces.\n\n\nThere are lots of configuration settings you can tweak. Have a look\nat \nsettings/default.php\n for a full list. Most should have a sensible default.\n\n\nFlatnode files\n\n\nIf you plan to import a large dataset (e.g. Europe, North America, planet),\nyou should also enable flatnode storage of node locations. With this\nsetting enabled, node coordinates are stored in a simple file instead\nof the database. This will save you import time and disk storage.\nAdd to your \nsettings/local.php\n:\n\n\n@define('CONST_Osm2pgsql_Flatnode_File', '/path/to/flatnode.file');\n\n\n\n\nReplace the second part with a suitable path on your system and make sure\nthe directory exists. There should be at least 40GB of free space.\n\n\nDownloading additional data\n\n\nWikipedia rankings\n\n\nWikipedia can be used as an optional auxiliary data source to help indicate\nthe importance of osm features. Nominatim will work without this information\nbut it will improve the quality of the results if this is installed.\nThis data is available as a binary download:\n\n\ncd $NOMINATIM_SOURCE_DIR/data\nwget https://www.nominatim.org/data/wikipedia_article.sql.bin\nwget https://www.nominatim.org/data/wikipedia_redirect.sql.bin\n\n\n\n\nCombined the 2 files are around 1.5GB and add around 30GB to the install\nsize of nominatim. They also increase the install time by an hour or so.\n\n\nNOTE:\n you'll need to download the Wikipedia rankings before performing\nthe initial import of the data if you want the rankings applied to the\nloaded data.\n\n\nUK postcodes\n\n\nNominatim can use postcodes from an external source to improve searches that involve a UK postcode. This data can be optionally downloaded: \n\n\ncd $NOMINATIM_SOURCE_DIR/data\nwget https://www.nominatim.org/data/gb_postcode_data.sql.gz\n\n\n\n\nInitial import of the data\n\n\nImportant:\n first try the import with a small excerpt, for example from\n\nGeofabrik\n.\n\n\nDownload the data to import and load the data with the following command:\n\n\n./utils/setup.php --osm-file <data file> --all [--osm2pgsql-cache 28000] 2>&1 | tee setup.log\n\n\n\n\nThe \n--osm2pgsql-cache\n parameter is optional but strongly recommended for\nplanet imports. It sets the node cache size for the osm2pgsql import part\n(see \n-C\n parameter in osm2pgsql help). As a rule of thumb, this should be\nabout the same size as the file you are importing but never more than\n2/3 of RAM available. If your machine starts swapping reduce the size.\n\n\nComputing word frequency for search terms can improve the performance of\nforward geocoding in particular under high load as it helps Postgres' query\nplanner to make the right decisions. To recompute word counts run:\n\n\n./utils/update.php --recompute-word-counts\n\n\n\n\nThis will take a couple of hours for a full planet installation. You can\nalso defer that step to a later point in time when you realise that\nperformance becomes an issue. Just make sure that updates are stopped before\nrunning this function.\n\n\nIf you want to be able to search for places by their type through\n\nspecial key phrases\n\nyou also need to enable these key phrases like this:\n\n\n./utils/specialphrases.php --wiki-import > specialphrases.sql\npsql -d nominatim -f specialphrases.sql\n\n\n\n\nNote that this command downloads the phrases from the wiki link above.\n\n\nInstalling Tiger housenumber data for the US\n\n\nNominatim is able to use the official TIGER address set to complement the\nOSM house number data in the US. You can add TIGER data to your own Nominatim\ninstance by following these steps:\n\n\n\n\n\n\nInstall the GDAL library and python bindings and the unzip tool\n\n\n\n\nUbuntu: \nsudo apt-get install python-gdal unzip\n\n\nCentOS: \nsudo yum install gdal-python unzip\n\n\n\n\n\n\n\n\nGet preprocessed TIGER 2015 data and unpack it into the\n     data directory in your Nominatim sources:\n\n\ncd Nominatim/data\nwget https://nominatim.org/data/tiger2017-nominatim-preprocessed.tar.gz\ntar xf tiger2017-nominatim-preprocessed.tar.gz\n\n\n\n\n\n\n\n\nImport the data into your Nominatim database: \n\n\n./utils/setup.php --import-tiger-data\n\n\n\n\n\n\n\n\nEnable use of the Tiger data in your \nsettings/local.php\n by adding:\n\n\n @define('CONST_Use_US_Tiger_Data', true);\n\n\n\n\n\n\n\n\nApply the new settings:\n\n\n\n\n\n\n    ./utils/setup.php --create-functions --enable-diff-updates --create-partition-functions\n\n\n\n\nThe entire US adds about 10GB to your database.\n\n\nYou can also process the data from the original TIGER data to create the\nSQL files, Nominatim needs for the import:\n\n\n\n\n\n\nGet the TIGER 2017 data. You will need the EDGES files\n     (3,234 zip files, 11GB total). Choose one of the two sources:\n\n\n wget -r ftp://ftp2.census.gov/geo/tiger/TIGER2017/EDGES/\n wget -r ftp://mirror1.shellbot.com/census/geo/tiger/TIGER2017/EDGES/\n\n\n\n\nThe first one is the original source, the second a considerably faster\n mirror.\n\n\n\n\n\n\nConvert the data into SQL statements: \n\n\n ./utils/imports.php --parse-tiger <tiger edge data directory>\n\n\n\n\n\n\n\n\nBe warned that this can take quite a long time. After this process is finished,\nthe same preprocessed files as above are available in \ndata/tiger\n.\n\n\nUpdates\n\n\nThere are many different possibilities to update your Nominatim database.\nThe following section describes how to keep it up-to-date with Pyosmium.\nFor a list of other methods see the output of \n./utils/update.php --help\n.\n\n\nInstalling the newest version of Pyosmium\n\n\nIt is recommended to install Pyosmium via pip. Run (as the same user who\nwill later run the updates):\n\n\npip install --user osmium\n\n\n\n\nNominatim needs a tool called \npyosmium-get-updates\n that comes with\nPyosmium. You need to tell Nominatim where to find it. Add the\nfollowing line to your \nsettings/local.php\n:\n\n\n@define('CONST_Pyosmium_Binary', '/home/user/.local/bin/pyosmium-get-changes');\n\n\n\n\nThe path above is fine if you used the \n--user\n parameter with pip.\nReplace \nuser\n with your user name.\n\n\nSetting up the update process\n\n\nNext the update needs to be initialised. By default Nominatim is configured\nto update using the global minutely diffs.\n\n\nIf you want a different update source you will need to add some settings\nto \nsettings/local.php\n. For example, to use the daily country extracts\ndiffs for Ireland from geofabrik add the following:\n\n\n// base URL of the replication service\n@define('CONST_Replication_Url', 'https://download.geofabrik.de/europe/ireland-and-northern-ireland-updates');\n// How often upstream publishes diffs\n@define('CONST_Replication_Update_Interval', '86400');\n// How long to sleep if no update found yet\n@define('CONST_Replication_Recheck_Interval', '900');\n\n\n\n\nTo set up the update process now run the following command:\n\n\n./utils/update.php --init-updates\n\n\n\n\nIt outputs the date where updates will start. Recheck that this date is\nwhat you expect.\n\n\nThe --init-updates command needs to be rerun whenever the replication service\nis changed.\n\n\nUpdating Nominatim\n\n\nThe following command will keep your database constantly up to date:\n\n\n./utils/update.php --import-osmosis-all\n\n\n\n\n(Note that even though the old name \"import-osmosis-all\" has been kept for compatibility reasons, Osmosis is not required to run this - it uses pyosmium behind the scenes.)\n\n\nIf you have imported multiple country extracts and want to keep them\nup-to-date, have a look at the script in\n\nissue #60\n.",
            "title": "Importing and Updating"
        },
        {
            "location": "/admin/Import-and-Update/#configuration-setup-in-settingslocalphp",
            "text": "The Nominatim server can be customized via the file  settings/local.php \nin the build directory. Note that this is a PHP file, so it must always\nstart like this:  <?php  without any leading spaces.  There are lots of configuration settings you can tweak. Have a look\nat  settings/default.php  for a full list. Most should have a sensible default.",
            "title": "Configuration setup in settings/local.php"
        },
        {
            "location": "/admin/Import-and-Update/#flatnode-files",
            "text": "If you plan to import a large dataset (e.g. Europe, North America, planet),\nyou should also enable flatnode storage of node locations. With this\nsetting enabled, node coordinates are stored in a simple file instead\nof the database. This will save you import time and disk storage.\nAdd to your  settings/local.php :  @define('CONST_Osm2pgsql_Flatnode_File', '/path/to/flatnode.file');  Replace the second part with a suitable path on your system and make sure\nthe directory exists. There should be at least 40GB of free space.",
            "title": "Flatnode files"
        },
        {
            "location": "/admin/Import-and-Update/#downloading-additional-data",
            "text": "",
            "title": "Downloading additional data"
        },
        {
            "location": "/admin/Import-and-Update/#wikipedia-rankings",
            "text": "Wikipedia can be used as an optional auxiliary data source to help indicate\nthe importance of osm features. Nominatim will work without this information\nbut it will improve the quality of the results if this is installed.\nThis data is available as a binary download:  cd $NOMINATIM_SOURCE_DIR/data\nwget https://www.nominatim.org/data/wikipedia_article.sql.bin\nwget https://www.nominatim.org/data/wikipedia_redirect.sql.bin  Combined the 2 files are around 1.5GB and add around 30GB to the install\nsize of nominatim. They also increase the install time by an hour or so.  NOTE:  you'll need to download the Wikipedia rankings before performing\nthe initial import of the data if you want the rankings applied to the\nloaded data.",
            "title": "Wikipedia rankings"
        },
        {
            "location": "/admin/Import-and-Update/#uk-postcodes",
            "text": "Nominatim can use postcodes from an external source to improve searches that involve a UK postcode. This data can be optionally downloaded:   cd $NOMINATIM_SOURCE_DIR/data\nwget https://www.nominatim.org/data/gb_postcode_data.sql.gz",
            "title": "UK postcodes"
        },
        {
            "location": "/admin/Import-and-Update/#initial-import-of-the-data",
            "text": "Important:  first try the import with a small excerpt, for example from Geofabrik .  Download the data to import and load the data with the following command:  ./utils/setup.php --osm-file <data file> --all [--osm2pgsql-cache 28000] 2>&1 | tee setup.log  The  --osm2pgsql-cache  parameter is optional but strongly recommended for\nplanet imports. It sets the node cache size for the osm2pgsql import part\n(see  -C  parameter in osm2pgsql help). As a rule of thumb, this should be\nabout the same size as the file you are importing but never more than\n2/3 of RAM available. If your machine starts swapping reduce the size.  Computing word frequency for search terms can improve the performance of\nforward geocoding in particular under high load as it helps Postgres' query\nplanner to make the right decisions. To recompute word counts run:  ./utils/update.php --recompute-word-counts  This will take a couple of hours for a full planet installation. You can\nalso defer that step to a later point in time when you realise that\nperformance becomes an issue. Just make sure that updates are stopped before\nrunning this function.  If you want to be able to search for places by their type through special key phrases \nyou also need to enable these key phrases like this:  ./utils/specialphrases.php --wiki-import > specialphrases.sql\npsql -d nominatim -f specialphrases.sql  Note that this command downloads the phrases from the wiki link above.",
            "title": "Initial import of the data"
        },
        {
            "location": "/admin/Import-and-Update/#installing-tiger-housenumber-data-for-the-us",
            "text": "Nominatim is able to use the official TIGER address set to complement the\nOSM house number data in the US. You can add TIGER data to your own Nominatim\ninstance by following these steps:    Install the GDAL library and python bindings and the unzip tool   Ubuntu:  sudo apt-get install python-gdal unzip  CentOS:  sudo yum install gdal-python unzip     Get preprocessed TIGER 2015 data and unpack it into the\n     data directory in your Nominatim sources:  cd Nominatim/data\nwget https://nominatim.org/data/tiger2017-nominatim-preprocessed.tar.gz\ntar xf tiger2017-nominatim-preprocessed.tar.gz    Import the data into your Nominatim database:   ./utils/setup.php --import-tiger-data    Enable use of the Tiger data in your  settings/local.php  by adding:   @define('CONST_Use_US_Tiger_Data', true);    Apply the new settings:        ./utils/setup.php --create-functions --enable-diff-updates --create-partition-functions  The entire US adds about 10GB to your database.  You can also process the data from the original TIGER data to create the\nSQL files, Nominatim needs for the import:    Get the TIGER 2017 data. You will need the EDGES files\n     (3,234 zip files, 11GB total). Choose one of the two sources:   wget -r ftp://ftp2.census.gov/geo/tiger/TIGER2017/EDGES/\n wget -r ftp://mirror1.shellbot.com/census/geo/tiger/TIGER2017/EDGES/  The first one is the original source, the second a considerably faster\n mirror.    Convert the data into SQL statements:    ./utils/imports.php --parse-tiger <tiger edge data directory>    Be warned that this can take quite a long time. After this process is finished,\nthe same preprocessed files as above are available in  data/tiger .",
            "title": "Installing Tiger housenumber data for the US"
        },
        {
            "location": "/admin/Import-and-Update/#updates",
            "text": "There are many different possibilities to update your Nominatim database.\nThe following section describes how to keep it up-to-date with Pyosmium.\nFor a list of other methods see the output of  ./utils/update.php --help .",
            "title": "Updates"
        },
        {
            "location": "/admin/Import-and-Update/#installing-the-newest-version-of-pyosmium",
            "text": "It is recommended to install Pyosmium via pip. Run (as the same user who\nwill later run the updates):  pip install --user osmium  Nominatim needs a tool called  pyosmium-get-updates  that comes with\nPyosmium. You need to tell Nominatim where to find it. Add the\nfollowing line to your  settings/local.php :  @define('CONST_Pyosmium_Binary', '/home/user/.local/bin/pyosmium-get-changes');  The path above is fine if you used the  --user  parameter with pip.\nReplace  user  with your user name.",
            "title": "Installing the newest version of Pyosmium"
        },
        {
            "location": "/admin/Import-and-Update/#setting-up-the-update-process",
            "text": "Next the update needs to be initialised. By default Nominatim is configured\nto update using the global minutely diffs.  If you want a different update source you will need to add some settings\nto  settings/local.php . For example, to use the daily country extracts\ndiffs for Ireland from geofabrik add the following:  // base URL of the replication service\n@define('CONST_Replication_Url', 'https://download.geofabrik.de/europe/ireland-and-northern-ireland-updates');\n// How often upstream publishes diffs\n@define('CONST_Replication_Update_Interval', '86400');\n// How long to sleep if no update found yet\n@define('CONST_Replication_Recheck_Interval', '900');  To set up the update process now run the following command:  ./utils/update.php --init-updates  It outputs the date where updates will start. Recheck that this date is\nwhat you expect.  The --init-updates command needs to be rerun whenever the replication service\nis changed.",
            "title": "Setting up the update process"
        },
        {
            "location": "/admin/Import-and-Update/#updating-nominatim",
            "text": "The following command will keep your database constantly up to date:  ./utils/update.php --import-osmosis-all  (Note that even though the old name \"import-osmosis-all\" has been kept for compatibility reasons, Osmosis is not required to run this - it uses pyosmium behind the scenes.)  If you have imported multiple country extracts and want to keep them\nup-to-date, have a look at the script in issue #60 .",
            "title": "Updating Nominatim"
        },
        {
            "location": "/admin/Migration/",
            "text": "Database Migrations\n\n\nThis page describes database migrations necessary to update existing databases\nto newer versions of Nominatim.\n\n\nSQL statements should be executed from the postgres commandline. Execute\n\npsql nominiatim\n to enter command line mode.\n\n\n3.0.0 -> 3.1.0\n\n\nPostcode Table\n\n\nA new separate table for artificially computed postcode centroids was introduced.\nMigration to the new format is possible but \nnot recommended\n.\n\n\nCreate postcode table and indexes, running the following SQL statements:\n\n\nCREATE TABLE location_postcode\n  (place_id BIGINT, parent_place_id BIGINT, rank_search SMALLINT,\n   rank_address SMALLINT, indexed_status SMALLINT, indexed_date TIMESTAMP,\n   country_code varchar(2), postcode TEXT,\n   geometry GEOMETRY(Geometry, 4326));\nCREATE INDEX idx_postcode_geometry ON location_postcode USING GIST (geometry);\nCREATE UNIQUE INDEX idx_postcode_id ON location_postcode USING BTREE (place_id);\nCREATE INDEX idx_postcode_postcode ON location_postcode USING BTREE (postcode);\nGRANT SELECT ON location_postcode TO \"www-data\";\n\n\n\n\nAdd postcode column to \nlocation_area\n tables with SQL statement:\n\n\nALTER TABLE location_area ADD COLUMN postcode TEXT;\n\n\n\n\nThen reimport the functions:\n\n\n./utils/setup.php --create-functions --enable-diff-updates --create-partition-functions\n\n\n\n\nCreate appropriate triggers with SQL:\n\n\nCREATE TRIGGER location_postcode_before_update BEFORE UPDATE ON location_postcode\n    FOR EACH ROW EXECUTE PROCEDURE postcode_update();\n\n\n\n\nFinally populate the postcode table (will take a while):\n\n\n./utils/setup.php --calculate-postcodes --index --index-noanalyse\n\n\n\n\nThis will create a working database. You may also delete the old artificial\npostcodes now. Note that this may be expensive and is not absolutely necessary.\nThe following SQL statement will remove them:\n\n\nDELETE FROM place_addressline a USING placex p\n WHERE a.address_place_id = p.place_id and p.osm_type = 'P';\nALTER TABLE placex DISABLE TRIGGER USER;\nDELETE FROM placex WHERE osm_type = 'P';\nALTER TABLE placex ENABLE TRIGGER USER;",
            "title": "Migration from older Versions"
        },
        {
            "location": "/admin/Migration/#database-migrations",
            "text": "This page describes database migrations necessary to update existing databases\nto newer versions of Nominatim.  SQL statements should be executed from the postgres commandline. Execute psql nominiatim  to enter command line mode.",
            "title": "Database Migrations"
        },
        {
            "location": "/admin/Migration/#300-310",
            "text": "",
            "title": "3.0.0 -&gt; 3.1.0"
        },
        {
            "location": "/admin/Migration/#postcode-table",
            "text": "A new separate table for artificially computed postcode centroids was introduced.\nMigration to the new format is possible but  not recommended .  Create postcode table and indexes, running the following SQL statements:  CREATE TABLE location_postcode\n  (place_id BIGINT, parent_place_id BIGINT, rank_search SMALLINT,\n   rank_address SMALLINT, indexed_status SMALLINT, indexed_date TIMESTAMP,\n   country_code varchar(2), postcode TEXT,\n   geometry GEOMETRY(Geometry, 4326));\nCREATE INDEX idx_postcode_geometry ON location_postcode USING GIST (geometry);\nCREATE UNIQUE INDEX idx_postcode_id ON location_postcode USING BTREE (place_id);\nCREATE INDEX idx_postcode_postcode ON location_postcode USING BTREE (postcode);\nGRANT SELECT ON location_postcode TO \"www-data\";  Add postcode column to  location_area  tables with SQL statement:  ALTER TABLE location_area ADD COLUMN postcode TEXT;  Then reimport the functions:  ./utils/setup.php --create-functions --enable-diff-updates --create-partition-functions  Create appropriate triggers with SQL:  CREATE TRIGGER location_postcode_before_update BEFORE UPDATE ON location_postcode\n    FOR EACH ROW EXECUTE PROCEDURE postcode_update();  Finally populate the postcode table (will take a while):  ./utils/setup.php --calculate-postcodes --index --index-noanalyse  This will create a working database. You may also delete the old artificial\npostcodes now. Note that this may be expensive and is not absolutely necessary.\nThe following SQL statement will remove them:  DELETE FROM place_addressline a USING placex p\n WHERE a.address_place_id = p.place_id and p.osm_type = 'P';\nALTER TABLE placex DISABLE TRIGGER USER;\nDELETE FROM placex WHERE osm_type = 'P';\nALTER TABLE placex ENABLE TRIGGER USER;",
            "title": "Postcode Table"
        },
        {
            "location": "/admin/Faq/",
            "text": "Running Your Own Instance\n\n\nCan I import only a few countries and also keep them up to date?\n\n\nYou should use the extracts and updates from https://download.geofabrik.de.\nFor the intial import, download the countries you need and merge them.\nSee \nOSM Help\n\nfor examples how to do that. Use the resulting single osm file when\nrunning \nsetup.php\n.\n\n\nFor updates you need to download the change files for each country\nonce per day and apply them \nseparately\n using\n\n\n./utils/update.php --import-diff <filename> --index\n\n\n\n\nSee \nthis issue\n\nfor a script that runs the updates using osmosis.\n\n\nMy website shows: \nXML Parsing Error: XML or text declaration not at start of entity Location</code>.\n\n\nMake sure there are no spaces at the beginning of your \nsettings/local.php\n file.\n\n\nInstallation\n\n\nI accidentally killed the import process after it has been running for many hours. Can it be resumed?\n\n\nIt is possible if the import already got to the indexing stage.\nCheck the last line of output that was logged before the process\nwas killed. If it looks like this:\n\n\nDone 844 in 13 @ 64.923080 per second - Rank 26 ETA (seconds): 7.886255\n\n\n\n\nthen you can resume with the following command:\n\n\n./utils/setup.php --index --create-search-indices --create-country-names\n\n\n\n\nIf the reported rank is 26 or higher, you can also safely add \n--index-noanalyse\n.\n\n\nWhen running the setup.php script I get a warning:\n\n\n`PHP Warning:  file_get_contents(): open_basedir restriction in effect.`\n\n\n\n\nYou need to adjust the \nopen_basedir\n setting\nin your PHP configuration (php.ini file). By default this setting may look like this:\n\n\nopen_basedir = /srv/http/:/home/:/tmp/:/usr/share/pear/\n\n\n\n\nEither add reported directories to the list or disable this setting temporarily by \ndding \";\" at the beginning of the line. Don't forget to enable this setting again\nonce you are done with the PHP command line operations.\n\n\nThe Apache log contains lots of PHP warnings like this:\n\n\n`PHP Warning:  date_default_timezone_set() function.`\n\n\n\n\nYou should set the default time zone as instructed in the warning in\nyour \nphp.ini\n file. Find the entry about timezone and set it to\nsomething like this:\n\n\n; Defines the default timezone used by the date functions\n; http://php.net/date.timezone\ndate.timezone = 'America/Denver'\n\n\n\n\nOr\n\n\necho \"date.timezone = 'America/Denver'\" > /etc/php.d/timezone.ini\n\n\n\n\nWhen running the import I get a version mismatch:\n\n\n`COPY_END for place failed: ERROR: incompatible library \"/opt/Nominatim/module/nominatim.so\": version mismatch`\n\n\n\n\npg_config seems to use bad includes sometimes when multiple versions\nof PostgreSQL are available in the system. Make sure you remove the\nserver development libraries (\npostgresql-server-dev-9.1\n on Ubuntu)\nand recompile (\ncmake .. && make\n).\n\n\nI see the error: \nfunction transliteration(text) does not exist\n\n\nReinstall the nominatim functions with \nsetup.php --create--functions\n\nand check for any errors, e.g. a missing \nnominatim.so\n file.\n\n\nThe website shows: \nCould not get word tokens\n\n\nThe server cannot access your database. Add \n&debug=1\n to your URL\nto get the full error message.\n\n\nOn CentOS the website shows \ncould not connect to server: No such file or directory\n\n\nOn CentOS v7 the PostgreSQL server is started with \nsystemd\n.\nCheck if \n/usr/lib/systemd/system/httpd.service\n contains a line \nPrivateTmp=true\n.\nIf so then Apache cannot see the \n/tmp/.s.PGSQL.5432\n file. It's a good security feature,\nso use the \npreferred solution\n.\n\n\nHowever, you can solve this the quick and dirty way by commenting out that line and then run\n\n\nsudo systemctl daemon-reload\nsudo systemctl restart httpd\n\n\n\n\nSetup.php fails with the message: \nDB Error: extension not found\n\n\nMake sure you have the Postgres extensions hstore and postgis installed.\nSee the installation instruction for a full list of required packages.\n\n\nWhen running the setup.php script I get a error:\n\n\n`Cannot redeclare getDB() (previously declared in /your/path/Nominatim/lib/db.php:4)`\n\n\n\n\nThe message is a bit misleading as PHP needs to load the file \nDB.php\n and\ninstead re-loads Nominatim's \ndb.php\n. To solve this make sure you\nhave the [http://pear.php.net/package/DB/ Pear module 'DB'] installed.\n\n\nsudo pear install DB\n\n\n\n\nI forgot to delete the flatnodes file before starting an import.\n\n\nThat's fine. For each import the flatnodes file get overwritten.\nSee https://help.openstreetmap.org/questions/52419/nominatim-flatnode-storage\nfor more information.",
            "title": "Troubleshooting"
        },
        {
            "location": "/admin/Faq/#running-your-own-instance",
            "text": "",
            "title": "Running Your Own Instance"
        },
        {
            "location": "/admin/Faq/#can-i-import-only-a-few-countries-and-also-keep-them-up-to-date",
            "text": "You should use the extracts and updates from https://download.geofabrik.de.\nFor the intial import, download the countries you need and merge them.\nSee  OSM Help \nfor examples how to do that. Use the resulting single osm file when\nrunning  setup.php .  For updates you need to download the change files for each country\nonce per day and apply them  separately  using  ./utils/update.php --import-diff <filename> --index  See  this issue \nfor a script that runs the updates using osmosis.",
            "title": "Can I import only a few countries and also keep them up to date?"
        },
        {
            "location": "/admin/Faq/#my-website-shows-xml-parsing-error-xml-or-text-declaration-not-at-start-of-entity-locationcode",
            "text": "Make sure there are no spaces at the beginning of your  settings/local.php  file.",
            "title": "My website shows: XML Parsing Error: XML or text declaration not at start of entity Location&lt;/code&gt;."
        },
        {
            "location": "/admin/Faq/#installation",
            "text": "",
            "title": "Installation"
        },
        {
            "location": "/admin/Faq/#i-accidentally-killed-the-import-process-after-it-has-been-running-for-many-hours-can-it-be-resumed",
            "text": "It is possible if the import already got to the indexing stage.\nCheck the last line of output that was logged before the process\nwas killed. If it looks like this:  Done 844 in 13 @ 64.923080 per second - Rank 26 ETA (seconds): 7.886255  then you can resume with the following command:  ./utils/setup.php --index --create-search-indices --create-country-names  If the reported rank is 26 or higher, you can also safely add  --index-noanalyse .",
            "title": "I accidentally killed the import process after it has been running for many hours. Can it be resumed?"
        },
        {
            "location": "/admin/Faq/#when-running-the-setupphp-script-i-get-a-warning",
            "text": "`PHP Warning:  file_get_contents(): open_basedir restriction in effect.`  You need to adjust the  open_basedir  setting\nin your PHP configuration (php.ini file). By default this setting may look like this:  open_basedir = /srv/http/:/home/:/tmp/:/usr/share/pear/  Either add reported directories to the list or disable this setting temporarily by \ndding \";\" at the beginning of the line. Don't forget to enable this setting again\nonce you are done with the PHP command line operations.",
            "title": "When running the setup.php script I get a warning:"
        },
        {
            "location": "/admin/Faq/#the-apache-log-contains-lots-of-php-warnings-like-this",
            "text": "`PHP Warning:  date_default_timezone_set() function.`  You should set the default time zone as instructed in the warning in\nyour  php.ini  file. Find the entry about timezone and set it to\nsomething like this:  ; Defines the default timezone used by the date functions\n; http://php.net/date.timezone\ndate.timezone = 'America/Denver'  Or  echo \"date.timezone = 'America/Denver'\" > /etc/php.d/timezone.ini",
            "title": "The Apache log contains lots of PHP warnings like this:"
        },
        {
            "location": "/admin/Faq/#when-running-the-import-i-get-a-version-mismatch",
            "text": "`COPY_END for place failed: ERROR: incompatible library \"/opt/Nominatim/module/nominatim.so\": version mismatch`  pg_config seems to use bad includes sometimes when multiple versions\nof PostgreSQL are available in the system. Make sure you remove the\nserver development libraries ( postgresql-server-dev-9.1  on Ubuntu)\nand recompile ( cmake .. && make ).",
            "title": "When running the import I get a version mismatch:"
        },
        {
            "location": "/admin/Faq/#i-see-the-error-function-transliterationtext-does-not-exist",
            "text": "Reinstall the nominatim functions with  setup.php --create--functions \nand check for any errors, e.g. a missing  nominatim.so  file.",
            "title": "I see the error: function transliteration(text) does not exist"
        },
        {
            "location": "/admin/Faq/#the-website-shows-could-not-get-word-tokens",
            "text": "The server cannot access your database. Add  &debug=1  to your URL\nto get the full error message.",
            "title": "The website shows: Could not get word tokens"
        },
        {
            "location": "/admin/Faq/#on-centos-the-website-shows-could-not-connect-to-server-no-such-file-or-directory",
            "text": "On CentOS v7 the PostgreSQL server is started with  systemd .\nCheck if  /usr/lib/systemd/system/httpd.service  contains a line  PrivateTmp=true .\nIf so then Apache cannot see the  /tmp/.s.PGSQL.5432  file. It's a good security feature,\nso use the  preferred solution .  However, you can solve this the quick and dirty way by commenting out that line and then run  sudo systemctl daemon-reload\nsudo systemctl restart httpd",
            "title": "On CentOS the website shows could not connect to server: No such file or directory"
        },
        {
            "location": "/admin/Faq/#setupphp-fails-with-the-message-db-error-extension-not-found",
            "text": "Make sure you have the Postgres extensions hstore and postgis installed.\nSee the installation instruction for a full list of required packages.",
            "title": "Setup.php fails with the message: DB Error: extension not found"
        },
        {
            "location": "/admin/Faq/#when-running-the-setupphp-script-i-get-a-error",
            "text": "`Cannot redeclare getDB() (previously declared in /your/path/Nominatim/lib/db.php:4)`  The message is a bit misleading as PHP needs to load the file  DB.php  and\ninstead re-loads Nominatim's  db.php . To solve this make sure you\nhave the [http://pear.php.net/package/DB/ Pear module 'DB'] installed.  sudo pear install DB",
            "title": "When running the setup.php script I get a error:"
        },
        {
            "location": "/admin/Faq/#i-forgot-to-delete-the-flatnodes-file-before-starting-an-import",
            "text": "That's fine. For each import the flatnodes file get overwritten.\nSee https://help.openstreetmap.org/questions/52419/nominatim-flatnode-storage\nfor more information.",
            "title": "I forgot to delete the flatnodes file before starting an import."
        },
        {
            "location": "/appendix/Install-on-Centos-7/",
            "text": "Note:\n these installation instructions are also available in executable\n        form for use with vagrant under \nvagrant/Install-on-Centos-7.sh\n.\n\n\nInstalling the Required Software\n\n\nThese instructions expect that you have a freshly installed CentOS version 7.\nMake sure all packages are up-to-date by running:\n\n\nsudo yum update -y\n\n\n\n\nThe standard CentOS repositories don't contain all the required packages,\nyou need to enable the EPEL repository as well. To enable it on CentOS,\ninstall the epel-release RPM by running:\n\n\nsudo yum install -y epel-release\n\n\n\n\nNow you can install all packages needed for Nominatim:\n\n\nsudo yum install -y postgresql-server postgresql-contrib postgresql-devel \\\n                    postgis postgis-utils \\\n                    cmake make gcc gcc-c++ libtool policycoreutils-python \\\n                    php-pgsql php php-pear php-pear-DB php-intl libpqxx-devel \\\n                    proj-epsg bzip2-devel proj-devel libxml2-devel boost-devel \\\n                    expat-devel zlib-devel\n\n\n\n\nIf you want to run the test suite, you need to install the following\nadditional packages:\n\n\nsudo yum install -y python34-pip python34-setuptools python34-devel \\\n                    php-phpunit-PHPUnit\npip3 install --user behave nose pytidylib psycopg2\nsudo pear install PHP_CodeSniffer\n\n\n\n\nSystem Configuration\n\n\nThe following steps are meant to configure a fresh CentOS installation\nfor use with Nominatim. You may skip some of the steps if you have your\nOS already configured.\n\n\nCreating Dedicated User Accounts\n\n\nNominatim will run as a global service on your machine. It is therefore\nbest to install it under its own separate user account. In the following\nwe assume this user is called nominatim and the installation will be in\n/srv/nominatim. To create the user and directory run:\n\n\nsudo useradd -d /srv/nominatim -s /bin/bash -m nominatim\n\n\n\n\nYou may find a more suitable location if you wish.\n\n\nTo be able to copy and paste instructions from this manual, export\nuser name and home directory now like this:\n\n\nexport USERNAME=nominatim\nexport USERHOME=/srv/nominatim\n\n\n\n\nNever, ever run the installation as a root user.\n You have been warned.\n\n\nMake sure that system servers can read from the home directory:\n\n\nchmod a+x $USERHOME\n\n\n\n\nSetting up PostgreSQL\n\n\nCentOS does not automatically create a database cluster. Therefore, start\nwith initializing the database, then enable the server to start at boot:\n\n\nsudo postgresql-setup initdb\nsudo systemctl enable postgresql\n\n\n\n\nNext tune the postgresql configuration, which is located in \n\n/var/lib/pgsql/data/postgresql.conf\n. See section \nPostgres Tuning\n in\n\nthe installation page\n\nfor the parameters to change.\n\n\nNow start the postgresql service after updating this config file.\n\n\nsudo systemctl restart postgresql\n\n\n\n\nFinally, we need to add two postgres users: one for the user that does\nthe import and another for the webserver which should access the database\nonly for reading:\n\n\nsudo -u postgres createuser -s $USERNAME\nsudo -u postgres createuser apache\n\n\n\n\nSetting up the Apache Webserver\n\n\nYou need to create an alias to the website directory in your apache\nconfiguration. Add a separate nominatim configuration to your webserver:\n\n\nsudo tee /etc/httpd/conf.d/nominatim.conf << EOFAPACHECONF\n<Directory \"$USERHOME/Nominatim-3.1.0/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\n\nAlias /nominatim $USERHOME/Nominatim-3.1.0/build/website\nEOFAPACHECONF\n\n\n\n\nThen reload apache\n\n\nsudo systemctl restart httpd\n\n\n\n\nAdding SELinux Security Settings\n\n\nIt is a good idea to leave SELinux enabled and enforcing, particularly\nwith a web server accessible from the Internet. At a minimum the\nfollowing SELinux labeling should be done for Nominatim:\n\n\nsudo semanage fcontext -a -t httpd_sys_content_t \"$USERHOME/Nominatim-3.1.0/(website|lib|settings)(/.*)?\"\nsudo semanage fcontext -a -t lib_t \"$USERHOME/Nominatim-3.1.0/module/nominatim.so\"\nsudo restorecon -R -v $USERHOME/Nominatim-3.1.0\n\n\n\n\nInstalling Nominatim\n\n\nBuilding and Configuration\n\n\nGet the source code for the release and change into the source directory\n\n\ncd $USERHOME\nwget https://nominatim.org/release/Nominatim-3.1.0.tar.bz2\ntar xf Nominatim-3.1.0.tar.bz2\ncd Nominatim-3.1.0\n\n\n\n\nWhen installing the latest source from github, you also need to\ndownload the country grid:\n\n\nwget -O data/country_osm_grid.sql.gz https://www.nominatim.org/data/country_grid.sql.gz\n\n\n\n\nThe code must be built in a separate directory. Create this directory,\nthen configure and build Nominatim in there:\n\n\nmkdir build\ncd build\ncmake ..\nmake\n\n\n\n\nYou need to create a minimal configuration file that tells nominatim\nthe name of your webserver user and the URL of the website:\n\n\ntee settings/local.php << EOF\n<?php\n @define('CONST_Database_Web_User', 'apache');\n @define('CONST_Website_BaseURL', '/nominatim/');\nEOF\n\n\n\n\nNominatim is now ready to use. Continue with\n\nimporting a database from OSM data\n.",
            "title": "Installation on CentOS 7"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#installing-the-required-software",
            "text": "These instructions expect that you have a freshly installed CentOS version 7.\nMake sure all packages are up-to-date by running:  sudo yum update -y  The standard CentOS repositories don't contain all the required packages,\nyou need to enable the EPEL repository as well. To enable it on CentOS,\ninstall the epel-release RPM by running:  sudo yum install -y epel-release  Now you can install all packages needed for Nominatim:  sudo yum install -y postgresql-server postgresql-contrib postgresql-devel \\\n                    postgis postgis-utils \\\n                    cmake make gcc gcc-c++ libtool policycoreutils-python \\\n                    php-pgsql php php-pear php-pear-DB php-intl libpqxx-devel \\\n                    proj-epsg bzip2-devel proj-devel libxml2-devel boost-devel \\\n                    expat-devel zlib-devel  If you want to run the test suite, you need to install the following\nadditional packages:  sudo yum install -y python34-pip python34-setuptools python34-devel \\\n                    php-phpunit-PHPUnit\npip3 install --user behave nose pytidylib psycopg2\nsudo pear install PHP_CodeSniffer",
            "title": "Installing the Required Software"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#system-configuration",
            "text": "The following steps are meant to configure a fresh CentOS installation\nfor use with Nominatim. You may skip some of the steps if you have your\nOS already configured.",
            "title": "System Configuration"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#creating-dedicated-user-accounts",
            "text": "Nominatim will run as a global service on your machine. It is therefore\nbest to install it under its own separate user account. In the following\nwe assume this user is called nominatim and the installation will be in\n/srv/nominatim. To create the user and directory run:  sudo useradd -d /srv/nominatim -s /bin/bash -m nominatim  You may find a more suitable location if you wish.  To be able to copy and paste instructions from this manual, export\nuser name and home directory now like this:  export USERNAME=nominatim\nexport USERHOME=/srv/nominatim  Never, ever run the installation as a root user.  You have been warned.  Make sure that system servers can read from the home directory:  chmod a+x $USERHOME",
            "title": "Creating Dedicated User Accounts"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#setting-up-postgresql",
            "text": "CentOS does not automatically create a database cluster. Therefore, start\nwith initializing the database, then enable the server to start at boot:  sudo postgresql-setup initdb\nsudo systemctl enable postgresql  Next tune the postgresql configuration, which is located in  /var/lib/pgsql/data/postgresql.conf . See section  Postgres Tuning  in the installation page \nfor the parameters to change.  Now start the postgresql service after updating this config file.  sudo systemctl restart postgresql  Finally, we need to add two postgres users: one for the user that does\nthe import and another for the webserver which should access the database\nonly for reading:  sudo -u postgres createuser -s $USERNAME\nsudo -u postgres createuser apache",
            "title": "Setting up PostgreSQL"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#setting-up-the-apache-webserver",
            "text": "You need to create an alias to the website directory in your apache\nconfiguration. Add a separate nominatim configuration to your webserver:  sudo tee /etc/httpd/conf.d/nominatim.conf << EOFAPACHECONF\n<Directory \"$USERHOME/Nominatim-3.1.0/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\n\nAlias /nominatim $USERHOME/Nominatim-3.1.0/build/website\nEOFAPACHECONF  Then reload apache  sudo systemctl restart httpd",
            "title": "Setting up the Apache Webserver"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#adding-selinux-security-settings",
            "text": "It is a good idea to leave SELinux enabled and enforcing, particularly\nwith a web server accessible from the Internet. At a minimum the\nfollowing SELinux labeling should be done for Nominatim:  sudo semanage fcontext -a -t httpd_sys_content_t \"$USERHOME/Nominatim-3.1.0/(website|lib|settings)(/.*)?\"\nsudo semanage fcontext -a -t lib_t \"$USERHOME/Nominatim-3.1.0/module/nominatim.so\"\nsudo restorecon -R -v $USERHOME/Nominatim-3.1.0",
            "title": "Adding SELinux Security Settings"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#installing-nominatim",
            "text": "",
            "title": "Installing Nominatim"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#building-and-configuration",
            "text": "Get the source code for the release and change into the source directory  cd $USERHOME\nwget https://nominatim.org/release/Nominatim-3.1.0.tar.bz2\ntar xf Nominatim-3.1.0.tar.bz2\ncd Nominatim-3.1.0  When installing the latest source from github, you also need to\ndownload the country grid:  wget -O data/country_osm_grid.sql.gz https://www.nominatim.org/data/country_grid.sql.gz  The code must be built in a separate directory. Create this directory,\nthen configure and build Nominatim in there:  mkdir build\ncd build\ncmake ..\nmake  You need to create a minimal configuration file that tells nominatim\nthe name of your webserver user and the URL of the website:  tee settings/local.php << EOF\n<?php\n @define('CONST_Database_Web_User', 'apache');\n @define('CONST_Website_BaseURL', '/nominatim/');\nEOF  Nominatim is now ready to use. Continue with importing a database from OSM data .",
            "title": "Building and Configuration"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/",
            "text": "Note:\n these installation instructions are also available in executable\n        form for use with vagrant under vagrant/Install-on-Ubuntu-16.sh.\n\n\nInstalling the Required Software\n\n\nThese instructions expect that you have a freshly installed Ubuntu 16.04.\n\n\nMake sure all packages are are up-to-date by running:\n\n\nsudo apt-get update -qq\n\n\n\n\nNow you can install all packages needed for Nominatim:\n\n\nsudo apt-get install -y build-essential cmake g++ libboost-dev libboost-system-dev \\\n                        libboost-filesystem-dev libexpat1-dev zlib1g-dev libxml2-dev\\\n                        libbz2-dev libpq-dev libproj-dev \\\n                        postgresql-server-dev-9.5 postgresql-9.5-postgis-2.2 \\\n                        postgresql-contrib-9.5 \\\n                        apache2 php php-pgsql libapache2-mod-php php-pear php-db \\\n                        php-intl\n\n\n\n\nIf you want to run the test suite, you need to install the following\nadditional packages:\n\n\nsudo apt-get install -y python3-setuptools python3-dev python3-pip \\\n                        python3-psycopg2 python3-tidylib phpunit php-cgi\n\npip3 install --user behave nose\nsudo pear install PHP_CodeSniffer\n\n\n\n\nSystem Configuration\n\n\nThe following steps are meant to configure a fresh Ubuntu installation\nfor use with Nominatim. You may skip some of the steps if you have your\nOS already configured.\n\n\nCreating Dedicated User Accounts\n\n\nNominatim will run as a global service on your machine. It is therefore\nbest to install it under its own separate user account. In the following\nwe assume this user is called nominatim and the installation will be in\n/srv/nominatim. To create the user and directory run:\n\n\nsudo useradd -d /srv/nominatim -s /bin/bash -m nominatim\n\n\n\n\nYou may find a more suitable location if you wish.\n\n\nTo be able to copy and paste instructions from this manual, export\nuser name and home directory now like this:\n\n\nexport USERNAME=nominatim\nexport USERHOME=/srv/nominatim\n\n\n\n\nNever, ever run the installation as a root user.\n You have been warned.\n\n\nMake sure that system servers can read from the home directory:\n\n\nchmod a+x $USERHOME\n\n\n\n\nSetting up PostgreSQL\n\n\nTune the postgresql configuration, which is located in \n\n/etc/postgresql/9.5/main/postgresql.conf\n. See section \nPostgres Tuning\n in\n\nthe installation page\n\nfor the parameters to change.\n\n\nRestart the postgresql service after updating this config file.\n\n\nsudo systemctl restart postgresql\n\n\n\n\nFinally, we need to add two postgres users: one for the user that does\nthe import and another for the webserver which should access the database\nfor reading only:\n\n\nsudo -u postgres createuser -s $USERNAME\nsudo -u postgres createuser www-data\n\n\n\n\nSetting up the Apache Webserver\n\n\nYou need to create an alias to the website directory in your apache\nconfiguration. Add a separate nominatim configuration to your webserver:\n\n\nsudo tee /etc/apache2/conf-available/nominatim.conf << EOFAPACHECONF\n<Directory \"$USERHOME/Nominatim-3.1.0/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\n\nAlias /nominatim $USERHOME/Nominatim-3.1.0/build/website\nEOFAPACHECONF\n\n\n\n\nThen enable the configuration and restart apache\n\n\nsudo a2enconf nominatim\nsudo systemctl restart apache2\n\n\n\n\nInstalling Nominatim\n\n\nBuilding and Configuration\n\n\nGet the source code for the release and change into the source directory\n\n\ncd $USERHOME\nwget https://nominatim.org/release/Nominatim-3.1.0.tar.bz2\ntar xf Nominatim-3.1.0.tar.bz2\ncd Nominatim-3.1.0\n\n\n\n\nWhen installing the latest source from github, you also need to\ndownload the country grid:\n\n\nwget -O data/country_osm_grid.sql.gz https://www.nominatim.org/data/country_grid.sql.gz\n\n\n\n\nThe code must be built in a separate directory. Create this directory,\nthen configure and build Nominatim in there:\n\n\nmkdir build\ncd build\ncmake ..\nmake\n\n\n\n\nYou need to create a minimal configuration file that tells nominatim\nwhere it is located on the webserver:\n\n\ntee settings/local.php << EOF\n<?php\n @define('CONST_Website_BaseURL', '/nominatim/');\nEOF\n\n\n\n\nNominatim is now ready to use. Continue with\n\nimporting a database from OSM data\n.",
            "title": "Installation on Ubuntu 16"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#installing-the-required-software",
            "text": "These instructions expect that you have a freshly installed Ubuntu 16.04.  Make sure all packages are are up-to-date by running:  sudo apt-get update -qq  Now you can install all packages needed for Nominatim:  sudo apt-get install -y build-essential cmake g++ libboost-dev libboost-system-dev \\\n                        libboost-filesystem-dev libexpat1-dev zlib1g-dev libxml2-dev\\\n                        libbz2-dev libpq-dev libproj-dev \\\n                        postgresql-server-dev-9.5 postgresql-9.5-postgis-2.2 \\\n                        postgresql-contrib-9.5 \\\n                        apache2 php php-pgsql libapache2-mod-php php-pear php-db \\\n                        php-intl  If you want to run the test suite, you need to install the following\nadditional packages:  sudo apt-get install -y python3-setuptools python3-dev python3-pip \\\n                        python3-psycopg2 python3-tidylib phpunit php-cgi\n\npip3 install --user behave nose\nsudo pear install PHP_CodeSniffer",
            "title": "Installing the Required Software"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#system-configuration",
            "text": "The following steps are meant to configure a fresh Ubuntu installation\nfor use with Nominatim. You may skip some of the steps if you have your\nOS already configured.",
            "title": "System Configuration"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#creating-dedicated-user-accounts",
            "text": "Nominatim will run as a global service on your machine. It is therefore\nbest to install it under its own separate user account. In the following\nwe assume this user is called nominatim and the installation will be in\n/srv/nominatim. To create the user and directory run:  sudo useradd -d /srv/nominatim -s /bin/bash -m nominatim  You may find a more suitable location if you wish.  To be able to copy and paste instructions from this manual, export\nuser name and home directory now like this:  export USERNAME=nominatim\nexport USERHOME=/srv/nominatim  Never, ever run the installation as a root user.  You have been warned.  Make sure that system servers can read from the home directory:  chmod a+x $USERHOME",
            "title": "Creating Dedicated User Accounts"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#setting-up-postgresql",
            "text": "Tune the postgresql configuration, which is located in  /etc/postgresql/9.5/main/postgresql.conf . See section  Postgres Tuning  in the installation page \nfor the parameters to change.  Restart the postgresql service after updating this config file.  sudo systemctl restart postgresql  Finally, we need to add two postgres users: one for the user that does\nthe import and another for the webserver which should access the database\nfor reading only:  sudo -u postgres createuser -s $USERNAME\nsudo -u postgres createuser www-data",
            "title": "Setting up PostgreSQL"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#setting-up-the-apache-webserver",
            "text": "You need to create an alias to the website directory in your apache\nconfiguration. Add a separate nominatim configuration to your webserver:  sudo tee /etc/apache2/conf-available/nominatim.conf << EOFAPACHECONF\n<Directory \"$USERHOME/Nominatim-3.1.0/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\n\nAlias /nominatim $USERHOME/Nominatim-3.1.0/build/website\nEOFAPACHECONF  Then enable the configuration and restart apache  sudo a2enconf nominatim\nsudo systemctl restart apache2",
            "title": "Setting up the Apache Webserver"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#installing-nominatim",
            "text": "",
            "title": "Installing Nominatim"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#building-and-configuration",
            "text": "Get the source code for the release and change into the source directory  cd $USERHOME\nwget https://nominatim.org/release/Nominatim-3.1.0.tar.bz2\ntar xf Nominatim-3.1.0.tar.bz2\ncd Nominatim-3.1.0  When installing the latest source from github, you also need to\ndownload the country grid:  wget -O data/country_osm_grid.sql.gz https://www.nominatim.org/data/country_grid.sql.gz  The code must be built in a separate directory. Create this directory,\nthen configure and build Nominatim in there:  mkdir build\ncd build\ncmake ..\nmake  You need to create a minimal configuration file that tells nominatim\nwhere it is located on the webserver:  tee settings/local.php << EOF\n<?php\n @define('CONST_Website_BaseURL', '/nominatim/');\nEOF  Nominatim is now ready to use. Continue with importing a database from OSM data .",
            "title": "Building and Configuration"
        }
    ]
}