{
    "docs": [
        {
            "location": "/",
            "text": "Nominatim (from the Latin, 'by name') is a tool to search OSM data by name and address and to generate synthetic addresses of OSM points (reverse geocoding).\n\n\nThis guide comes in three parts:\n\n\n\n\nAPI reference\n for users of Nominatim\n\n\nAdministration Guide\n for those who want\n   to install their own Nominatim server\n\n\nDeveloper's Guide\n for developers of the software",
            "title": "Introduction"
        },
        {
            "location": "/api/Overview/",
            "text": "Nominatim API\n\uf0c1\n\n\nNominatim indexes named (or numbered) features within the OpenStreetMap (OSM) dataset and a subset of other unnamed features (pubs, hotels, churches, etc).\n\n\nIts API has the following endpoints for querying the data:\n\n\n\n\n/search\n - search OSM objects by name or type\n\n\n/reverse\n - search OSM object by their location\n\n\n/lookup\n - look up address details for OSM objects by their ID\n\n\n/status\n - query the status of the server\n\n\n/deletable\n - list objects that have been deleted in OSM but are held\n                    back in Nominatim in case the deletion was accidental\n\n\n/polygons\n - list of broken polygons detected by Nominatim\n\n\n/details\n - show internal details for an object (for debugging only)",
            "title": "Overview"
        },
        {
            "location": "/api/Overview/#nominatim-api",
            "text": "Nominatim indexes named (or numbered) features within the OpenStreetMap (OSM) dataset and a subset of other unnamed features (pubs, hotels, churches, etc).  Its API has the following endpoints for querying the data:   /search  - search OSM objects by name or type  /reverse  - search OSM object by their location  /lookup  - look up address details for OSM objects by their ID  /status  - query the status of the server  /deletable  - list objects that have been deleted in OSM but are held\n                    back in Nominatim in case the deletion was accidental  /polygons  - list of broken polygons detected by Nominatim  /details  - show internal details for an object (for debugging only)",
            "title": "Nominatim API"
        },
        {
            "location": "/api/Search/",
            "text": "Search queries\n\uf0c1\n\n\nThe search API allows to look up a location from a textual description.\nNominatim supports structured as well as free-form search queries.\n\n\nThe search query may also contain\n\nspecial phrases\n\nwhich are translated into specific OpenStreetMap (OSM) tags (e.g. Pub => \namenity=pub\n).\nNote that this only limits the items to be found, it's not suited to return complete\nlists of OSM objects of a specific type. For those use \nOverpass API\n.\n\n\nParameters\n\uf0c1\n\n\nThe search API has the following two formats:\n\n\n   https://nominatim.openstreetmap.org/search/<query>?<params>\n\n\n\n\nThis format only accepts a free-form query string where the\nparts of the query are separated by slashes.\n\n\n   https://nominatim.openstreetmap.org/search?<params>\n\n\n\n\nIn this form, the query may be given through two different sets of parameters:\n\n\n\n\n\n\nq=<query>\n\n\nFree-form query string to search for.\nFree-form queries are processed first left-to-right and then right-to-left if that fails. So you may search for\n\npilkington avenue, birmingham\n as well as for\n\nbirmingham, pilkington avenue\n.\nCommas are optional, but improve performance by reducing the complexity of the search.\n\n\n\n\n\n\nstreet=<housenumber> <streetname>\n\n\n\n\ncity=<city>\n\n\ncounty=<county>\n\n\nstate=<state>\n\n\ncountry=<country>\n\n\n\n\npostalcode=<postalcode>\n\n\nAlternative query string format split into several parameters for structured requests.\nStructured requests are faster but are less robust against alternative\nOSM tagging schemas. \nDo not combine with\n \nq=<query>\n \nparameter\n.\n\n\n\n\n\n\nAll three query forms accept the additional paramters listed below.\n\n\nOutput format\n\uf0c1\n\n\n\n\nformat=[html|xml|json|jsonv2|geojson|geocodejson]\n\n\n\n\nSee \nPlace Output Formats\n for details on each format. (Default: html)\n\n\n\n\njson_callback=<string>\n\n\n\n\nWrap json output in a callback function (\nJSONP\n) i.e. \n<string>(<json>)\n.\nOnly has an effect for JSON output formats.\n\n\nOutput details\n\uf0c1\n\n\n\n\naddressdetails=[0|1]\n\n\n\n\nInclude a breakdown of the address into elements. (Default: 0)\n\n\n\n\nextratags=[0|1]\n\n\n\n\nInclude additional information in the result if available,\ne.g. wikipedia link, opening hours. (Default: 0)\n\n\n\n\nnamedetails=[0|1]\n\n\n\n\nInclude a list of alternative names in the results. These may include\nlanguage variants, references, operator and brand. (Default: 0)\n\n\nLanguage of results\n\uf0c1\n\n\n\n\naccept-language=<browser language string>\n\n\n\n\nPreferred language order for showing search results, overrides the value\nspecified in the \n\"Accept-Language\" HTTP header\n.\nEither use a standard RFC2616 accept-language string or a simple\ncomma-separated list of language codes.\n\n\nResult limitation\n\uf0c1\n\n\n\n\ncountrycodes=<countrycode>[,<countrycode>][,<countrycode>]...\n\n\n\n\nLimit search results to one or more countries. \n<countrycode>\n must be the\nISO 3166-1alpha2 code, e.g. \ngb\n for the United Kingdom, \nde\n for Germany.\n\n\n\n\nexclude_place_ids=<place_id,[place_id],[place_id]\n\n\n\n\nIf you do not want certain OSM objects to appear in the search\nresult, give a comma separated list of the \nplace_id\ns you want to skip.\nThis can be used to broaden search results. For example, if a previous\nquery only returned a few results, then including those here would cause\nthe search to return other, less accurate, matches (if possible).\n\n\n\n\nlimit=<integer>\n\n\n\n\nLimit the number of returned results. (Default: 10, Maximum: 50)\n\n\n\n\nviewbox=<x1>,<y1>,<x2>,<y2>\n\n\n\n\nThe preferred area to find search results. Any two corner points of the box\nare accepted in any order as long as they span a real box.\n\n\n\n\nbounded=[0|1]\n\n\n\n\nWhen a viewbox is given, restrict the result to items contained with that\nviewbox (see above). When \nviewbox\n and \nbounded=1\n are given, an amenity\nonly search is allowed. In this case, give the special keyword for the\namenity in square brackets, e.g. \n[pub]\n. (Default: 0)\n\n\nPolygon output\n\uf0c1\n\n\n\n\npolygon_geojson=1\n\n\npolygon_kml=1\n\n\npolygon_svg=1\n\n\npolygon_text=1\n\n\n\n\nOutput geometry of results as a GeoJSON, KML, SVG or WKT. Only one of these\noptions can be used at a time. (Default: 0)\n\n\n\n\npolygon_threshold=0.0\n\n\n\n\nSimplify the output geometry before returning. The parameter is the\ntolerance in degrees with which the geometry may differ from the original\ngeometry. Topology is preserved in the result. (Default: 0.0)\n\n\nOther\n\uf0c1\n\n\n\n\nemail=<valid email address>\n\n\n\n\nIf you are making large numbers of request please include an appropriate email\naddress to identify your requests. See Nominatim's \nUsage Policy\n for more details.\n\n\n\n\ndedupe=[0|1]\n\n\n\n\nSometimes you have several objects in OSM identifying the same place or\nobject in reality. The simplest case is a street being split in many\ndifferent OSM ways due to different characteristics. Nominatim will\nattempt to detect such duplicates and only return one match unless\nthis parameter is set to 0. (Default: 1)\n\n\n\n\ndebug=[0|1]\n\n\n\n\nOutput assorted developer debug information. Data on internals of Nominatim's\n\"Search Loop\" logic, and SQL queries. The output is (rough) HTML format.\nThis overrides the specified machine readable format. (Default: 0)\n\n\nExamples\n\uf0c1\n\n\nXML with polygon points\n\uf0c1\n\n\n\n\nhttps://nominatim.openstreetmap.org/search?q=135+pilkington+avenue,+birmingham&format=xml&polygon=1&addressdetails=1\n\n\nhttps://nominatim.openstreetmap.org/search/gb/birmingham/pilkington%20avenue/135?format=xml&polygon=1&addressdetails=1\n\n\nhttps://nominatim.openstreetmap.org/search/135%20pilkington%20avenue,%20birmingham?format=xml&polygon=1&addressdetails=1\n\n\n\n\n  <searchresults timestamp=\"Sat, 07 Nov 09 14:42:10 +0000\" querystring=\"135 pilkington, avenue birmingham\" polygon=\"true\">\n    <place \n      place_id=\"1620612\" osm_type=\"node\" osm_id=\"452010817\" \n      boundingbox=\"52.548641204834,52.5488433837891,-1.81612110137939,-1.81592094898224\" \n      polygonpoints=\"[['-1.81592098644987','52.5487429714954'],['-1.81592290792183','52.5487234624632'],...]\" \n      lat=\"52.5487429714954\" lon=\"-1.81602098644987\" \n      display_name=\"135, Pilkington Avenue, Wylde Green, City of Birmingham, West Midlands (county), B72, United Kingdom\" \n      class=\"place\" type=\"house\">\n      <house_number>135</house_number>\n      <road>Pilkington Avenue</road>\n      <village>Wylde Green</village>\n      <town>Sutton Coldfield</town>\n      <city>City of Birmingham</city>\n      <county>West Midlands (county)</county>\n      <postcode>B72</postcode>\n      <country>United Kingdom</country>\n      <country_code>gb</country_code>\n    </place>\n  </searchresults>\n\n\n\n\nJSON with SVG polygon\n\uf0c1\n\n\nhttps://nominatim.openstreetmap.org/search/Unter%20den%20Linden%201%20Berlin?format=json&addressdetails=1&limit=1&polygon_svg=1\n\n\n    {\n        \"address\": {\n            \"city\": \"Berlin\",\n            \"city_district\": \"Mitte\",\n            \"construction\": \"Unter den Linden\",\n            \"continent\": \"European Union\",\n            \"country\": \"Deutschland\",\n            \"country_code\": \"de\",\n            \"house_number\": \"1\",\n            \"neighbourhood\": \"Scheunenviertel\",\n            \"postcode\": \"10117\",\n            \"public_building\": \"Kommandantenhaus\",\n            \"state\": \"Berlin\",\n            \"suburb\": \"Mitte\"\n        },\n        \"boundingbox\": [\n            \"52.5170783996582\",\n            \"52.5173187255859\",\n            \"13.3975105285645\",\n            \"13.3981599807739\"\n        ],\n        \"class\": \"amenity\",\n        \"display_name\": \"Kommandantenhaus, 1, Unter den Linden, Scheunenviertel, Mitte, Berlin, 10117, Deutschland, European Union\",\n        \"importance\": 0.73606775332943,\n        \"lat\": \"52.51719785\",\n        \"licence\": \"Data \\u00a9 OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\",\n        \"lon\": \"13.3978352028938\",\n        \"osm_id\": \"15976890\",\n        \"osm_type\": \"way\",\n        \"place_id\": \"30848715\",\n        \"svg\": \"M 13.397511 -52.517283599999999 L 13.397829400000001 -52.517299800000004 13.398131599999999 -52.517315099999998 13.398159400000001 -52.517112099999999 13.3975388 -52.517080700000001 Z\",\n        \"type\": \"public_building\"\n    }\n\n\n\n\nJSON with address details\n\uf0c1\n\n\nhttps://nominatim.openstreetmap.org/?format=json&addressdetails=1&q=bakery+in+berlin+wedding&format=json&limit=1\n\n\n    {\n        \"address\": {\n            \"bakery\": \"B\\u00e4cker Kamps\",\n            \"city_district\": \"Mitte\",\n            \"continent\": \"European Union\",\n            \"country\": \"Deutschland\",\n            \"country_code\": \"de\",\n            \"footway\": \"Bahnsteig U6\",\n            \"neighbourhood\": \"Sprengelkiez\",\n            \"postcode\": \"13353\",\n            \"state\": \"Berlin\",\n            \"suburb\": \"Wedding\"\n        },\n        \"boundingbox\": [\n            \"52.5460929870605\",\n            \"52.5460968017578\",\n            \"13.3591794967651\",\n            \"13.3591804504395\"\n        ],\n        \"class\": \"shop\",\n        \"display_name\": \"B\\u00e4cker Kamps, Bahnsteig U6, Sprengelkiez, Wedding, Mitte, Berlin, 13353, Deutschland, European Union\",\n        \"icon\": \"https://nominatim.openstreetmap.org/images/mapicons/shopping_bakery.p.20.png\",\n        \"importance\": 0.201,\n        \"lat\": \"52.5460941\",\n        \"licence\": \"Data \\u00a9 OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\",\n        \"lon\": \"13.35918\",\n        \"osm_id\": \"317179427\",\n        \"osm_type\": \"node\",\n        \"place_id\": \"1453068\",\n        \"type\": \"bakery\"\n    }\n\n\n\n\nGeoJSON\n\uf0c1\n\n\nhttps://nominatim.openstreetmap.org/search?q=17+Strada+Pictor+Alexandru+Romano%2C+Bukarest&format=geojson\n\n\n{\n  \"type\": \"FeatureCollection\",\n  \"licence\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"place_id\": \"35811445\",\n        \"osm_type\": \"node\",\n        \"osm_id\": \"2846295644\",\n        \"display_name\": \"17, Strada Pictor Alexandru Romano, Bukarest, Bucharest, Sector 2, Bucharest, 023964, Romania\",\n        \"place_rank\": \"30\",\n        \"category\": \"place\",\n        \"type\": \"house\",\n        \"importance\": 0.62025\n      },\n      \"bbox\": [\n        26.1156689,\n        44.4354754,\n        26.1157689,\n        44.4355754\n      ],\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          26.1157189,\n          44.4355254\n        ]\n      }\n    }\n  ]\n}\n\n\n\n\nGeocodeJSON\n\uf0c1\n\n\nhttps://nominatim.openstreetmap.org/search?q=%CE%91%CE%B3%CE%AF%CE%B1+%CE%A4%CF%81%CE%B9%CE%AC%CE%B4%CE%B1%2C+%CE%91%CE%B4%CF%89%CE%BD%CE%B9%CE%B4%CE%BF%CF%82%2C+Athens%2C+Greece&format=geocodejson\n\n\n{\n  \"type\": \"FeatureCollection\",\n  \"geocoding\": {\n    \"version\": \"0.1.0\",\n    \"attribution\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n    \"licence\": \"ODbL\",\n    \"query\": \"\u0391\u03b3\u03af\u03b1 \u03a4\u03c1\u03b9\u03ac\u03b4\u03b1, \u0391\u03b4\u03c9\u03bd\u03b9\u03b4\u03bf\u03c2, Athens, Greece\"\n  },\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"geocoding\": {\n          \"type\": \"place_of_worship\",\n          \"label\": \"\u0391\u03b3\u03af\u03b1 \u03a4\u03c1\u03b9\u03ac\u03b4\u03b1, \u0391\u03b4\u03c9\u03bd\u03b9\u03b4\u03bf\u03c2, \u0386\u03b3\u03b9\u03bf\u03c2 \u039d\u03b9\u03ba\u03cc\u03bb\u03b1\u03bf\u03c2, 5\u00ba \u0394\u03b7\u03bc\u03bf\u03c4\u03b9\u03ba\u03cc \u0394\u03b9\u03b1\u03bc\u03ad\u03c1\u03b9\u03c3\u03bc\u03b1 \u0391\u03b8\u03b7\u03bd\u03ce\u03bd, Athens, Municipality of Athens, Regional Unit of Central Athens, Region of Attica, Attica, 11472, Greece\",\n          \"name\": \"\u0391\u03b3\u03af\u03b1 \u03a4\u03c1\u03b9\u03ac\u03b4\u03b1\",\n          \"admin\": null\n        }\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          23.72949633941,\n          38.0051697\n        ]\n      }\n    }\n  ]\n}",
            "title": "Search"
        },
        {
            "location": "/api/Search/#search-queries",
            "text": "The search API allows to look up a location from a textual description.\nNominatim supports structured as well as free-form search queries.  The search query may also contain special phrases \nwhich are translated into specific OpenStreetMap (OSM) tags (e.g. Pub =>  amenity=pub ).\nNote that this only limits the items to be found, it's not suited to return complete\nlists of OSM objects of a specific type. For those use  Overpass API .",
            "title": "Search queries"
        },
        {
            "location": "/api/Search/#parameters",
            "text": "The search API has the following two formats:     https://nominatim.openstreetmap.org/search/<query>?<params>  This format only accepts a free-form query string where the\nparts of the query are separated by slashes.     https://nominatim.openstreetmap.org/search?<params>  In this form, the query may be given through two different sets of parameters:    q=<query>  Free-form query string to search for.\nFree-form queries are processed first left-to-right and then right-to-left if that fails. So you may search for pilkington avenue, birmingham  as well as for birmingham, pilkington avenue .\nCommas are optional, but improve performance by reducing the complexity of the search.    street=<housenumber> <streetname>   city=<city>  county=<county>  state=<state>  country=<country>   postalcode=<postalcode>  Alternative query string format split into several parameters for structured requests.\nStructured requests are faster but are less robust against alternative\nOSM tagging schemas.  Do not combine with   q=<query>   parameter .    All three query forms accept the additional paramters listed below.",
            "title": "Parameters"
        },
        {
            "location": "/api/Search/#output-format",
            "text": "format=[html|xml|json|jsonv2|geojson|geocodejson]   See  Place Output Formats  for details on each format. (Default: html)   json_callback=<string>   Wrap json output in a callback function ( JSONP ) i.e.  <string>(<json>) .\nOnly has an effect for JSON output formats.",
            "title": "Output format"
        },
        {
            "location": "/api/Search/#output-details",
            "text": "addressdetails=[0|1]   Include a breakdown of the address into elements. (Default: 0)   extratags=[0|1]   Include additional information in the result if available,\ne.g. wikipedia link, opening hours. (Default: 0)   namedetails=[0|1]   Include a list of alternative names in the results. These may include\nlanguage variants, references, operator and brand. (Default: 0)",
            "title": "Output details"
        },
        {
            "location": "/api/Search/#language-of-results",
            "text": "accept-language=<browser language string>   Preferred language order for showing search results, overrides the value\nspecified in the  \"Accept-Language\" HTTP header .\nEither use a standard RFC2616 accept-language string or a simple\ncomma-separated list of language codes.",
            "title": "Language of results"
        },
        {
            "location": "/api/Search/#result-limitation",
            "text": "countrycodes=<countrycode>[,<countrycode>][,<countrycode>]...   Limit search results to one or more countries.  <countrycode>  must be the\nISO 3166-1alpha2 code, e.g.  gb  for the United Kingdom,  de  for Germany.   exclude_place_ids=<place_id,[place_id],[place_id]   If you do not want certain OSM objects to appear in the search\nresult, give a comma separated list of the  place_id s you want to skip.\nThis can be used to broaden search results. For example, if a previous\nquery only returned a few results, then including those here would cause\nthe search to return other, less accurate, matches (if possible).   limit=<integer>   Limit the number of returned results. (Default: 10, Maximum: 50)   viewbox=<x1>,<y1>,<x2>,<y2>   The preferred area to find search results. Any two corner points of the box\nare accepted in any order as long as they span a real box.   bounded=[0|1]   When a viewbox is given, restrict the result to items contained with that\nviewbox (see above). When  viewbox  and  bounded=1  are given, an amenity\nonly search is allowed. In this case, give the special keyword for the\namenity in square brackets, e.g.  [pub] . (Default: 0)",
            "title": "Result limitation"
        },
        {
            "location": "/api/Search/#polygon-output",
            "text": "polygon_geojson=1  polygon_kml=1  polygon_svg=1  polygon_text=1   Output geometry of results as a GeoJSON, KML, SVG or WKT. Only one of these\noptions can be used at a time. (Default: 0)   polygon_threshold=0.0   Simplify the output geometry before returning. The parameter is the\ntolerance in degrees with which the geometry may differ from the original\ngeometry. Topology is preserved in the result. (Default: 0.0)",
            "title": "Polygon output"
        },
        {
            "location": "/api/Search/#other",
            "text": "email=<valid email address>   If you are making large numbers of request please include an appropriate email\naddress to identify your requests. See Nominatim's  Usage Policy  for more details.   dedupe=[0|1]   Sometimes you have several objects in OSM identifying the same place or\nobject in reality. The simplest case is a street being split in many\ndifferent OSM ways due to different characteristics. Nominatim will\nattempt to detect such duplicates and only return one match unless\nthis parameter is set to 0. (Default: 1)   debug=[0|1]   Output assorted developer debug information. Data on internals of Nominatim's\n\"Search Loop\" logic, and SQL queries. The output is (rough) HTML format.\nThis overrides the specified machine readable format. (Default: 0)",
            "title": "Other"
        },
        {
            "location": "/api/Search/#examples",
            "text": "",
            "title": "Examples"
        },
        {
            "location": "/api/Search/#xml-with-polygon-points",
            "text": "https://nominatim.openstreetmap.org/search?q=135+pilkington+avenue,+birmingham&format=xml&polygon=1&addressdetails=1  https://nominatim.openstreetmap.org/search/gb/birmingham/pilkington%20avenue/135?format=xml&polygon=1&addressdetails=1  https://nominatim.openstreetmap.org/search/135%20pilkington%20avenue,%20birmingham?format=xml&polygon=1&addressdetails=1     <searchresults timestamp=\"Sat, 07 Nov 09 14:42:10 +0000\" querystring=\"135 pilkington, avenue birmingham\" polygon=\"true\">\n    <place \n      place_id=\"1620612\" osm_type=\"node\" osm_id=\"452010817\" \n      boundingbox=\"52.548641204834,52.5488433837891,-1.81612110137939,-1.81592094898224\" \n      polygonpoints=\"[['-1.81592098644987','52.5487429714954'],['-1.81592290792183','52.5487234624632'],...]\" \n      lat=\"52.5487429714954\" lon=\"-1.81602098644987\" \n      display_name=\"135, Pilkington Avenue, Wylde Green, City of Birmingham, West Midlands (county), B72, United Kingdom\" \n      class=\"place\" type=\"house\">\n      <house_number>135</house_number>\n      <road>Pilkington Avenue</road>\n      <village>Wylde Green</village>\n      <town>Sutton Coldfield</town>\n      <city>City of Birmingham</city>\n      <county>West Midlands (county)</county>\n      <postcode>B72</postcode>\n      <country>United Kingdom</country>\n      <country_code>gb</country_code>\n    </place>\n  </searchresults>",
            "title": "XML with polygon points"
        },
        {
            "location": "/api/Search/#json-with-svg-polygon",
            "text": "https://nominatim.openstreetmap.org/search/Unter%20den%20Linden%201%20Berlin?format=json&addressdetails=1&limit=1&polygon_svg=1      {\n        \"address\": {\n            \"city\": \"Berlin\",\n            \"city_district\": \"Mitte\",\n            \"construction\": \"Unter den Linden\",\n            \"continent\": \"European Union\",\n            \"country\": \"Deutschland\",\n            \"country_code\": \"de\",\n            \"house_number\": \"1\",\n            \"neighbourhood\": \"Scheunenviertel\",\n            \"postcode\": \"10117\",\n            \"public_building\": \"Kommandantenhaus\",\n            \"state\": \"Berlin\",\n            \"suburb\": \"Mitte\"\n        },\n        \"boundingbox\": [\n            \"52.5170783996582\",\n            \"52.5173187255859\",\n            \"13.3975105285645\",\n            \"13.3981599807739\"\n        ],\n        \"class\": \"amenity\",\n        \"display_name\": \"Kommandantenhaus, 1, Unter den Linden, Scheunenviertel, Mitte, Berlin, 10117, Deutschland, European Union\",\n        \"importance\": 0.73606775332943,\n        \"lat\": \"52.51719785\",\n        \"licence\": \"Data \\u00a9 OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\",\n        \"lon\": \"13.3978352028938\",\n        \"osm_id\": \"15976890\",\n        \"osm_type\": \"way\",\n        \"place_id\": \"30848715\",\n        \"svg\": \"M 13.397511 -52.517283599999999 L 13.397829400000001 -52.517299800000004 13.398131599999999 -52.517315099999998 13.398159400000001 -52.517112099999999 13.3975388 -52.517080700000001 Z\",\n        \"type\": \"public_building\"\n    }",
            "title": "JSON with SVG polygon"
        },
        {
            "location": "/api/Search/#json-with-address-details",
            "text": "https://nominatim.openstreetmap.org/?format=json&addressdetails=1&q=bakery+in+berlin+wedding&format=json&limit=1      {\n        \"address\": {\n            \"bakery\": \"B\\u00e4cker Kamps\",\n            \"city_district\": \"Mitte\",\n            \"continent\": \"European Union\",\n            \"country\": \"Deutschland\",\n            \"country_code\": \"de\",\n            \"footway\": \"Bahnsteig U6\",\n            \"neighbourhood\": \"Sprengelkiez\",\n            \"postcode\": \"13353\",\n            \"state\": \"Berlin\",\n            \"suburb\": \"Wedding\"\n        },\n        \"boundingbox\": [\n            \"52.5460929870605\",\n            \"52.5460968017578\",\n            \"13.3591794967651\",\n            \"13.3591804504395\"\n        ],\n        \"class\": \"shop\",\n        \"display_name\": \"B\\u00e4cker Kamps, Bahnsteig U6, Sprengelkiez, Wedding, Mitte, Berlin, 13353, Deutschland, European Union\",\n        \"icon\": \"https://nominatim.openstreetmap.org/images/mapicons/shopping_bakery.p.20.png\",\n        \"importance\": 0.201,\n        \"lat\": \"52.5460941\",\n        \"licence\": \"Data \\u00a9 OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\",\n        \"lon\": \"13.35918\",\n        \"osm_id\": \"317179427\",\n        \"osm_type\": \"node\",\n        \"place_id\": \"1453068\",\n        \"type\": \"bakery\"\n    }",
            "title": "JSON with address details"
        },
        {
            "location": "/api/Search/#geojson",
            "text": "https://nominatim.openstreetmap.org/search?q=17+Strada+Pictor+Alexandru+Romano%2C+Bukarest&format=geojson  {\n  \"type\": \"FeatureCollection\",\n  \"licence\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"place_id\": \"35811445\",\n        \"osm_type\": \"node\",\n        \"osm_id\": \"2846295644\",\n        \"display_name\": \"17, Strada Pictor Alexandru Romano, Bukarest, Bucharest, Sector 2, Bucharest, 023964, Romania\",\n        \"place_rank\": \"30\",\n        \"category\": \"place\",\n        \"type\": \"house\",\n        \"importance\": 0.62025\n      },\n      \"bbox\": [\n        26.1156689,\n        44.4354754,\n        26.1157689,\n        44.4355754\n      ],\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          26.1157189,\n          44.4355254\n        ]\n      }\n    }\n  ]\n}",
            "title": "GeoJSON"
        },
        {
            "location": "/api/Search/#geocodejson",
            "text": "https://nominatim.openstreetmap.org/search?q=%CE%91%CE%B3%CE%AF%CE%B1+%CE%A4%CF%81%CE%B9%CE%AC%CE%B4%CE%B1%2C+%CE%91%CE%B4%CF%89%CE%BD%CE%B9%CE%B4%CE%BF%CF%82%2C+Athens%2C+Greece&format=geocodejson  {\n  \"type\": \"FeatureCollection\",\n  \"geocoding\": {\n    \"version\": \"0.1.0\",\n    \"attribution\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n    \"licence\": \"ODbL\",\n    \"query\": \"\u0391\u03b3\u03af\u03b1 \u03a4\u03c1\u03b9\u03ac\u03b4\u03b1, \u0391\u03b4\u03c9\u03bd\u03b9\u03b4\u03bf\u03c2, Athens, Greece\"\n  },\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"geocoding\": {\n          \"type\": \"place_of_worship\",\n          \"label\": \"\u0391\u03b3\u03af\u03b1 \u03a4\u03c1\u03b9\u03ac\u03b4\u03b1, \u0391\u03b4\u03c9\u03bd\u03b9\u03b4\u03bf\u03c2, \u0386\u03b3\u03b9\u03bf\u03c2 \u039d\u03b9\u03ba\u03cc\u03bb\u03b1\u03bf\u03c2, 5\u00ba \u0394\u03b7\u03bc\u03bf\u03c4\u03b9\u03ba\u03cc \u0394\u03b9\u03b1\u03bc\u03ad\u03c1\u03b9\u03c3\u03bc\u03b1 \u0391\u03b8\u03b7\u03bd\u03ce\u03bd, Athens, Municipality of Athens, Regional Unit of Central Athens, Region of Attica, Attica, 11472, Greece\",\n          \"name\": \"\u0391\u03b3\u03af\u03b1 \u03a4\u03c1\u03b9\u03ac\u03b4\u03b1\",\n          \"admin\": null\n        }\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          23.72949633941,\n          38.0051697\n        ]\n      }\n    }\n  ]\n}",
            "title": "GeocodeJSON"
        },
        {
            "location": "/api/Reverse/",
            "text": "Reverse Geocoding\n\uf0c1\n\n\nReverse geocoding generates an address from a latitude and longitude or from\nan OSM object.\n\n\nParameters\n\uf0c1\n\n\nThe main format of the reverse API is\n\n\nhttps://nominatim.openstreetmap.org/reverse?<query>\n\n\n\n\nThere are two ways how the requested location can be specified:\n\n\n\n\n\n\nlat=<value>\n \nlon=<value>\n\n\nA geographic location to generate an address for. The coordiantes must be\nin WGS84 format.\n\n\n\n\n\n\nosm_type=[N|W|R]\n \nosm_id=<value>\n\n\nA specific OSM node(N), way(W) or relation(R) to return an address for.\n\n\n\n\n\n\nIn both cases exactly one object is returned. The two input paramters cannot\nbe used at the same time. Both accept the additional optional parameters listed\nbelow.\n\n\nOutput format\n\uf0c1\n\n\n\n\nformat=[xml|json|jsonv2|geojson|geocodejson]\n\n\n\n\nSee \nPlace Output Formats\n for details on each format. (Default: html)\n\n\n\n\njson_callback=<string>\n\n\n\n\nWrap json output in a callback function (\nJSONP\n) i.e. \n<string>(<json>)\n.\nOnly has an effect for JSON output formats.\n\n\nOutput details\n\uf0c1\n\n\n\n\naddressdetails=[0|1]\n\n\n\n\nInclude a breakdown of the address into elements. (Default: 1)\n\n\n\n\nextratags=[0|1]\n\n\n\n\nInclude additional information in the result if available,\ne.g. wikipedia link, opening hours. (Default: 0)\n\n\n\n\nnamedetails=[0|1]\n\n\n\n\nInclude a list of alternative names in the results. These may include\nlanguage variants, references, operator and brand. (Default: 0)\n\n\nLanguage of results\n\uf0c1\n\n\n\n\naccept-language=<browser language string>\n\n\n\n\nPreferred language order for showing search results, overrides the value\nspecified in the \"Accept-Language\" HTTP header.\nEither use a standard RFC2616 accept-language string or a simple\ncomma-separated list of language codes.\n\n\nResult limitation\n\uf0c1\n\n\n\n\nzoom=[0-18]\n\n\n\n\nLevel of detail required for the address. Default: 18. This is a number that corresponds\nroughly to the zoom level used in map frameworks like Leaflet.js, Openlayers etc.\nIn terms of address details the zoom levels are as follows:\n\n\n\n\n\n\n\n\nzoom\n\n\naddress detail\n\n\n\n\n\n\n\n\n\n\n3\n\n\ncountry\n\n\n\n\n\n\n5\n\n\nstate\n\n\n\n\n\n\n8\n\n\ncounty\n\n\n\n\n\n\n10\n\n\ncity\n\n\n\n\n\n\n14\n\n\nsuburb\n\n\n\n\n\n\n16\n\n\nstreet\n\n\n\n\n\n\n18\n\n\nbuilding\n\n\n\n\n\n\n\n\nPolygon output\n\uf0c1\n\n\n\n\npolygon_geojson=1\n\n\npolygon_kml=1\n\n\npolygon_svg=1\n\n\npolygon_text=1\n\n\n\n\nOutput geometry of results as a GeoJSON, KML, SVG or WKT. Only one of these\noptions can be used at a time. (Default: 0)\n\n\n\n\npolygon_threshold=0.0\n\n\n\n\nSimplify the output geometry before returning. The parameter is the\ntolerance in degrees with which the geometry may differ from the original\ngeometry. Topology is preserved in the result. (Default: 0.0)\n\n\nOther\n\uf0c1\n\n\n\n\nemail=<valid email address>\n\n\n\n\nIf you are making large numbers of request please include an appropriate email\naddress to identify your requests. See Nominatim's \nUsage Policy\n for more details.\n\n\n\n\ndebug=[0|1]\n\n\n\n\nOutput assorted developer debug information. Data on internals of Nominatim's\n\"Search Loop\" logic, and SQL queries. The output is (rough) HTML format.\nThis overrides the specified machine readable format. (Default: 0)\n\n\nExamples\n\uf0c1\n\n\n\n\nhttps://nominatim.openstreetmap.org/reverse?format=xml&lat=52.5487429714954&lon=-1.81602098644987&zoom=18&addressdetails=1\n\n\n\n\n  <reversegeocode timestamp=\"Fri, 06 Nov 09 16:33:54 +0000\" querystring=\"...\">\n    <result place_id=\"1620612\" osm_type=\"node\" osm_id=\"452010817\">\n      135, Pilkington Avenue, Wylde Green, City of Birmingham, West Midlands (county), B72, United Kingdom\n    </result>\n    <addressparts>\n      <house_number>135</house_number>\n      <road>Pilkington Avenue</road>\n      <village>Wylde Green</village>\n      <town>Sutton Coldfield</town>\n      <city>City of Birmingham</city>\n      <county>West Midlands (county)</county>\n      <postcode>B72</postcode>\n      <country>United Kingdom</country>\n      <country_code>gb</country_code>\n    </addressparts>   \n  </reversegeocode>\n\n\n\n\nExample with \nformat=jsonv2\n\uf0c1\n\n\n\n\nhttps://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=-34.44076&lon=-58.70521\n\n\n\n\n{\n  \"place_id\":\"134140761\",\n  \"licence\":\"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. http:\\/\\/www.openstreetmap.org\\/copyright\",\n  \"osm_type\":\"way\",\n  \"osm_id\":\"280940520\",\n\"lat\":\"-34.4391708\",\n  \"lon\":\"-58.7064573\",\n  \"place_rank\":\"26\",\n  \"category\":\"highway\",\n  \"type\":\"motorway\",\n  \"importance\":\"0.1\",\n  \"addresstype\":\"road\",\n  \"display_name\":\"Autopista Pedro Eugenio Aramburu, El Tri\u00e1ngulo, Partido de Malvinas Argentinas, Buenos Aires, 1.619, Argentina\",\n  \"name\":\"Autopista Pedro Eugenio Aramburu\",\n  \"address\":{\n    \"road\":\"Autopista Pedro Eugenio Aramburu\",\n    \"village\":\"El Tri\u00e1ngulo\",\n    \"state_district\":\"Partido de Malvinas Argentinas\",\n    \"state\":\"Buenos Aires\",\n    \"postcode\":\"1.619\",\n    \"country\":\"Argentina\",\n    \"country_code\":\"ar\"\n  },\n  \"boundingbox\":[\"-34.44159\",\"-34.4370994\",\"-58.7086067\",\"-58.7044712\"]\n}\n\n\n\n\nExample with \nformat=geojson\n\uf0c1\n\n\n\n\nhttps://nominatim.openstreetmap.org/reverse?format=geojson&lat=44.50155&lon=11.33989\n\n\n\n\n{\n  \"type\": \"FeatureCollection\",\n  \"licence\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"place_id\": \"18512203\",\n        \"osm_type\": \"node\",\n        \"osm_id\": \"1704756187\",\n        \"place_rank\": \"30\",\n        \"category\": \"place\",\n        \"type\": \"house\",\n        \"importance\": \"0\",\n        \"addresstype\": \"place\",\n        \"name\": null,\n        \"display_name\": \"71, Via Guglielmo Marconi, Saragozza-Porto, Bologna, BO, Emilia-Romagna, 40122, Italy\",\n        \"address\": {\n          \"house_number\": \"71\",\n          \"road\": \"Via Guglielmo Marconi\",\n          \"suburb\": \"Saragozza-Porto\",\n          \"city\": \"Bologna\",\n          \"county\": \"BO\",\n          \"state\": \"Emilia-Romagna\",\n          \"postcode\": \"40122\",\n          \"country\": \"Italy\",\n          \"country_code\": \"it\"\n        }\n      },\n      \"bbox\": [\n        11.3397676,\n        44.5014307,\n        11.3399676,\n        44.5016307\n      ],\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          11.3398676,\n          44.5015307\n        ]\n      }\n    }\n  ]\n}\n\n\n\n\nExample with \nformat=geocodejson\n\uf0c1\n\n\nhttps://nominatim.openstreetmap.org/reverse?format=geocodejson&lat=60.2299&lon=11.1663\n\n\n{\n  \"type\": \"FeatureCollection\",\n  \"geocoding\": {\n    \"version\": \"0.1.0\",\n    \"attribution\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n    \"licence\": \"ODbL\",\n    \"query\": \"60.229917843587,11.16630979382\"\n  },\n  \"features\": {\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"geocoding\": {\n        \"place_id\": \"42700574\",\n        \"osm_type\": \"node\",\n        \"osm_id\": \"3110596255\",\n        \"type\": \"house\",\n        \"accuracy\": 0,\n        \"label\": \"1, L\u00f8venbergvegen, Mogreina, Ullensaker, Akershus, 2054, Norway\",\n        \"name\": null,\n        \"housenumber\": \"1\",\n        \"street\": \"L\u00f8venbergvegen\",\n        \"postcode\": \"2054\",\n        \"county\": \"Akershus\",\n        \"country\": \"Norway\",\n        \"admin\": {\n          \"level7\": \"Ullensaker\",\n          \"level4\": \"Akershus\",\n          \"level2\": \"Norway\"\n        }\n      }\n    },\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [\n        11.1658572,\n        60.2301296\n      ]\n    }\n  }\n}",
            "title": "Reverse"
        },
        {
            "location": "/api/Reverse/#reverse-geocoding",
            "text": "Reverse geocoding generates an address from a latitude and longitude or from\nan OSM object.",
            "title": "Reverse Geocoding"
        },
        {
            "location": "/api/Reverse/#parameters",
            "text": "The main format of the reverse API is  https://nominatim.openstreetmap.org/reverse?<query>  There are two ways how the requested location can be specified:    lat=<value>   lon=<value>  A geographic location to generate an address for. The coordiantes must be\nin WGS84 format.    osm_type=[N|W|R]   osm_id=<value>  A specific OSM node(N), way(W) or relation(R) to return an address for.    In both cases exactly one object is returned. The two input paramters cannot\nbe used at the same time. Both accept the additional optional parameters listed\nbelow.",
            "title": "Parameters"
        },
        {
            "location": "/api/Reverse/#output-format",
            "text": "format=[xml|json|jsonv2|geojson|geocodejson]   See  Place Output Formats  for details on each format. (Default: html)   json_callback=<string>   Wrap json output in a callback function ( JSONP ) i.e.  <string>(<json>) .\nOnly has an effect for JSON output formats.",
            "title": "Output format"
        },
        {
            "location": "/api/Reverse/#output-details",
            "text": "addressdetails=[0|1]   Include a breakdown of the address into elements. (Default: 1)   extratags=[0|1]   Include additional information in the result if available,\ne.g. wikipedia link, opening hours. (Default: 0)   namedetails=[0|1]   Include a list of alternative names in the results. These may include\nlanguage variants, references, operator and brand. (Default: 0)",
            "title": "Output details"
        },
        {
            "location": "/api/Reverse/#language-of-results",
            "text": "accept-language=<browser language string>   Preferred language order for showing search results, overrides the value\nspecified in the \"Accept-Language\" HTTP header.\nEither use a standard RFC2616 accept-language string or a simple\ncomma-separated list of language codes.",
            "title": "Language of results"
        },
        {
            "location": "/api/Reverse/#result-limitation",
            "text": "zoom=[0-18]   Level of detail required for the address. Default: 18. This is a number that corresponds\nroughly to the zoom level used in map frameworks like Leaflet.js, Openlayers etc.\nIn terms of address details the zoom levels are as follows:     zoom  address detail      3  country    5  state    8  county    10  city    14  suburb    16  street    18  building",
            "title": "Result limitation"
        },
        {
            "location": "/api/Reverse/#polygon-output",
            "text": "polygon_geojson=1  polygon_kml=1  polygon_svg=1  polygon_text=1   Output geometry of results as a GeoJSON, KML, SVG or WKT. Only one of these\noptions can be used at a time. (Default: 0)   polygon_threshold=0.0   Simplify the output geometry before returning. The parameter is the\ntolerance in degrees with which the geometry may differ from the original\ngeometry. Topology is preserved in the result. (Default: 0.0)",
            "title": "Polygon output"
        },
        {
            "location": "/api/Reverse/#other",
            "text": "email=<valid email address>   If you are making large numbers of request please include an appropriate email\naddress to identify your requests. See Nominatim's  Usage Policy  for more details.   debug=[0|1]   Output assorted developer debug information. Data on internals of Nominatim's\n\"Search Loop\" logic, and SQL queries. The output is (rough) HTML format.\nThis overrides the specified machine readable format. (Default: 0)",
            "title": "Other"
        },
        {
            "location": "/api/Reverse/#examples",
            "text": "https://nominatim.openstreetmap.org/reverse?format=xml&lat=52.5487429714954&lon=-1.81602098644987&zoom=18&addressdetails=1     <reversegeocode timestamp=\"Fri, 06 Nov 09 16:33:54 +0000\" querystring=\"...\">\n    <result place_id=\"1620612\" osm_type=\"node\" osm_id=\"452010817\">\n      135, Pilkington Avenue, Wylde Green, City of Birmingham, West Midlands (county), B72, United Kingdom\n    </result>\n    <addressparts>\n      <house_number>135</house_number>\n      <road>Pilkington Avenue</road>\n      <village>Wylde Green</village>\n      <town>Sutton Coldfield</town>\n      <city>City of Birmingham</city>\n      <county>West Midlands (county)</county>\n      <postcode>B72</postcode>\n      <country>United Kingdom</country>\n      <country_code>gb</country_code>\n    </addressparts>   \n  </reversegeocode>",
            "title": "Examples"
        },
        {
            "location": "/api/Reverse/#example-with-formatjsonv2",
            "text": "https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=-34.44076&lon=-58.70521   {\n  \"place_id\":\"134140761\",\n  \"licence\":\"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. http:\\/\\/www.openstreetmap.org\\/copyright\",\n  \"osm_type\":\"way\",\n  \"osm_id\":\"280940520\",\n\"lat\":\"-34.4391708\",\n  \"lon\":\"-58.7064573\",\n  \"place_rank\":\"26\",\n  \"category\":\"highway\",\n  \"type\":\"motorway\",\n  \"importance\":\"0.1\",\n  \"addresstype\":\"road\",\n  \"display_name\":\"Autopista Pedro Eugenio Aramburu, El Tri\u00e1ngulo, Partido de Malvinas Argentinas, Buenos Aires, 1.619, Argentina\",\n  \"name\":\"Autopista Pedro Eugenio Aramburu\",\n  \"address\":{\n    \"road\":\"Autopista Pedro Eugenio Aramburu\",\n    \"village\":\"El Tri\u00e1ngulo\",\n    \"state_district\":\"Partido de Malvinas Argentinas\",\n    \"state\":\"Buenos Aires\",\n    \"postcode\":\"1.619\",\n    \"country\":\"Argentina\",\n    \"country_code\":\"ar\"\n  },\n  \"boundingbox\":[\"-34.44159\",\"-34.4370994\",\"-58.7086067\",\"-58.7044712\"]\n}",
            "title": "Example with format=jsonv2"
        },
        {
            "location": "/api/Reverse/#example-with-formatgeojson",
            "text": "https://nominatim.openstreetmap.org/reverse?format=geojson&lat=44.50155&lon=11.33989   {\n  \"type\": \"FeatureCollection\",\n  \"licence\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"place_id\": \"18512203\",\n        \"osm_type\": \"node\",\n        \"osm_id\": \"1704756187\",\n        \"place_rank\": \"30\",\n        \"category\": \"place\",\n        \"type\": \"house\",\n        \"importance\": \"0\",\n        \"addresstype\": \"place\",\n        \"name\": null,\n        \"display_name\": \"71, Via Guglielmo Marconi, Saragozza-Porto, Bologna, BO, Emilia-Romagna, 40122, Italy\",\n        \"address\": {\n          \"house_number\": \"71\",\n          \"road\": \"Via Guglielmo Marconi\",\n          \"suburb\": \"Saragozza-Porto\",\n          \"city\": \"Bologna\",\n          \"county\": \"BO\",\n          \"state\": \"Emilia-Romagna\",\n          \"postcode\": \"40122\",\n          \"country\": \"Italy\",\n          \"country_code\": \"it\"\n        }\n      },\n      \"bbox\": [\n        11.3397676,\n        44.5014307,\n        11.3399676,\n        44.5016307\n      ],\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          11.3398676,\n          44.5015307\n        ]\n      }\n    }\n  ]\n}",
            "title": "Example with format=geojson"
        },
        {
            "location": "/api/Reverse/#example-with-formatgeocodejson",
            "text": "https://nominatim.openstreetmap.org/reverse?format=geocodejson&lat=60.2299&lon=11.1663  {\n  \"type\": \"FeatureCollection\",\n  \"geocoding\": {\n    \"version\": \"0.1.0\",\n    \"attribution\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n    \"licence\": \"ODbL\",\n    \"query\": \"60.229917843587,11.16630979382\"\n  },\n  \"features\": {\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"geocoding\": {\n        \"place_id\": \"42700574\",\n        \"osm_type\": \"node\",\n        \"osm_id\": \"3110596255\",\n        \"type\": \"house\",\n        \"accuracy\": 0,\n        \"label\": \"1, L\u00f8venbergvegen, Mogreina, Ullensaker, Akershus, 2054, Norway\",\n        \"name\": null,\n        \"housenumber\": \"1\",\n        \"street\": \"L\u00f8venbergvegen\",\n        \"postcode\": \"2054\",\n        \"county\": \"Akershus\",\n        \"country\": \"Norway\",\n        \"admin\": {\n          \"level7\": \"Ullensaker\",\n          \"level4\": \"Akershus\",\n          \"level2\": \"Norway\"\n        }\n      }\n    },\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [\n        11.1658572,\n        60.2301296\n      ]\n    }\n  }\n}",
            "title": "Example with format=geocodejson"
        },
        {
            "location": "/api/Lookup/",
            "text": "Address lookup\n\uf0c1\n\n\nThe lookup API allows to query the address and other details of one or\nmultiple OSM objects like node, way or relation.\n\n\nParameters\n\uf0c1\n\n\nThe lookup API has the following format:\n\n\n  https://nominatim.openstreetmap.org/lookup?osm_ids=[N|W|R]<value>,\u2026,\u2026,&<params>\n\n\n\n\nosm_ids\n is mandatory and must contain a comma-separated list of OSM ids each\nprefixed with its type, one of node(N), way(W) or relation(R). Up to 50 ids\ncan be queried at the same time.\n\n\nAdditional optional parameters are explained below.\n\n\nOutput format\n\uf0c1\n\n\n\n\nformat=[html|xml|json|jsonv2|geojson|geocodejson]\n\n\n\n\nSee \nPlace Output Formats\n for details on each format. (Default: xml)\n\n\n\n\njson_callback=<string>\n\n\n\n\nWrap json output in a callback function (JSONP) i.e. \n<string>(<json>)\n.\nOnly has an effect for JSON output formats.\n\n\nOutput details\n\uf0c1\n\n\n\n\naddressdetails=[0|1]\n\n\n\n\nInclude a breakdown of the address into elements. (Default: 0)\n\n\n\n\nextratags=[0|1]\n\n\n\n\nInclude additional information in the result if available,\ne.g. wikipedia link, opening hours. (Default: 0)\n\n\n\n\nnamedetails=[0|1]\n\n\n\n\nInclude a list of alternative names in the results. These may include\nlanguage variants, references, operator and brand. (Default: 0)\n\n\nLanguage of results\n\uf0c1\n\n\n\n\naccept-language=<browser language string>\n\n\n\n\nPreferred language order for showing search results, overrides the value\nspecified in the \"Accept-Language\" HTTP header.\nEither use a standard RFC2616 accept-language string or a simple\ncomma-separated list of language codes.\n\n\nOther\n\uf0c1\n\n\n\n\nemail=<valid email address>\n\n\n\n\nIf you are making large numbers of request please include an appropriate email\naddress to identify your requests. See Nominatim's \nUsage Policy\n for more details.\n\n\n\n\ndebug=[0|1]\n\n\n\n\nOutput assorted developer debug information. Data on internals of Nominatim's\n\"Search Loop\" logic, and SQL queries. The output is (rough) HTML format.\nThis overrides the specified machine readable format. (Default: 0)\n\n\nExamples\n\uf0c1\n\n\nXML\n\uf0c1\n\n\nhttps://nominatim.openstreetmap.org/lookup?osm_ids=R146656,W104393803,N240109189\n\n\n  <lookupresults timestamp=\"Mon, 29 Jun 15 18:01:33 +0000\" attribution=\"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\" querystring=\"R146656,W104393803,N240109189\" polygon=\"false\">\n    <place place_id=\"127761056\" osm_type=\"relation\" osm_id=\"146656\" place_rank=\"16\" lat=\"53.4791466\" lon=\"-2.2447445\" display_name=\"Manchester, Greater Manchester, North West England, England, United Kingdom\" class=\"boundary\" type=\"administrative\" importance=\"0.704893333438333\">\n      <city>Manchester</city>\n      <county>Greater Manchester</county>\n      <state_district>North West England</state_district>\n      <state>England</state>\n      <country>United Kingdom</country>\n      <country_code>gb</country_code>\n    </place>\n    <place place_id=\"77769745\" osm_type=\"way\" osm_id=\"104393803\" place_rank=\"30\" lat=\"52.5162024\" lon=\"13.3777343363579\" display_name=\"Brandenburg Gate, 1, Pariser Platz, Mitte, Berlin, 10117, Germany\" class=\"tourism\" type=\"attraction\" importance=\"0.443472858361592\">\n      <attraction>Brandenburg Gate</attraction>\n      <house_number>1</house_number>\n      <pedestrian>Pariser Platz</pedestrian>\n      <suburb>Mitte</suburb>\n      <city_district>Mitte</city_district>\n      <city>Berlin</city>\n      <state>Berlin</state>\n      <postcode>10117</postcode>\n      <country>Germany</country>\n      <country_code>de</country_code>\n    </place>\n    <place place_id=\"2570600569\" osm_type=\"node\" osm_id=\"240109189\" place_rank=\"15\" lat=\"52.5170365\" lon=\"13.3888599\" display_name=\"Berlin, Germany\" class=\"place\" type=\"city\" importance=\"0.822149797630868\">\n      <city>Berlin</city>\n      <state>Berlin</state>\n      <country>Germany</country>\n      <country_code>de</country_code>\n    </place>\n  </lookupresults>\n\n\n\n\nJSON with extratags\n\uf0c1\n\n\nhttps://nominatim.openstreetmap.org/lookup?osm_ids=W50637691&format=json\n\n\n[\n  {\n    \"place_id\": \"84271358\",\n    \"licence\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n    \"osm_type\": \"way\",\n    \"osm_id\": \"50637691\",\n    \"lat\": \"52.39955055\",\n    \"lon\": \"13.04806574678\",\n    \"display_name\": \"Brandenburger Tor, Brandenburger Stra\u00dfe, N\u00f6rdliche Innenstadt, Innenstadt, Potsdam, Brandenburg, 14467, Germany\",\n    \"class\": \"historic\",\n    \"type\": \"city_gate\",\n    \"importance\": \"0.221233780277011\",\n    \"address\": {\n      \"address29\": \"Brandenburger Tor\",\n      \"pedestrian\": \"Brandenburger Stra\u00dfe\",\n      \"suburb\": \"N\u00f6rdliche Innenstadt\",\n      \"city\": \"Potsdam\",\n      \"state\": \"Brandenburg\",\n      \"postcode\": \"14467\",\n      \"country\": \"Germany\",\n      \"country_code\": \"de\"\n    },\n    \"extratags\": {\n      \"image\": \"http://commons.wikimedia.org/wiki/File:Potsdam_brandenburger_tor.jpg\",\n      \"wikidata\": \"Q695045\",\n      \"wikipedia\": \"de:Brandenburger Tor (Potsdam)\",\n      \"wheelchair\": \"yes\",\n      \"description\": \"Kleines Brandenburger Tor in Potsdam\"\n    }\n  }\n]",
            "title": "Address Lookup"
        },
        {
            "location": "/api/Lookup/#address-lookup",
            "text": "The lookup API allows to query the address and other details of one or\nmultiple OSM objects like node, way or relation.",
            "title": "Address lookup"
        },
        {
            "location": "/api/Lookup/#parameters",
            "text": "The lookup API has the following format:    https://nominatim.openstreetmap.org/lookup?osm_ids=[N|W|R]<value>,\u2026,\u2026,&<params>  osm_ids  is mandatory and must contain a comma-separated list of OSM ids each\nprefixed with its type, one of node(N), way(W) or relation(R). Up to 50 ids\ncan be queried at the same time.  Additional optional parameters are explained below.",
            "title": "Parameters"
        },
        {
            "location": "/api/Lookup/#output-format",
            "text": "format=[html|xml|json|jsonv2|geojson|geocodejson]   See  Place Output Formats  for details on each format. (Default: xml)   json_callback=<string>   Wrap json output in a callback function (JSONP) i.e.  <string>(<json>) .\nOnly has an effect for JSON output formats.",
            "title": "Output format"
        },
        {
            "location": "/api/Lookup/#output-details",
            "text": "addressdetails=[0|1]   Include a breakdown of the address into elements. (Default: 0)   extratags=[0|1]   Include additional information in the result if available,\ne.g. wikipedia link, opening hours. (Default: 0)   namedetails=[0|1]   Include a list of alternative names in the results. These may include\nlanguage variants, references, operator and brand. (Default: 0)",
            "title": "Output details"
        },
        {
            "location": "/api/Lookup/#language-of-results",
            "text": "accept-language=<browser language string>   Preferred language order for showing search results, overrides the value\nspecified in the \"Accept-Language\" HTTP header.\nEither use a standard RFC2616 accept-language string or a simple\ncomma-separated list of language codes.",
            "title": "Language of results"
        },
        {
            "location": "/api/Lookup/#other",
            "text": "email=<valid email address>   If you are making large numbers of request please include an appropriate email\naddress to identify your requests. See Nominatim's  Usage Policy  for more details.   debug=[0|1]   Output assorted developer debug information. Data on internals of Nominatim's\n\"Search Loop\" logic, and SQL queries. The output is (rough) HTML format.\nThis overrides the specified machine readable format. (Default: 0)",
            "title": "Other"
        },
        {
            "location": "/api/Lookup/#examples",
            "text": "",
            "title": "Examples"
        },
        {
            "location": "/api/Lookup/#xml",
            "text": "https://nominatim.openstreetmap.org/lookup?osm_ids=R146656,W104393803,N240109189    <lookupresults timestamp=\"Mon, 29 Jun 15 18:01:33 +0000\" attribution=\"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\" querystring=\"R146656,W104393803,N240109189\" polygon=\"false\">\n    <place place_id=\"127761056\" osm_type=\"relation\" osm_id=\"146656\" place_rank=\"16\" lat=\"53.4791466\" lon=\"-2.2447445\" display_name=\"Manchester, Greater Manchester, North West England, England, United Kingdom\" class=\"boundary\" type=\"administrative\" importance=\"0.704893333438333\">\n      <city>Manchester</city>\n      <county>Greater Manchester</county>\n      <state_district>North West England</state_district>\n      <state>England</state>\n      <country>United Kingdom</country>\n      <country_code>gb</country_code>\n    </place>\n    <place place_id=\"77769745\" osm_type=\"way\" osm_id=\"104393803\" place_rank=\"30\" lat=\"52.5162024\" lon=\"13.3777343363579\" display_name=\"Brandenburg Gate, 1, Pariser Platz, Mitte, Berlin, 10117, Germany\" class=\"tourism\" type=\"attraction\" importance=\"0.443472858361592\">\n      <attraction>Brandenburg Gate</attraction>\n      <house_number>1</house_number>\n      <pedestrian>Pariser Platz</pedestrian>\n      <suburb>Mitte</suburb>\n      <city_district>Mitte</city_district>\n      <city>Berlin</city>\n      <state>Berlin</state>\n      <postcode>10117</postcode>\n      <country>Germany</country>\n      <country_code>de</country_code>\n    </place>\n    <place place_id=\"2570600569\" osm_type=\"node\" osm_id=\"240109189\" place_rank=\"15\" lat=\"52.5170365\" lon=\"13.3888599\" display_name=\"Berlin, Germany\" class=\"place\" type=\"city\" importance=\"0.822149797630868\">\n      <city>Berlin</city>\n      <state>Berlin</state>\n      <country>Germany</country>\n      <country_code>de</country_code>\n    </place>\n  </lookupresults>",
            "title": "XML"
        },
        {
            "location": "/api/Lookup/#json-with-extratags",
            "text": "https://nominatim.openstreetmap.org/lookup?osm_ids=W50637691&format=json  [\n  {\n    \"place_id\": \"84271358\",\n    \"licence\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n    \"osm_type\": \"way\",\n    \"osm_id\": \"50637691\",\n    \"lat\": \"52.39955055\",\n    \"lon\": \"13.04806574678\",\n    \"display_name\": \"Brandenburger Tor, Brandenburger Stra\u00dfe, N\u00f6rdliche Innenstadt, Innenstadt, Potsdam, Brandenburg, 14467, Germany\",\n    \"class\": \"historic\",\n    \"type\": \"city_gate\",\n    \"importance\": \"0.221233780277011\",\n    \"address\": {\n      \"address29\": \"Brandenburger Tor\",\n      \"pedestrian\": \"Brandenburger Stra\u00dfe\",\n      \"suburb\": \"N\u00f6rdliche Innenstadt\",\n      \"city\": \"Potsdam\",\n      \"state\": \"Brandenburg\",\n      \"postcode\": \"14467\",\n      \"country\": \"Germany\",\n      \"country_code\": \"de\"\n    },\n    \"extratags\": {\n      \"image\": \"http://commons.wikimedia.org/wiki/File:Potsdam_brandenburger_tor.jpg\",\n      \"wikidata\": \"Q695045\",\n      \"wikipedia\": \"de:Brandenburger Tor (Potsdam)\",\n      \"wheelchair\": \"yes\",\n      \"description\": \"Kleines Brandenburger Tor in Potsdam\"\n    }\n  }\n]",
            "title": "JSON with extratags"
        },
        {
            "location": "/api/Details/",
            "text": "Place details\n\uf0c1\n\n\nLookup details about a single place by id. The default output is HTML for debugging search logic and results.\n\n\nThe details page (including JSON output) exists for debugging only and must not be downloaded automatically\n, see \nNominatim Usage Policy\n.\n\n\nParameters\n\uf0c1\n\n\nThe details API supports the following two request formats:\n\n\n  https://nominatim.openstreetmap.org/details?osmtype=[N|W|R]&osmid=<value>&class=<value>\n\n\n\n\nosmtype\n and \nosmid\n are required parameter. The type is one of node (N), way (W)\nor relation (R). The id must be a number. The \nclass\n parameter is optional and\nallows to distinguish between entries, when the corresponding OSM object has more\nthan one main tag. For example, when a place is tagged with \ntourism=hotel\n and\n\namenity=restaurant\n, there will be two place entries in Nominatim, one for a\nrestaurant, one for a hotel. You need to specify \nclass=tourism\n or \nclass=amentity\n\nto get exactly the one you want. If there are multiple places in the database\nbut the \nclass\n parameter is left out, then one of the places will be chosen\nat random and displayed.\n\n\n  https://nominatim.openstreetmap.org/details?placeid=<value>\n\n\n\n\nPlaceids are assigned sequentially during Nominatim data import. The id for a place is different between Nominatim installation (servers) and changes when data gets reimported. Therefore it can't be used as permanent id and shouldn't be used in bug reports.\n\n\nAdditional optional parameters are explained below.\n\n\nOutput format\n\uf0c1\n\n\n\n\nformat=[html|json]\n\n\n\n\nSee \nPlace Output Formats\n for details on each format. (Default: html)\n\n\n\n\njson_callback=<string>\n\n\n\n\nWrap json output in a callback function (JSONP) i.e. \n<string>(<json>)\n.\nOnly has an effect for JSON output formats.\n\n\n\n\npretty=[0|1]\n\n\n\n\nFor JSON output will add indentation to make it more human-readable. (Default: 0)\n\n\nOutput details\n\uf0c1\n\n\n\n\naddressdetails=[0|1]\n\n\n\n\nInclude a breakdown of the address into elements. (Default for JSON: 0, for HTML: 1)\n\n\n\n\nkeywords=[0|1]\n\n\n\n\nInclude a list of name keywords and address keywords (word ids). (Default: 0)\n\n\n\n\nlinkedplaces=[0|1]\n\n\n\n\nInclude details of places higher in the address hierarchy. E.g. for a street this is usually the city, state, postal code, country. (Default: 1)\n\n\n\n\nhierarchy=[0|1]\n\n\n\n\nInclude details of places lower in the address hierarchy. E.g. for a city this usually a list of streets, suburbs, rivers. (Default for JSON: 0, for HTML: 1)\n\n\n\n\ngroup_hierarchy=[0|1]\n\n\n\n\nFor JSON output will group the places by type. (Default: 0)\n\n\n\n\npolygon_geojson=[0|1]\n\n\n\n\nInclude geometry of result. (Default for JSON: 0, for HTML: 1)\n\n\nLanguage of results\n\uf0c1\n\n\n\n\naccept-language=<browser language string>\n\n\n\n\nPreferred language order for showing result, overrides the value\nspecified in the \"Accept-Language\" HTTP header.\nEither use a standard RFC2616 accept-language string or a simple\ncomma-separated list of language codes.\n\n\nExamples\n\uf0c1\n\n\nHTML\n\uf0c1\n\n\nhttps://nominatim.openstreetmap.org/details.php?osmtype=W&osmid=38210407\n\n\nJSON\n\uf0c1\n\n\nhttps://nominatim.openstreetmap.org/details.php?osmtype=W&osmid=38210407&format=json\n\n\n{\n  \"place_id\": 85993608,\n  \"parent_place_id\": 72765313,\n  \"osm_type\": \"W\",\n  \"osm_id\": 38210407,\n  \"category\": \"place\",\n  \"type\": \"square\",\n  \"admin_level\": \"15\",\n  \"localname\": \"Pariser Platz\",\n  \"names\": {\n    \"name\": \"Pariser Platz\",\n    \"name:be\": \"\u041f\u0430\u0440\u044b\u0436\u0441\u043a\u0430\u044f \u043f\u043b\u043e\u0448\u0447\u0430\",\n    \"name:de\": \"Pariser Platz\",\n    \"name:es\": \"Plaza de Par\u00eds\",\n    \"name:he\": \"\u05e4\u05d0\u05e8\u05d9\u05d6\u05e8 \u05e4\u05dc\u05d0\u05e5\",\n    \"name:ko\": \"\ud30c\ub9ac\uc800 \uad11\uc7a5\",\n    \"name:la\": \"Forum Parisinum\",\n    \"name:ru\": \"\u041f\u0430\u0440\u0438\u0436\u0441\u043a\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u044c\",\n    \"name:uk\": \"\u041f\u0430\u0440\u0438\u0437\u044c\u043a\u0430 \u043f\u043b\u043e\u0449\u0430\",\n    \"name:zh\": \"\u5df4\u9ece\u5ee3\u5834\"\n  },\n  \"addresstags\": {\n    \"postcode\": \"10117\"\n  },\n  \"housenumber\": null,\n  \"calculated_postcode\": \"10117\",\n  \"country_code\": \"de\",\n  \"indexed_date\": \"2018-08-18T17:02:45+00:00\",\n  \"importance\": 0.339401620591472,\n  \"calculated_importance\": 0.339401620591472,\n  \"extratags\": {\n    \"wikidata\": \"Q156716\",\n    \"wikipedia\": \"de:Pariser Platz\"\n  },\n  \"calculated_wikipedia\": \"de:Pariser_Platz\",\n  \"rank_address\": 30,\n  \"rank_search\": 30,\n  \"isarea\": true,\n  \"centroid\": {\n    \"type\": \"Point\",\n    \"coordinates\": [\n      13.3786822618517,\n      52.5163654\n    ]\n  },\n  \"geometry\": {\n    \"type\": \"Point\",\n    \"coordinates\": [\n      13.3786822618517,\n      52.5163654\n    ]\n  }\n}",
            "title": "Details"
        },
        {
            "location": "/api/Details/#place-details",
            "text": "Lookup details about a single place by id. The default output is HTML for debugging search logic and results.  The details page (including JSON output) exists for debugging only and must not be downloaded automatically , see  Nominatim Usage Policy .",
            "title": "Place details"
        },
        {
            "location": "/api/Details/#parameters",
            "text": "The details API supports the following two request formats:    https://nominatim.openstreetmap.org/details?osmtype=[N|W|R]&osmid=<value>&class=<value>  osmtype  and  osmid  are required parameter. The type is one of node (N), way (W)\nor relation (R). The id must be a number. The  class  parameter is optional and\nallows to distinguish between entries, when the corresponding OSM object has more\nthan one main tag. For example, when a place is tagged with  tourism=hotel  and amenity=restaurant , there will be two place entries in Nominatim, one for a\nrestaurant, one for a hotel. You need to specify  class=tourism  or  class=amentity \nto get exactly the one you want. If there are multiple places in the database\nbut the  class  parameter is left out, then one of the places will be chosen\nat random and displayed.    https://nominatim.openstreetmap.org/details?placeid=<value>  Placeids are assigned sequentially during Nominatim data import. The id for a place is different between Nominatim installation (servers) and changes when data gets reimported. Therefore it can't be used as permanent id and shouldn't be used in bug reports.  Additional optional parameters are explained below.",
            "title": "Parameters"
        },
        {
            "location": "/api/Details/#output-format",
            "text": "format=[html|json]   See  Place Output Formats  for details on each format. (Default: html)   json_callback=<string>   Wrap json output in a callback function (JSONP) i.e.  <string>(<json>) .\nOnly has an effect for JSON output formats.   pretty=[0|1]   For JSON output will add indentation to make it more human-readable. (Default: 0)",
            "title": "Output format"
        },
        {
            "location": "/api/Details/#output-details",
            "text": "addressdetails=[0|1]   Include a breakdown of the address into elements. (Default for JSON: 0, for HTML: 1)   keywords=[0|1]   Include a list of name keywords and address keywords (word ids). (Default: 0)   linkedplaces=[0|1]   Include details of places higher in the address hierarchy. E.g. for a street this is usually the city, state, postal code, country. (Default: 1)   hierarchy=[0|1]   Include details of places lower in the address hierarchy. E.g. for a city this usually a list of streets, suburbs, rivers. (Default for JSON: 0, for HTML: 1)   group_hierarchy=[0|1]   For JSON output will group the places by type. (Default: 0)   polygon_geojson=[0|1]   Include geometry of result. (Default for JSON: 0, for HTML: 1)",
            "title": "Output details"
        },
        {
            "location": "/api/Details/#language-of-results",
            "text": "accept-language=<browser language string>   Preferred language order for showing result, overrides the value\nspecified in the \"Accept-Language\" HTTP header.\nEither use a standard RFC2616 accept-language string or a simple\ncomma-separated list of language codes.",
            "title": "Language of results"
        },
        {
            "location": "/api/Details/#examples",
            "text": "",
            "title": "Examples"
        },
        {
            "location": "/api/Details/#html",
            "text": "https://nominatim.openstreetmap.org/details.php?osmtype=W&osmid=38210407",
            "title": "HTML"
        },
        {
            "location": "/api/Details/#json",
            "text": "https://nominatim.openstreetmap.org/details.php?osmtype=W&osmid=38210407&format=json  {\n  \"place_id\": 85993608,\n  \"parent_place_id\": 72765313,\n  \"osm_type\": \"W\",\n  \"osm_id\": 38210407,\n  \"category\": \"place\",\n  \"type\": \"square\",\n  \"admin_level\": \"15\",\n  \"localname\": \"Pariser Platz\",\n  \"names\": {\n    \"name\": \"Pariser Platz\",\n    \"name:be\": \"\u041f\u0430\u0440\u044b\u0436\u0441\u043a\u0430\u044f \u043f\u043b\u043e\u0448\u0447\u0430\",\n    \"name:de\": \"Pariser Platz\",\n    \"name:es\": \"Plaza de Par\u00eds\",\n    \"name:he\": \"\u05e4\u05d0\u05e8\u05d9\u05d6\u05e8 \u05e4\u05dc\u05d0\u05e5\",\n    \"name:ko\": \"\ud30c\ub9ac\uc800 \uad11\uc7a5\",\n    \"name:la\": \"Forum Parisinum\",\n    \"name:ru\": \"\u041f\u0430\u0440\u0438\u0436\u0441\u043a\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u044c\",\n    \"name:uk\": \"\u041f\u0430\u0440\u0438\u0437\u044c\u043a\u0430 \u043f\u043b\u043e\u0449\u0430\",\n    \"name:zh\": \"\u5df4\u9ece\u5ee3\u5834\"\n  },\n  \"addresstags\": {\n    \"postcode\": \"10117\"\n  },\n  \"housenumber\": null,\n  \"calculated_postcode\": \"10117\",\n  \"country_code\": \"de\",\n  \"indexed_date\": \"2018-08-18T17:02:45+00:00\",\n  \"importance\": 0.339401620591472,\n  \"calculated_importance\": 0.339401620591472,\n  \"extratags\": {\n    \"wikidata\": \"Q156716\",\n    \"wikipedia\": \"de:Pariser Platz\"\n  },\n  \"calculated_wikipedia\": \"de:Pariser_Platz\",\n  \"rank_address\": 30,\n  \"rank_search\": 30,\n  \"isarea\": true,\n  \"centroid\": {\n    \"type\": \"Point\",\n    \"coordinates\": [\n      13.3786822618517,\n      52.5163654\n    ]\n  },\n  \"geometry\": {\n    \"type\": \"Point\",\n    \"coordinates\": [\n      13.3786822618517,\n      52.5163654\n    ]\n  }\n}",
            "title": "JSON"
        },
        {
            "location": "/api/Output/",
            "text": "Place Output\n\uf0c1\n\n\nThe \n\\reverse\n, \n\\search\n and \n\\lookup\n\nAPI calls produce very similar output which is explained in this section.\nThere is one section for each format which is selectable via the \nformat\n\nparameter.\n\n\nFormats\n\uf0c1\n\n\nJSON\n\uf0c1\n\n\nThe JSON format returns an array of places (for search and lookup) or\na single place (for reverse) of the following format:\n\n\n  {\n    \"place_id\": \"100149\",\n    \"licence\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n    \"osm_type\": \"node\",\n    \"osm_id\": \"107775\",\n    \"boundingbox\": [\"51.3473219\", \"51.6673219\", \"-0.2876474\", \"0.0323526\"],\n    \"lat\": \"51.5073219\",\n    \"lon\": \"-0.1276474\",\n    \"display_name\": \"London, Greater London, England, SW1A 2DU, United Kingdom\",\n    \"class\": \"place\",\n    \"type\": \"city\",\n    \"importance\": 0.9654895765402,\n    \"icon\": \"https://nominatim.openstreetmap.org/images/mapicons/poi_place_city.p.20.png\",\n    \"address\": {\n      \"city\": \"London\",\n      \"state_district\": \"Greater London\",\n      \"state\": \"England\",\n      \"postcode\": \"SW1A 2DU\",\n      \"country\": \"United Kingdom\",\n      \"country_code\": \"gb\"\n    },\n    \"extratags\": {\n      \"capital\": \"yes\",\n      \"website\": \"http://www.london.gov.uk\",\n      \"wikidata\": \"Q84\",\n      \"wikipedia\": \"en:London\",\n      \"population\": \"8416535\"\n    }\n  },\n\n\n\n\nThe possible fields are:\n\n\n\n\nplace_id\n - reference to the Nominatim internal database ID\n\n\nosm_type\n, \nosm_id\n - reference to the OSM object\n\n\nboundingbox\n - area of corner coordinates\n\n\nlat\n, \nlon\n - latitude and longitude of the centroid of the object\n\n\ndisplay_name\n - full comma-separated address\n\n\nclass\n, \ntype\n - key and value of the main OSM tag\n\n\nimportance\n - computed importance rank\n\n\nicon\n - link to class icon (if available)\n\n\naddress\n - dictionary of address details (only with \naddressdetails=1\n)\n\n\nextratags\n - dictionary with additional useful tags like website or maxspeed\n   (only with \nextratags=1\n)\n\n\nnamedetails\n - dictionary with full list of available names including ref etc.\n\n\ngeojson\n, \nsvg\n, \ngeotext\n, \ngeokml\n - full geometry\n   (only with the appropriate \npolygon_*\n parameter)\n\n\n\n\nJSONv2\n\uf0c1\n\n\nThis is the same as the JSON format with two changes:\n\n\n\n\nclass\n renamed to \ncategory\n\n\nadditional field \nplace_rank\n with the search rank of the object\n\n\n\n\nGeoJSON\n\uf0c1\n\n\nThis format follows the \nRFC7946\n. Every feature includes\na bounding box (\nbbox\n).\n\n\nThe feature list has the following fields:\n\n\n\n\nplace_id\n - reference to the Nominatim internal database ID\n\n\nosm_type\n, \nosm_id\n - reference to the OSM object\n\n\ncategory\n, \ntype\n - key and value of the main OSM tag\n\n\ndisplay_name\n - full comma-separated address\n\n\nplace_rank\n - class search rank\n\n\nimportance\n - computed importance rank\n\n\nicon\n - link to class icon (if available)\n\n\naddress\n - dictionary of address details (only with \naddressdetails=1\n)\n\n\nextratags\n - dictionary with additional useful tags like website or maxspeed\n   (only with \nextratags=1\n)\n\n\nnamedetails\n - dictionary with full list of available names including ref etc.\n\n\n\n\nUse \npolygon_geojson\n to output the full geometry of the object instead\nof the centroid.\n\n\nGeocodeJSON\n\uf0c1\n\n\nThe GeocodeJSON format follows the\n\nGeocodeJSON spec 0.1.0\n.\nThe following feature attributes are implemented:\n\n\n\n\nosm_type\n, \nosm_id\n - reference to the OSM object (unofficial extension)\n\n\ntype\n - value of the main tag of the object (e.g. residential, restaurant, ...)\n\n\nlabel\n - full comma-separated address\n\n\nname\n - localised name of the place\n\n\nhousenumber\n, \nstreet\n, \nlocality\n, \npostcode\n, \ncity\n,\n   \ndistrict\n, \ncounty\n, \nstate\n, \ncountry\n -\n   provided when it can be determined from the address\n   (see \nthis issue\n for\n   current limitations on the correctness of the address) and \naddressdetails=1\n\n   was given\n\n\nadmin\n - list of localised names of administrative boundaries (only with \naddressdetails=1\n)\n\n\n\n\nUse \npolygon_geojson\n to output the full geometry of the object instead\nof the centroid.\n\n\nXML\n\uf0c1\n\n\nThe XML response returns one or more place objects in slightly different\nformats depending on the API call.\n\n\nReverse\n\uf0c1\n\n\n<reversegeocode timestamp=\"Sat, 11 Aug 18 11:53:21 +0000\"\n                attribution=\"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. http://www.openstreetmap.org/copyright\"\n                querystring=\"lat=48.400381&lon=11.745876&zoom=5&format=xml\">\n  <result place_id=\"179509537\" osm_type=\"relation\" osm_id=\"2145268\" ref=\"BY\"\n          lat=\"48.9467562\" lon=\"11.4038717\"\n          boundingbox=\"47.2701114,50.5647142,8.9763497,13.8396373\">\n       Bavaria, Germany\n  </result>\n  <addressparts>\n     <state>Bavaria</state>\n     <country>Germany</country>\n     <country_code>de</country_code>\n  </addressparts>\n  <extratags>\n    <tag key=\"place\" value=\"state\"/>\n    <tag key=\"wikidata\" value=\"Q980\"/>\n    <tag key=\"wikipedia\" value=\"de:Bayern\"/>\n    <tag key=\"population\" value=\"12520000\"/>\n    <tag key=\"name:prefix\" value=\"Freistaat\"/>\n  </extratags>\n</reversegeocode>\n\n\n\n\nThe attributes of the outer \nreversegeocode\n element return generic information\nabout the query, including the time when the response was sent (in UTC),\nattribution to OSM and the original querystring.\n\n\nThe place information can be found in the \nresult\n element. The attributes of that element contain:\n\n\n\n\nplace_id\n - reference to the Nominatim internal database ID\n\n\nosm_type\n, \nosm_id\n - reference to the OSM object\n\n\nref\n - content of \nref\n tag if it exists\n\n\nlat\n, \nlon\n - latitude and longitude of the centroid of the object\n\n\nboundingbox\n - comma-separated list of corner coordinates\n\n\n\n\nThe full address address of the result can be found in the content of the\n\nresult\n element as a comma-separated list.\n\n\nAdditional information requested with \naddressdetails=1\n, \nextratags=1\n and\n\nnamedetails=1\n can be found in extra elements.\n\n\nSearch and Lookup\n\uf0c1\n\n\n<searchresults timestamp=\"Sat, 11 Aug 18 11:55:35 +0000\"\n               attribution=\"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. http://www.openstreetmap.org/copyright\"\n               querystring=\"london\" polygon=\"false\" exclude_place_ids=\"100149\"\n               more_url=\"https://nominatim.openstreetmap.org/search.php?q=london&addressdetails=1&extratags=1&exclude_place_ids=100149&format=xml&accept-language=en-US%2Cen%3Bq%3D0.7%2Cde%3Bq%3D0.3\">\n  <place place_id=\"100149\" osm_type=\"node\" osm_id=\"107775\" place_rank=\"15\"\n         boundingbox=\"51.3473219,51.6673219,-0.2876474,0.0323526\" lat=\"51.5073219\" lon=\"-0.1276474\"\n         display_name=\"London, Greater London, England, SW1A 2DU, United Kingdom\" \n         class=\"place\" type=\"city\" importance=\"0.9654895765402\"\n         icon=\"https://nominatim.openstreetmap.org/images/mapicons/poi_place_city.p.20.png\">\n    <extratags>\n      <tag key=\"capital\" value=\"yes\"/>\n      <tag key=\"website\" value=\"http://www.london.gov.uk\"/>\n      <tag key=\"wikidata\" value=\"Q84\"/>\n      <tag key=\"wikipedia\" value=\"en:London\"/>\n      <tag key=\"population\" value=\"8416535\"/>\n    </extratags>\n    <city>London</city>\n    <state_district>Greater London</state_district>\n    <state>England</state>\n    <postcode>SW1A 2DU</postcode>\n    <country>United Kingdom</country>\n    <country_code>gb</country_code>\n  </place>\n</searchresults>\n\n\n\n\nThe attributes of the outer \nsearchresults\n or \nlookupresults\n element return\ngeneric information about the query:\n\n\n\n\ntimestamp\n - UTC time when the response was sent\n\n\nattribution\n - OSM licensing information\n\n\nquerystring\n - original query\n\n\npolygon\n - true when extra geometry information was requested\n\n\nexclude_place_ids\n - IDs of places that should be ignored in a follow-up request\n\n\nmore_url\n - search call that will yield additional results for the query\n   just sent\n\n\n\n\nThe place information can be found in the \nplace\n elements, of which there may\nbe more than one. The attributes of that element contain:\n\n\n\n\nplace_id\n - reference to the Nominatim internal database ID\n\n\nosm_type\n, \nosm_id\n - reference to the OSM object\n\n\nref\n - content of \nref\n tag if it exists\n\n\nlat\n, \nlon\n - latitude and longitude of the centroid of the object\n\n\nboundingbox\n - comma-separated list of corner coordinates\n\n\nplace_rank\n - class search rank\n\n\ndisplay_name\n - full comma-separated address\n\n\nclass\n, \ntype\n - key and value of the main OSM tag\n\n\nimportance\n - computed importance rank\n\n\nicon\n - link to class icon (if available)\n\n\n\n\nWhen \naddressdetails=1\n is requested, the localised address parts appear\nas subelements with the type of the address part.\n\n\nAdditional information requested with \nextratags=1\n and \nnamedetails=1\n can\nbe found in extra elements as sub-element of each place.",
            "title": "Place Output Formats"
        },
        {
            "location": "/api/Output/#place-output",
            "text": "The  \\reverse ,  \\search  and  \\lookup \nAPI calls produce very similar output which is explained in this section.\nThere is one section for each format which is selectable via the  format \nparameter.",
            "title": "Place Output"
        },
        {
            "location": "/api/Output/#formats",
            "text": "",
            "title": "Formats"
        },
        {
            "location": "/api/Output/#json",
            "text": "The JSON format returns an array of places (for search and lookup) or\na single place (for reverse) of the following format:    {\n    \"place_id\": \"100149\",\n    \"licence\": \"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright\",\n    \"osm_type\": \"node\",\n    \"osm_id\": \"107775\",\n    \"boundingbox\": [\"51.3473219\", \"51.6673219\", \"-0.2876474\", \"0.0323526\"],\n    \"lat\": \"51.5073219\",\n    \"lon\": \"-0.1276474\",\n    \"display_name\": \"London, Greater London, England, SW1A 2DU, United Kingdom\",\n    \"class\": \"place\",\n    \"type\": \"city\",\n    \"importance\": 0.9654895765402,\n    \"icon\": \"https://nominatim.openstreetmap.org/images/mapicons/poi_place_city.p.20.png\",\n    \"address\": {\n      \"city\": \"London\",\n      \"state_district\": \"Greater London\",\n      \"state\": \"England\",\n      \"postcode\": \"SW1A 2DU\",\n      \"country\": \"United Kingdom\",\n      \"country_code\": \"gb\"\n    },\n    \"extratags\": {\n      \"capital\": \"yes\",\n      \"website\": \"http://www.london.gov.uk\",\n      \"wikidata\": \"Q84\",\n      \"wikipedia\": \"en:London\",\n      \"population\": \"8416535\"\n    }\n  },  The possible fields are:   place_id  - reference to the Nominatim internal database ID  osm_type ,  osm_id  - reference to the OSM object  boundingbox  - area of corner coordinates  lat ,  lon  - latitude and longitude of the centroid of the object  display_name  - full comma-separated address  class ,  type  - key and value of the main OSM tag  importance  - computed importance rank  icon  - link to class icon (if available)  address  - dictionary of address details (only with  addressdetails=1 )  extratags  - dictionary with additional useful tags like website or maxspeed\n   (only with  extratags=1 )  namedetails  - dictionary with full list of available names including ref etc.  geojson ,  svg ,  geotext ,  geokml  - full geometry\n   (only with the appropriate  polygon_*  parameter)",
            "title": "JSON"
        },
        {
            "location": "/api/Output/#jsonv2",
            "text": "This is the same as the JSON format with two changes:   class  renamed to  category  additional field  place_rank  with the search rank of the object",
            "title": "JSONv2"
        },
        {
            "location": "/api/Output/#geojson",
            "text": "This format follows the  RFC7946 . Every feature includes\na bounding box ( bbox ).  The feature list has the following fields:   place_id  - reference to the Nominatim internal database ID  osm_type ,  osm_id  - reference to the OSM object  category ,  type  - key and value of the main OSM tag  display_name  - full comma-separated address  place_rank  - class search rank  importance  - computed importance rank  icon  - link to class icon (if available)  address  - dictionary of address details (only with  addressdetails=1 )  extratags  - dictionary with additional useful tags like website or maxspeed\n   (only with  extratags=1 )  namedetails  - dictionary with full list of available names including ref etc.   Use  polygon_geojson  to output the full geometry of the object instead\nof the centroid.",
            "title": "GeoJSON"
        },
        {
            "location": "/api/Output/#geocodejson",
            "text": "The GeocodeJSON format follows the GeocodeJSON spec 0.1.0 .\nThe following feature attributes are implemented:   osm_type ,  osm_id  - reference to the OSM object (unofficial extension)  type  - value of the main tag of the object (e.g. residential, restaurant, ...)  label  - full comma-separated address  name  - localised name of the place  housenumber ,  street ,  locality ,  postcode ,  city ,\n    district ,  county ,  state ,  country  -\n   provided when it can be determined from the address\n   (see  this issue  for\n   current limitations on the correctness of the address) and  addressdetails=1 \n   was given  admin  - list of localised names of administrative boundaries (only with  addressdetails=1 )   Use  polygon_geojson  to output the full geometry of the object instead\nof the centroid.",
            "title": "GeocodeJSON"
        },
        {
            "location": "/api/Output/#xml",
            "text": "The XML response returns one or more place objects in slightly different\nformats depending on the API call.",
            "title": "XML"
        },
        {
            "location": "/api/Output/#reverse",
            "text": "<reversegeocode timestamp=\"Sat, 11 Aug 18 11:53:21 +0000\"\n                attribution=\"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. http://www.openstreetmap.org/copyright\"\n                querystring=\"lat=48.400381&lon=11.745876&zoom=5&format=xml\">\n  <result place_id=\"179509537\" osm_type=\"relation\" osm_id=\"2145268\" ref=\"BY\"\n          lat=\"48.9467562\" lon=\"11.4038717\"\n          boundingbox=\"47.2701114,50.5647142,8.9763497,13.8396373\">\n       Bavaria, Germany\n  </result>\n  <addressparts>\n     <state>Bavaria</state>\n     <country>Germany</country>\n     <country_code>de</country_code>\n  </addressparts>\n  <extratags>\n    <tag key=\"place\" value=\"state\"/>\n    <tag key=\"wikidata\" value=\"Q980\"/>\n    <tag key=\"wikipedia\" value=\"de:Bayern\"/>\n    <tag key=\"population\" value=\"12520000\"/>\n    <tag key=\"name:prefix\" value=\"Freistaat\"/>\n  </extratags>\n</reversegeocode>  The attributes of the outer  reversegeocode  element return generic information\nabout the query, including the time when the response was sent (in UTC),\nattribution to OSM and the original querystring.  The place information can be found in the  result  element. The attributes of that element contain:   place_id  - reference to the Nominatim internal database ID  osm_type ,  osm_id  - reference to the OSM object  ref  - content of  ref  tag if it exists  lat ,  lon  - latitude and longitude of the centroid of the object  boundingbox  - comma-separated list of corner coordinates   The full address address of the result can be found in the content of the result  element as a comma-separated list.  Additional information requested with  addressdetails=1 ,  extratags=1  and namedetails=1  can be found in extra elements.",
            "title": "Reverse"
        },
        {
            "location": "/api/Output/#search-and-lookup",
            "text": "<searchresults timestamp=\"Sat, 11 Aug 18 11:55:35 +0000\"\n               attribution=\"Data \u00a9 OpenStreetMap contributors, ODbL 1.0. http://www.openstreetmap.org/copyright\"\n               querystring=\"london\" polygon=\"false\" exclude_place_ids=\"100149\"\n               more_url=\"https://nominatim.openstreetmap.org/search.php?q=london&addressdetails=1&extratags=1&exclude_place_ids=100149&format=xml&accept-language=en-US%2Cen%3Bq%3D0.7%2Cde%3Bq%3D0.3\">\n  <place place_id=\"100149\" osm_type=\"node\" osm_id=\"107775\" place_rank=\"15\"\n         boundingbox=\"51.3473219,51.6673219,-0.2876474,0.0323526\" lat=\"51.5073219\" lon=\"-0.1276474\"\n         display_name=\"London, Greater London, England, SW1A 2DU, United Kingdom\" \n         class=\"place\" type=\"city\" importance=\"0.9654895765402\"\n         icon=\"https://nominatim.openstreetmap.org/images/mapicons/poi_place_city.p.20.png\">\n    <extratags>\n      <tag key=\"capital\" value=\"yes\"/>\n      <tag key=\"website\" value=\"http://www.london.gov.uk\"/>\n      <tag key=\"wikidata\" value=\"Q84\"/>\n      <tag key=\"wikipedia\" value=\"en:London\"/>\n      <tag key=\"population\" value=\"8416535\"/>\n    </extratags>\n    <city>London</city>\n    <state_district>Greater London</state_district>\n    <state>England</state>\n    <postcode>SW1A 2DU</postcode>\n    <country>United Kingdom</country>\n    <country_code>gb</country_code>\n  </place>\n</searchresults>  The attributes of the outer  searchresults  or  lookupresults  element return\ngeneric information about the query:   timestamp  - UTC time when the response was sent  attribution  - OSM licensing information  querystring  - original query  polygon  - true when extra geometry information was requested  exclude_place_ids  - IDs of places that should be ignored in a follow-up request  more_url  - search call that will yield additional results for the query\n   just sent   The place information can be found in the  place  elements, of which there may\nbe more than one. The attributes of that element contain:   place_id  - reference to the Nominatim internal database ID  osm_type ,  osm_id  - reference to the OSM object  ref  - content of  ref  tag if it exists  lat ,  lon  - latitude and longitude of the centroid of the object  boundingbox  - comma-separated list of corner coordinates  place_rank  - class search rank  display_name  - full comma-separated address  class ,  type  - key and value of the main OSM tag  importance  - computed importance rank  icon  - link to class icon (if available)   When  addressdetails=1  is requested, the localised address parts appear\nas subelements with the type of the address part.  Additional information requested with  extratags=1  and  namedetails=1  can\nbe found in extra elements as sub-element of each place.",
            "title": "Search and Lookup"
        },
        {
            "location": "/api/Faq/",
            "text": "Frequently Asked Questions\n\uf0c1\n\n\nAPI Results\n\uf0c1\n\n\n1. The address of my search results contains far-away places that don't belong there.\n\uf0c1\n\n\nNominatim computes the address from two sources in the OpenStreetMap data:\nfrom administrative boundaries and from place nodes. Boundaries are the more\nuseful source. They precisely describe an area. So it is very clear for\nNominatim if a point belongs to an area of not. Place nodes are more complicated.\nThese are only points without any precise extend. So Nominatim has to take a\nguess and assume that an address belongs to the closest place nose it can find.\nIn an ideal world, Nominatim would not need the place nodes but there are\nmany places on earth where there are not precise boundaries available for\nall parts that make up an address. This is in particular true for the more\nlocal address parts, like villages and suburbs. Therefore it is not possible\nto completely dismiss place nodes. And sometimes they sneak in where they\ndon't belong.\n\n\nAs a OpenStreetMap mapper, you can improve the situation in two ways: if you\nsee a place node for which already an administrative area exists, then you\nshould \nlink\n the two by adding the node with a 'label' role to the boundary\nrelation. If there is no administrative area, you can add the approximate\nextend of the place and tag it place=\n as well.\n\n\n2. When doing reverse search, the address details have parts that don't contain the point I was looking up.\n\uf0c1\n\n\nThere is a common misconception how the reverse API call works in Nominatim.\nReverse does not give you the address of the point you asked for. Reverse\nreturns the closest object to the point you asked for and then returns the\naddress of that object. Now, if you are close to a border, then the closest\nobject may be across that border. When Nominatim then returns the address,\ncontains the county/state/country across the border.\n\n\n3. I get different counties/states/countries when I change the zoom parameter in the reverse query. How is that possible?\n\uf0c1\n\n\nThis is basically the same problem as in the previous answer.\nThe zoom level influences at which \nsearch rank\n Nominatim starts looking\nfor the closest object. So the closest house number maybe on one side of the\nborder while the closest street is on the other. As the address details contain\nthe address of the closest object found, you might sometimes get one result,\nsometimes the other for the closest point.",
            "title": "FAQ"
        },
        {
            "location": "/api/Faq/#frequently-asked-questions",
            "text": "",
            "title": "Frequently Asked Questions"
        },
        {
            "location": "/api/Faq/#api-results",
            "text": "",
            "title": "API Results"
        },
        {
            "location": "/api/Faq/#1-the-address-of-my-search-results-contains-far-away-places-that-dont-belong-there",
            "text": "Nominatim computes the address from two sources in the OpenStreetMap data:\nfrom administrative boundaries and from place nodes. Boundaries are the more\nuseful source. They precisely describe an area. So it is very clear for\nNominatim if a point belongs to an area of not. Place nodes are more complicated.\nThese are only points without any precise extend. So Nominatim has to take a\nguess and assume that an address belongs to the closest place nose it can find.\nIn an ideal world, Nominatim would not need the place nodes but there are\nmany places on earth where there are not precise boundaries available for\nall parts that make up an address. This is in particular true for the more\nlocal address parts, like villages and suburbs. Therefore it is not possible\nto completely dismiss place nodes. And sometimes they sneak in where they\ndon't belong.  As a OpenStreetMap mapper, you can improve the situation in two ways: if you\nsee a place node for which already an administrative area exists, then you\nshould  link  the two by adding the node with a 'label' role to the boundary\nrelation. If there is no administrative area, you can add the approximate\nextend of the place and tag it place=  as well.",
            "title": "1. The address of my search results contains far-away places that don't belong there."
        },
        {
            "location": "/api/Faq/#2-when-doing-reverse-search-the-address-details-have-parts-that-dont-contain-the-point-i-was-looking-up",
            "text": "There is a common misconception how the reverse API call works in Nominatim.\nReverse does not give you the address of the point you asked for. Reverse\nreturns the closest object to the point you asked for and then returns the\naddress of that object. Now, if you are close to a border, then the closest\nobject may be across that border. When Nominatim then returns the address,\ncontains the county/state/country across the border.",
            "title": "2. When doing reverse search, the address details have parts that don't contain the point I was looking up."
        },
        {
            "location": "/api/Faq/#3-i-get-different-countiesstatescountries-when-i-change-the-zoom-parameter-in-the-reverse-query-how-is-that-possible",
            "text": "This is basically the same problem as in the previous answer.\nThe zoom level influences at which  search rank  Nominatim starts looking\nfor the closest object. So the closest house number maybe on one side of the\nborder while the closest street is on the other. As the address details contain\nthe address of the closest object found, you might sometimes get one result,\nsometimes the other for the closest point.",
            "title": "3. I get different counties/states/countries when I change the zoom parameter in the reverse query. How is that possible?"
        },
        {
            "location": "/admin/Installation/",
            "text": "Basic Installation\n\uf0c1\n\n\nThis page contains generic installation instructions for Nominatim and its\nprerequisites. There are also step-by-step instructions available for\nthe following operating systems:\n\n\n\n\nUbuntu 18.04\n\n\nUbuntu 16.04\n\n\nCentOS 7.2\n\n\n\n\nThese OS-specific instructions can also be found in executable form\nin the \nvagrant/\n directory.\n\n\nUsers have created instructions for other frameworks. We haven't tested those\nand can't offer support.\n\n\n\n\nDocker\n\n\nDocker on Kubernetes\n\n\nAnsible\n\n\n\n\nPrerequisites\n\uf0c1\n\n\nSoftware\n\uf0c1\n\n\nFor compiling:\n\n\n\n\ncmake\n\n\nlibxml2\n\n\na recent C++ compiler\n\n\n\n\nNominatim comes with its own version of osm2pgsql. See the\nosm2pgsql README for additional dependencies required for compiling osm2pgsql.\n\n\nFor running tests:\n\n\n\n\nbehave\n\n\nPsycopg2\n\n\nnose\n\n\nphpunit\n\n\n\n\nFor running Nominatim:\n\n\n\n\nPostgreSQL\n (9.1 or later)\n\n\nPostGIS\n (2.0 or later)\n\n\nPHP\n (5.4 or later)\n\n\nPHP-pgsql\n\n\nPHP-intl (bundled with PHP)\n\n\nPEAR::DB\n\n\na webserver (apache or nginx are recommended)\n\n\n\n\nFor running continuous updates:\n\n\n\n\npyosmium\n\n\n\n\nHardware\n\uf0c1\n\n\nA minimum of 2GB of RAM is required or installation will fail. For a full\nplanet import 32GB of RAM or more strongly are recommended.\n\n\nFor a full planet install you will need at least 700GB of hard disk space\n(take into account that the OSM database is growing fast). SSD disks\nwill help considerably to speed up import and queries.\n\n\nOn a 6-core machine with 32GB RAM and SSDs the import of a full planet takes\na bit more than 2 days. Without SSDs 7-8 days are more realistic.\n\n\nSetup of the server\n\uf0c1\n\n\nPostgreSQL tuning\n\uf0c1\n\n\nYou might want to tune your PostgreSQL installation so that the later steps\nmake best use of your hardware. You should tune the following parameters in\nyour \npostgresql.conf\n file.\n\n\nshared_buffers (2GB)\nmaintenance_work_mem (10GB)\nwork_mem (50MB)\neffective_cache_size (24GB)\nsynchronous_commit = off\ncheckpoint_segments = 100 # only for postgresql <= 9.4\ncheckpoint_timeout = 10min\ncheckpoint_completion_target = 0.9\n\n\n\n\nThe numbers in brackets behind some parameters seem to work fine for\n32GB RAM machine. Adjust to your setup.\n\n\nFor the initial import, you should also set:\n\n\nfsync = off\nfull_page_writes = off\n\n\n\n\nDon't forget to reenable them after the initial import or you risk database\ncorruption. Autovacuum must not be switched off because it ensures that the\ntables are frequently analysed.\n\n\nWebserver setup\n\uf0c1\n\n\nThe \nwebsite/\n directory in the build directory contains the configured\nwebsite. Include the directory into your webbrowser to serve php files\nfrom there.\n\n\nConfigure for use with Apache\n\uf0c1\n\n\nMake sure your Apache configuration contains the required permissions for the\ndirectory and create an alias:\n\n\n<Directory \"/srv/nominatim/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\nAlias /nominatim /srv/nominatim/build/website\n\n\n\n\n/srv/nominatim/build\n should be replaced with the location of your\nbuild directory.\n\n\nAfter making changes in the apache config you need to restart apache.\nThe website should now be available on http://localhost/nominatim.\n\n\nConfigure for use with Nginx\n\uf0c1\n\n\nUse php-fpm as a deamon for serving PHP cgi. Install php-fpm together with nginx.\n\n\nBy default php listens on a network socket. If you want it to listen to a\nUnix socket instead, change the pool configuration (\npool.d/www.conf\n) as\nfollows:\n\n\n; Comment out the tcp listener and add the unix socket\n;listen = 127.0.0.1:9000\nlisten = /var/run/php5-fpm.sock\n\n; Ensure that the daemon runs as the correct user\nlisten.owner = www-data\nlisten.group = www-data\nlisten.mode = 0666\n\n\n\n\nTell nginx that php files are special and to fastcgi_pass to the php-fpm\nunix socket by adding the location definition to the default configuration.\n\n\nroot /srv/nominatim/build/website;\nindex search.php index.html;\nlocation ~ [^/]\\.php(/|$) {\n    fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\n    if (!-f $document_root$fastcgi_script_name) {\n        return 404;\n    }\n    fastcgi_pass unix:/var/run/php5-fpm.sock;\n    fastcgi_index search.php;\n    include fastcgi.conf;\n}\n\n\n\n\nRestart the nginx and php5-fpm services and the website should now be available\nat \nhttp://localhost/\n.\n\n\nNow continue with \nimporting the database\n.",
            "title": "Basic Installation"
        },
        {
            "location": "/admin/Installation/#basic-installation",
            "text": "This page contains generic installation instructions for Nominatim and its\nprerequisites. There are also step-by-step instructions available for\nthe following operating systems:   Ubuntu 18.04  Ubuntu 16.04  CentOS 7.2   These OS-specific instructions can also be found in executable form\nin the  vagrant/  directory.  Users have created instructions for other frameworks. We haven't tested those\nand can't offer support.   Docker  Docker on Kubernetes  Ansible",
            "title": "Basic Installation"
        },
        {
            "location": "/admin/Installation/#prerequisites",
            "text": "",
            "title": "Prerequisites"
        },
        {
            "location": "/admin/Installation/#software",
            "text": "For compiling:   cmake  libxml2  a recent C++ compiler   Nominatim comes with its own version of osm2pgsql. See the\nosm2pgsql README for additional dependencies required for compiling osm2pgsql.  For running tests:   behave  Psycopg2  nose  phpunit   For running Nominatim:   PostgreSQL  (9.1 or later)  PostGIS  (2.0 or later)  PHP  (5.4 or later)  PHP-pgsql  PHP-intl (bundled with PHP)  PEAR::DB  a webserver (apache or nginx are recommended)   For running continuous updates:   pyosmium",
            "title": "Software"
        },
        {
            "location": "/admin/Installation/#hardware",
            "text": "A minimum of 2GB of RAM is required or installation will fail. For a full\nplanet import 32GB of RAM or more strongly are recommended.  For a full planet install you will need at least 700GB of hard disk space\n(take into account that the OSM database is growing fast). SSD disks\nwill help considerably to speed up import and queries.  On a 6-core machine with 32GB RAM and SSDs the import of a full planet takes\na bit more than 2 days. Without SSDs 7-8 days are more realistic.",
            "title": "Hardware"
        },
        {
            "location": "/admin/Installation/#setup-of-the-server",
            "text": "",
            "title": "Setup of the server"
        },
        {
            "location": "/admin/Installation/#postgresql-tuning",
            "text": "You might want to tune your PostgreSQL installation so that the later steps\nmake best use of your hardware. You should tune the following parameters in\nyour  postgresql.conf  file.  shared_buffers (2GB)\nmaintenance_work_mem (10GB)\nwork_mem (50MB)\neffective_cache_size (24GB)\nsynchronous_commit = off\ncheckpoint_segments = 100 # only for postgresql <= 9.4\ncheckpoint_timeout = 10min\ncheckpoint_completion_target = 0.9  The numbers in brackets behind some parameters seem to work fine for\n32GB RAM machine. Adjust to your setup.  For the initial import, you should also set:  fsync = off\nfull_page_writes = off  Don't forget to reenable them after the initial import or you risk database\ncorruption. Autovacuum must not be switched off because it ensures that the\ntables are frequently analysed.",
            "title": "PostgreSQL tuning"
        },
        {
            "location": "/admin/Installation/#webserver-setup",
            "text": "The  website/  directory in the build directory contains the configured\nwebsite. Include the directory into your webbrowser to serve php files\nfrom there.",
            "title": "Webserver setup"
        },
        {
            "location": "/admin/Installation/#configure-for-use-with-apache",
            "text": "Make sure your Apache configuration contains the required permissions for the\ndirectory and create an alias:  <Directory \"/srv/nominatim/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\nAlias /nominatim /srv/nominatim/build/website  /srv/nominatim/build  should be replaced with the location of your\nbuild directory.  After making changes in the apache config you need to restart apache.\nThe website should now be available on http://localhost/nominatim.",
            "title": "Configure for use with Apache"
        },
        {
            "location": "/admin/Installation/#configure-for-use-with-nginx",
            "text": "Use php-fpm as a deamon for serving PHP cgi. Install php-fpm together with nginx.  By default php listens on a network socket. If you want it to listen to a\nUnix socket instead, change the pool configuration ( pool.d/www.conf ) as\nfollows:  ; Comment out the tcp listener and add the unix socket\n;listen = 127.0.0.1:9000\nlisten = /var/run/php5-fpm.sock\n\n; Ensure that the daemon runs as the correct user\nlisten.owner = www-data\nlisten.group = www-data\nlisten.mode = 0666  Tell nginx that php files are special and to fastcgi_pass to the php-fpm\nunix socket by adding the location definition to the default configuration.  root /srv/nominatim/build/website;\nindex search.php index.html;\nlocation ~ [^/]\\.php(/|$) {\n    fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\n    if (!-f $document_root$fastcgi_script_name) {\n        return 404;\n    }\n    fastcgi_pass unix:/var/run/php5-fpm.sock;\n    fastcgi_index search.php;\n    include fastcgi.conf;\n}  Restart the nginx and php5-fpm services and the website should now be available\nat  http://localhost/ .  Now continue with  importing the database .",
            "title": "Configure for use with Nginx"
        },
        {
            "location": "/admin/Import-and-Update/",
            "text": "Importing and Updating the Database\n\uf0c1\n\n\nThe following instructions explain how to create a Nominatim database\nfrom an OSM planet file and how to keep the database up to date. It\nis assumed that you have already successfully installed the Nominatim\nsoftware itself, if not return to the \ninstallation page\n.\n\n\nConfiguration setup in settings/local.php\n\uf0c1\n\n\nThe Nominatim server can be customized via the file \nsettings/local.php\n\nin the build directory. Note that this is a PHP file, so it must always\nstart like this:\n\n\n<?php\n\n\n\n\nwithout any leading spaces.\n\n\nThere are lots of configuration settings you can tweak. Have a look\nat \nsettings/default.php\n for a full list. Most should have a sensible default.\n\n\nFlatnode files\n\uf0c1\n\n\nIf you plan to import a large dataset (e.g. Europe, North America, planet),\nyou should also enable flatnode storage of node locations. With this\nsetting enabled, node coordinates are stored in a simple file instead\nof the database. This will save you import time and disk storage.\nAdd to your \nsettings/local.php\n:\n\n\n@define('CONST_Osm2pgsql_Flatnode_File', '/path/to/flatnode.file');\n\n\n\n\nReplace the second part with a suitable path on your system and make sure\nthe directory exists. There should be at least 40GB of free space.\n\n\nDownloading additional data\n\uf0c1\n\n\nWikipedia rankings\n\uf0c1\n\n\nWikipedia can be used as an optional auxiliary data source to help indicate\nthe importance of osm features. Nominatim will work without this information\nbut it will improve the quality of the results if this is installed.\nThis data is available as a binary download:\n\n\ncd $NOMINATIM_SOURCE_DIR/data\nwget https://www.nominatim.org/data/wikipedia_article.sql.bin\nwget https://www.nominatim.org/data/wikipedia_redirect.sql.bin\n\n\n\n\nCombined the 2 files are around 1.5GB and add around 30GB to the install\nsize of nominatim. They also increase the install time by an hour or so.\n\n\nNOTE:\n you'll need to download the Wikipedia rankings before performing\nthe initial import of the data if you want the rankings applied to the\nloaded data.\n\n\nUK postcodes\n\uf0c1\n\n\nNominatim can use postcodes from an external source to improve searches that involve a UK postcode. This data can be optionally downloaded: \n\n\ncd $NOMINATIM_SOURCE_DIR/data\nwget https://www.nominatim.org/data/gb_postcode_data.sql.gz\n\n\n\n\nInitial import of the data\n\uf0c1\n\n\nImportant:\n first try the import with a small excerpt, for example from\n\nGeofabrik\n.\n\n\nDownload the data to import and load the data with the following command:\n\n\n./utils/setup.php --osm-file <data file> --all [--osm2pgsql-cache 28000] 2>&1 | tee setup.log\n\n\n\n\nThe \n--osm2pgsql-cache\n parameter is optional but strongly recommended for\nplanet imports. It sets the node cache size for the osm2pgsql import part\n(see \n-C\n parameter in osm2pgsql help). As a rule of thumb, this should be\nabout the same size as the file you are importing but never more than\n2/3 of RAM available. If your machine starts swapping reduce the size.\n\n\nComputing word frequency for search terms can improve the performance of\nforward geocoding in particular under high load as it helps Postgres' query\nplanner to make the right decisions. To recompute word counts run:\n\n\n./utils/update.php --recompute-word-counts\n\n\n\n\nThis will take a couple of hours for a full planet installation. You can\nalso defer that step to a later point in time when you realise that\nperformance becomes an issue. Just make sure that updates are stopped before\nrunning this function.\n\n\nIf you want to be able to search for places by their type through\n\nspecial key phrases\n\nyou also need to enable these key phrases like this:\n\n\n./utils/specialphrases.php --wiki-import > specialphrases.sql\npsql -d nominatim -f specialphrases.sql\n\n\n\n\nNote that this command downloads the phrases from the wiki link above.\n\n\nInstalling Tiger housenumber data for the US\n\uf0c1\n\n\nNominatim is able to use the official TIGER address set to complement the\nOSM house number data in the US. You can add TIGER data to your own Nominatim\ninstance by following these steps:\n\n\n\n\n\n\nInstall the GDAL library and python bindings and the unzip tool\n\n\n\n\nUbuntu: \nsudo apt-get install python-gdal unzip\n\n\nCentOS: \nsudo yum install gdal-python unzip\n\n\n\n\n\n\n\n\nGet preprocessed TIGER 2017 data and unpack it into the\n     data directory in your Nominatim sources:\n\n\ncd Nominatim/data\nwget https://nominatim.org/data/tiger2017-nominatim-preprocessed.tar.gz\ntar xf tiger2017-nominatim-preprocessed.tar.gz\n\n\n\n\n\n\n\n\nImport the data into your Nominatim database: \n\n\n./utils/setup.php --import-tiger-data\n\n\n\n\n\n\n\n\nEnable use of the Tiger data in your \nsettings/local.php\n by adding:\n\n\n @define('CONST_Use_US_Tiger_Data', true);\n\n\n\n\n\n\n\n\nApply the new settings:\n\n\n\n\n\n\n    ./utils/setup.php --create-functions --enable-diff-updates --create-partition-functions\n\n\n\n\nThe entire US adds about 10GB to your database.\n\n\nYou can also process the data from the original TIGER data to create the\nSQL files, Nominatim needs for the import:\n\n\n\n\n\n\nGet the TIGER 2017 data. You will need the EDGES files\n     (3,234 zip files, 11GB total).\n\n\n wget -r ftp://ftp2.census.gov/geo/tiger/TIGER2017/EDGES/\n\n\n\n\n\n\n\n\nConvert the data into SQL statements: \n\n\n ./utils/imports.php --parse-tiger <tiger edge data directory>\n\n\n\n\n\n\n\n\nBe warned that this can take quite a long time. After this process is finished,\nthe same preprocessed files as above are available in \ndata/tiger\n.\n\n\nUpdates\n\uf0c1\n\n\nThere are many different possibilities to update your Nominatim database.\nThe following section describes how to keep it up-to-date with Pyosmium.\nFor a list of other methods see the output of \n./utils/update.php --help\n.\n\n\nInstalling the newest version of Pyosmium\n\uf0c1\n\n\nIt is recommended to install Pyosmium via pip. Run (as the same user who\nwill later run the updates):\n\n\npip install --user osmium\n\n\n\n\nNominatim needs a tool called \npyosmium-get-updates\n, which comes with\nPyosmium. You need to tell Nominatim where to find it. Add the\nfollowing line to your \nsettings/local.php\n:\n\n\n@define('CONST_Pyosmium_Binary', '/home/user/.local/bin/pyosmium-get-changes');\n\n\n\n\nThe path above is fine if you used the \n--user\n parameter with pip.\nReplace \nuser\n with your user name.\n\n\nSetting up the update process\n\uf0c1\n\n\nNext the update needs to be initialised. By default Nominatim is configured\nto update using the global minutely diffs.\n\n\nIf you want a different update source you will need to add some settings\nto \nsettings/local.php\n. For example, to use the daily country extracts\ndiffs for Ireland from geofabrik add the following:\n\n\n// base URL of the replication service\n@define('CONST_Replication_Url', 'https://download.geofabrik.de/europe/ireland-and-northern-ireland-updates');\n// How often upstream publishes diffs\n@define('CONST_Replication_Update_Interval', '86400');\n// How long to sleep if no update found yet\n@define('CONST_Replication_Recheck_Interval', '900');\n\n\n\n\nTo set up the update process now run the following command:\n\n\n./utils/update.php --init-updates\n\n\n\n\nIt outputs the date where updates will start. Recheck that this date is\nwhat you expect.\n\n\nThe --init-updates command needs to be rerun whenever the replication service\nis changed.\n\n\nUpdating Nominatim\n\uf0c1\n\n\nThe following command will keep your database constantly up to date:\n\n\n./utils/update.php --import-osmosis-all\n\n\n\n\n(Note that even though the old name \"import-osmosis-all\" has been kept for compatibility reasons, Osmosis is not required to run this - it uses pyosmium behind the scenes.)\n\n\nIf you have imported multiple country extracts and want to keep them\nup-to-date, have a look at the script in\n\nissue #60\n.",
            "title": "Importing and Updating"
        },
        {
            "location": "/admin/Import-and-Update/#importing-and-updating-the-database",
            "text": "The following instructions explain how to create a Nominatim database\nfrom an OSM planet file and how to keep the database up to date. It\nis assumed that you have already successfully installed the Nominatim\nsoftware itself, if not return to the  installation page .",
            "title": "Importing and Updating the Database"
        },
        {
            "location": "/admin/Import-and-Update/#configuration-setup-in-settingslocalphp",
            "text": "The Nominatim server can be customized via the file  settings/local.php \nin the build directory. Note that this is a PHP file, so it must always\nstart like this:  <?php  without any leading spaces.  There are lots of configuration settings you can tweak. Have a look\nat  settings/default.php  for a full list. Most should have a sensible default.",
            "title": "Configuration setup in settings/local.php"
        },
        {
            "location": "/admin/Import-and-Update/#flatnode-files",
            "text": "If you plan to import a large dataset (e.g. Europe, North America, planet),\nyou should also enable flatnode storage of node locations. With this\nsetting enabled, node coordinates are stored in a simple file instead\nof the database. This will save you import time and disk storage.\nAdd to your  settings/local.php :  @define('CONST_Osm2pgsql_Flatnode_File', '/path/to/flatnode.file');  Replace the second part with a suitable path on your system and make sure\nthe directory exists. There should be at least 40GB of free space.",
            "title": "Flatnode files"
        },
        {
            "location": "/admin/Import-and-Update/#downloading-additional-data",
            "text": "",
            "title": "Downloading additional data"
        },
        {
            "location": "/admin/Import-and-Update/#wikipedia-rankings",
            "text": "Wikipedia can be used as an optional auxiliary data source to help indicate\nthe importance of osm features. Nominatim will work without this information\nbut it will improve the quality of the results if this is installed.\nThis data is available as a binary download:  cd $NOMINATIM_SOURCE_DIR/data\nwget https://www.nominatim.org/data/wikipedia_article.sql.bin\nwget https://www.nominatim.org/data/wikipedia_redirect.sql.bin  Combined the 2 files are around 1.5GB and add around 30GB to the install\nsize of nominatim. They also increase the install time by an hour or so.  NOTE:  you'll need to download the Wikipedia rankings before performing\nthe initial import of the data if you want the rankings applied to the\nloaded data.",
            "title": "Wikipedia rankings"
        },
        {
            "location": "/admin/Import-and-Update/#uk-postcodes",
            "text": "Nominatim can use postcodes from an external source to improve searches that involve a UK postcode. This data can be optionally downloaded:   cd $NOMINATIM_SOURCE_DIR/data\nwget https://www.nominatim.org/data/gb_postcode_data.sql.gz",
            "title": "UK postcodes"
        },
        {
            "location": "/admin/Import-and-Update/#initial-import-of-the-data",
            "text": "Important:  first try the import with a small excerpt, for example from Geofabrik .  Download the data to import and load the data with the following command:  ./utils/setup.php --osm-file <data file> --all [--osm2pgsql-cache 28000] 2>&1 | tee setup.log  The  --osm2pgsql-cache  parameter is optional but strongly recommended for\nplanet imports. It sets the node cache size for the osm2pgsql import part\n(see  -C  parameter in osm2pgsql help). As a rule of thumb, this should be\nabout the same size as the file you are importing but never more than\n2/3 of RAM available. If your machine starts swapping reduce the size.  Computing word frequency for search terms can improve the performance of\nforward geocoding in particular under high load as it helps Postgres' query\nplanner to make the right decisions. To recompute word counts run:  ./utils/update.php --recompute-word-counts  This will take a couple of hours for a full planet installation. You can\nalso defer that step to a later point in time when you realise that\nperformance becomes an issue. Just make sure that updates are stopped before\nrunning this function.  If you want to be able to search for places by their type through special key phrases \nyou also need to enable these key phrases like this:  ./utils/specialphrases.php --wiki-import > specialphrases.sql\npsql -d nominatim -f specialphrases.sql  Note that this command downloads the phrases from the wiki link above.",
            "title": "Initial import of the data"
        },
        {
            "location": "/admin/Import-and-Update/#installing-tiger-housenumber-data-for-the-us",
            "text": "Nominatim is able to use the official TIGER address set to complement the\nOSM house number data in the US. You can add TIGER data to your own Nominatim\ninstance by following these steps:    Install the GDAL library and python bindings and the unzip tool   Ubuntu:  sudo apt-get install python-gdal unzip  CentOS:  sudo yum install gdal-python unzip     Get preprocessed TIGER 2017 data and unpack it into the\n     data directory in your Nominatim sources:  cd Nominatim/data\nwget https://nominatim.org/data/tiger2017-nominatim-preprocessed.tar.gz\ntar xf tiger2017-nominatim-preprocessed.tar.gz    Import the data into your Nominatim database:   ./utils/setup.php --import-tiger-data    Enable use of the Tiger data in your  settings/local.php  by adding:   @define('CONST_Use_US_Tiger_Data', true);    Apply the new settings:        ./utils/setup.php --create-functions --enable-diff-updates --create-partition-functions  The entire US adds about 10GB to your database.  You can also process the data from the original TIGER data to create the\nSQL files, Nominatim needs for the import:    Get the TIGER 2017 data. You will need the EDGES files\n     (3,234 zip files, 11GB total).   wget -r ftp://ftp2.census.gov/geo/tiger/TIGER2017/EDGES/    Convert the data into SQL statements:    ./utils/imports.php --parse-tiger <tiger edge data directory>    Be warned that this can take quite a long time. After this process is finished,\nthe same preprocessed files as above are available in  data/tiger .",
            "title": "Installing Tiger housenumber data for the US"
        },
        {
            "location": "/admin/Import-and-Update/#updates",
            "text": "There are many different possibilities to update your Nominatim database.\nThe following section describes how to keep it up-to-date with Pyosmium.\nFor a list of other methods see the output of  ./utils/update.php --help .",
            "title": "Updates"
        },
        {
            "location": "/admin/Import-and-Update/#installing-the-newest-version-of-pyosmium",
            "text": "It is recommended to install Pyosmium via pip. Run (as the same user who\nwill later run the updates):  pip install --user osmium  Nominatim needs a tool called  pyosmium-get-updates , which comes with\nPyosmium. You need to tell Nominatim where to find it. Add the\nfollowing line to your  settings/local.php :  @define('CONST_Pyosmium_Binary', '/home/user/.local/bin/pyosmium-get-changes');  The path above is fine if you used the  --user  parameter with pip.\nReplace  user  with your user name.",
            "title": "Installing the newest version of Pyosmium"
        },
        {
            "location": "/admin/Import-and-Update/#setting-up-the-update-process",
            "text": "Next the update needs to be initialised. By default Nominatim is configured\nto update using the global minutely diffs.  If you want a different update source you will need to add some settings\nto  settings/local.php . For example, to use the daily country extracts\ndiffs for Ireland from geofabrik add the following:  // base URL of the replication service\n@define('CONST_Replication_Url', 'https://download.geofabrik.de/europe/ireland-and-northern-ireland-updates');\n// How often upstream publishes diffs\n@define('CONST_Replication_Update_Interval', '86400');\n// How long to sleep if no update found yet\n@define('CONST_Replication_Recheck_Interval', '900');  To set up the update process now run the following command:  ./utils/update.php --init-updates  It outputs the date where updates will start. Recheck that this date is\nwhat you expect.  The --init-updates command needs to be rerun whenever the replication service\nis changed.",
            "title": "Setting up the update process"
        },
        {
            "location": "/admin/Import-and-Update/#updating-nominatim",
            "text": "The following command will keep your database constantly up to date:  ./utils/update.php --import-osmosis-all  (Note that even though the old name \"import-osmosis-all\" has been kept for compatibility reasons, Osmosis is not required to run this - it uses pyosmium behind the scenes.)  If you have imported multiple country extracts and want to keep them\nup-to-date, have a look at the script in issue #60 .",
            "title": "Updating Nominatim"
        },
        {
            "location": "/admin/Migration/",
            "text": "Database Migrations\n\uf0c1\n\n\nThis page describes database migrations necessary to update existing databases\nto newer versions of Nominatim.\n\n\nSQL statements should be executed from the postgres commandline. Execute\n\npsql nominiatim\n to enter command line mode.\n\n\n3.1.0 -> 3.2.0\n\uf0c1\n\n\nNew reverse algorithm\n\uf0c1\n\n\nThe reverse algorithm has changed and requires new indexes. Run the following\nSQL statements to create the indexes:\n\n\nCREATE INDEX idx_placex_geometry_reverse_lookupPoint\n  ON placex USING gist (geometry) {ts:search-index}\n  WHERE (name is not null or housenumber is not null or rank_address between 26 and 27)\n    AND class not in ('railway','tunnel','bridge','man_made')\n    AND rank_address >= 26 AND indexed_status = 0 AND linked_place_id is null;\nCREATE INDEX idx_placex_geometry_reverse_lookupPolygon\n  ON placex USING gist (geometry) {ts:search-index}\n  WHERE St_GeometryType(geometry) in ('ST_Polygon', 'ST_MultiPolygon')\n    AND rank_address between 4 and 25 AND type != 'postcode'\n    AND name is not null AND indexed_status = 0 AND linked_place_id is null;\nCREATE INDEX idx_placex_geometry_reverse_placeNode\n  ON placex USING gist (geometry) {ts:search-index}\n  WHERE osm_type = 'N' AND rank_search between 5 and 25\n    AND class = 'place' AND type != 'postcode'\n    AND name is not null AND indexed_status = 0 AND linked_place_id is null;\n\n\n\n\nYou also need to grant the website user access to the \ncountry_osm_grid\n table:\n\n\nGRANT SELECT ON table country_osm_grid to \"www-user\";\n\n\n\n\nReplace the \nwww-user\n with the user name of your website server if necessary.\n\n\nFinally, you can drop the now unused indexes:\n\n\nDROP INDEX idx_placex_reverse_geometry;\n\n\n\n\n3.0.0 -> 3.1.0\n\uf0c1\n\n\nPostcode Table\n\uf0c1\n\n\nA new separate table for artificially computed postcode centroids was introduced.\nMigration to the new format is possible but \nnot recommended\n.\n\n\nCreate postcode table and indexes, running the following SQL statements:\n\n\nCREATE TABLE location_postcode\n  (place_id BIGINT, parent_place_id BIGINT, rank_search SMALLINT,\n   rank_address SMALLINT, indexed_status SMALLINT, indexed_date TIMESTAMP,\n   country_code varchar(2), postcode TEXT,\n   geometry GEOMETRY(Geometry, 4326));\nCREATE INDEX idx_postcode_geometry ON location_postcode USING GIST (geometry);\nCREATE UNIQUE INDEX idx_postcode_id ON location_postcode USING BTREE (place_id);\nCREATE INDEX idx_postcode_postcode ON location_postcode USING BTREE (postcode);\nGRANT SELECT ON location_postcode TO \"www-data\";\ndrop type if exists nearfeaturecentr cascade;\ncreate type nearfeaturecentr as (\n  place_id BIGINT,\n  keywords int[],\n  rank_address smallint,\n  rank_search smallint,\n  distance float,\n  isguess boolean,\n  postcode TEXT,\n  centroid GEOMETRY\n);\n\n\n\n\nAdd postcode column to \nlocation_area\n tables with SQL statement:\n\n\nALTER TABLE location_area ADD COLUMN postcode TEXT;\n\n\n\n\nThen reimport the functions:\n\n\n./utils/setup.php --create-functions --enable-diff-updates --create-partition-functions\n\n\n\n\nCreate appropriate triggers with SQL:\n\n\nCREATE TRIGGER location_postcode_before_update BEFORE UPDATE ON location_postcode\n    FOR EACH ROW EXECUTE PROCEDURE postcode_update();\n\n\n\n\nFinally populate the postcode table (will take a while):\n\n\n./utils/setup.php --calculate-postcodes --index --index-noanalyse\n\n\n\n\nThis will create a working database. You may also delete the old artificial\npostcodes now. Note that this may be expensive and is not absolutely necessary.\nThe following SQL statement will remove them:\n\n\nDELETE FROM place_addressline a USING placex p\n WHERE a.address_place_id = p.place_id and p.osm_type = 'P';\nALTER TABLE placex DISABLE TRIGGER USER;\nDELETE FROM placex WHERE osm_type = 'P';\nALTER TABLE placex ENABLE TRIGGER USER;",
            "title": "Migration from older Versions"
        },
        {
            "location": "/admin/Migration/#database-migrations",
            "text": "This page describes database migrations necessary to update existing databases\nto newer versions of Nominatim.  SQL statements should be executed from the postgres commandline. Execute psql nominiatim  to enter command line mode.",
            "title": "Database Migrations"
        },
        {
            "location": "/admin/Migration/#310-320",
            "text": "",
            "title": "3.1.0 -&gt; 3.2.0"
        },
        {
            "location": "/admin/Migration/#new-reverse-algorithm",
            "text": "The reverse algorithm has changed and requires new indexes. Run the following\nSQL statements to create the indexes:  CREATE INDEX idx_placex_geometry_reverse_lookupPoint\n  ON placex USING gist (geometry) {ts:search-index}\n  WHERE (name is not null or housenumber is not null or rank_address between 26 and 27)\n    AND class not in ('railway','tunnel','bridge','man_made')\n    AND rank_address >= 26 AND indexed_status = 0 AND linked_place_id is null;\nCREATE INDEX idx_placex_geometry_reverse_lookupPolygon\n  ON placex USING gist (geometry) {ts:search-index}\n  WHERE St_GeometryType(geometry) in ('ST_Polygon', 'ST_MultiPolygon')\n    AND rank_address between 4 and 25 AND type != 'postcode'\n    AND name is not null AND indexed_status = 0 AND linked_place_id is null;\nCREATE INDEX idx_placex_geometry_reverse_placeNode\n  ON placex USING gist (geometry) {ts:search-index}\n  WHERE osm_type = 'N' AND rank_search between 5 and 25\n    AND class = 'place' AND type != 'postcode'\n    AND name is not null AND indexed_status = 0 AND linked_place_id is null;  You also need to grant the website user access to the  country_osm_grid  table:  GRANT SELECT ON table country_osm_grid to \"www-user\";  Replace the  www-user  with the user name of your website server if necessary.  Finally, you can drop the now unused indexes:  DROP INDEX idx_placex_reverse_geometry;",
            "title": "New reverse algorithm"
        },
        {
            "location": "/admin/Migration/#300-310",
            "text": "",
            "title": "3.0.0 -&gt; 3.1.0"
        },
        {
            "location": "/admin/Migration/#postcode-table",
            "text": "A new separate table for artificially computed postcode centroids was introduced.\nMigration to the new format is possible but  not recommended .  Create postcode table and indexes, running the following SQL statements:  CREATE TABLE location_postcode\n  (place_id BIGINT, parent_place_id BIGINT, rank_search SMALLINT,\n   rank_address SMALLINT, indexed_status SMALLINT, indexed_date TIMESTAMP,\n   country_code varchar(2), postcode TEXT,\n   geometry GEOMETRY(Geometry, 4326));\nCREATE INDEX idx_postcode_geometry ON location_postcode USING GIST (geometry);\nCREATE UNIQUE INDEX idx_postcode_id ON location_postcode USING BTREE (place_id);\nCREATE INDEX idx_postcode_postcode ON location_postcode USING BTREE (postcode);\nGRANT SELECT ON location_postcode TO \"www-data\";\ndrop type if exists nearfeaturecentr cascade;\ncreate type nearfeaturecentr as (\n  place_id BIGINT,\n  keywords int[],\n  rank_address smallint,\n  rank_search smallint,\n  distance float,\n  isguess boolean,\n  postcode TEXT,\n  centroid GEOMETRY\n);  Add postcode column to  location_area  tables with SQL statement:  ALTER TABLE location_area ADD COLUMN postcode TEXT;  Then reimport the functions:  ./utils/setup.php --create-functions --enable-diff-updates --create-partition-functions  Create appropriate triggers with SQL:  CREATE TRIGGER location_postcode_before_update BEFORE UPDATE ON location_postcode\n    FOR EACH ROW EXECUTE PROCEDURE postcode_update();  Finally populate the postcode table (will take a while):  ./utils/setup.php --calculate-postcodes --index --index-noanalyse  This will create a working database. You may also delete the old artificial\npostcodes now. Note that this may be expensive and is not absolutely necessary.\nThe following SQL statement will remove them:  DELETE FROM place_addressline a USING placex p\n WHERE a.address_place_id = p.place_id and p.osm_type = 'P';\nALTER TABLE placex DISABLE TRIGGER USER;\nDELETE FROM placex WHERE osm_type = 'P';\nALTER TABLE placex ENABLE TRIGGER USER;",
            "title": "Postcode Table"
        },
        {
            "location": "/admin/Faq/",
            "text": "Troubleshooting Nominatim Installations\n\uf0c1\n\n\nInstallation Issues\n\uf0c1\n\n\nCan a stopped/killed import process be resumed?\n\uf0c1\n\n\n\"I accidentally killed the import process after it has been running for many hours. Can it be resumed?\"\n\n\nIt is possible if the import already got to the indexing stage.\nCheck the last line of output that was logged before the process\nwas killed. If it looks like this:\n\n\nDone 844 in 13 @ 64.923080 per second - Rank 26 ETA (seconds): 7.886255\n\n\n\n\nthen you can resume with the following command:\n\n\n./utils/setup.php --index --create-search-indices --create-country-names\n\n\n\n\nIf the reported rank is 26 or higher, you can also safely add \n--index-noanalyse\n.\n\n\nPHP \"open_basedir restriction in effect\" warnings\n\uf0c1\n\n\n`PHP Warning:  file_get_contents(): open_basedir restriction in effect.`\n\n\n\n\nYou need to adjust the \nopen_basedir\n setting\nin your PHP configuration (\nphp.ini file\n). By default this setting may look like this:\n\n\nopen_basedir = /srv/http/:/home/:/tmp/:/usr/share/pear/\n\n\n\n\nEither add reported directories to the list or disable this setting temporarily by \ndding \";\" at the beginning of the line. Don't forget to enable this setting again\nonce you are done with the PHP command line operations.\n\n\nPHP timzeone warnings\n\uf0c1\n\n\nThe Apache log may contain lots of PHP warnings like this:\n    \nPHP Warning:  date_default_timezone_set() function.\n\n\nYou should set the default time zone as instructed in the warning in\nyour \nphp.ini\n file. Find the entry about timezone and set it to\nsomething like this:\n\n\n; Defines the default timezone used by the date functions\n; http://php.net/date.timezone\ndate.timezone = 'America/Denver'\n\n\n\n\nOr\n\n\necho \"date.timezone = 'America/Denver'\" > /etc/php.d/timezone.ini\n\n\n\n\nnominatim.so version mismatch\n\uf0c1\n\n\nWhen running the import you may get a version mismatch:\n\nCOPY_END for place failed: ERROR: incompatible library \"/srv/Nominatim/nominatim/build/module/nominatim.so\": version mismatch\n\n\npg_config seems to use bad includes sometimes when multiple versions\nof PostgreSQL are available in the system. Make sure you remove the\nserver development libraries (\npostgresql-server-dev-9.5\n on Ubuntu)\nand recompile (\ncmake .. && make\n).\n\n\nI see the error: \"function transliteration(text) does not exist\"\n\uf0c1\n\n\nReinstall the nominatim functions with \nsetup.php --create--functions\n\nand check for any errors, e.g. a missing \nnominatim.so\n file.\n\n\nThe website shows: \"Could not get word tokens\"\n\uf0c1\n\n\nThe server cannot access your database. Add \n&debug=1\n to your URL\nto get the full error message.\n\n\nOn CentOS the website shows \"Could not connect to server\"\n\uf0c1\n\n\ncould not connect to server: No such file or directory\n\n\nOn CentOS v7 the PostgreSQL server is started with \nsystemd\n.\nCheck if \n/usr/lib/systemd/system/httpd.service\n contains a line \nPrivateTmp=true\n.\nIf so then Apache cannot see the \n/tmp/.s.PGSQL.5432\n file. It's a good security feature,\nso use the \npreferred solution\n.\n\n\nHowever, you can solve this the quick and dirty way by commenting out that line and then run\n\n\nsudo systemctl daemon-reload\nsudo systemctl restart httpd\n\n\n\n\nWebsite reports \"DB Error: insufficient permissions\"\n\uf0c1\n\n\nThe user the webserver, e.g. Apache, runs under needs to have access to the Nominatim database. You can find the user like \nthis\n, for default Ubuntu operating system for example it's \nwww-data\n.\n\n\n\n\n\n\nRepeat the \ncreateuser\n step of the installation instructions.\n\n\n\n\n\n\nGive the user permission to existing tables\n\n\n\n\n\n\n   GRANT usage ON SCHEMA public TO \"www-data\";\n   GRANT SELECT ON ALL TABLES IN SCHEMA public TO \"www-data\";\n\n\n\n\nWebsite reports \"Could not load library \"nominatim.so\"\n\uf0c1\n\n\nExample error message\n\n\n   SELECT make_standard_name('3039 E MEADOWLARK LN') [nativecode=ERROR: could not\n   load library \"/srv/nominatim/Nominatim-3.1.0/build/module/nominatim.so\":\n   /srv/nominatim/Nominatim-3.1.0/build/module/nominatim.so: cannot open shared\n   object file: Permission denied\n   CONTEXT: PL/pgSQL function make_standard_name(text) line 5 at assignment]\n\n\n\n\nThe Postgresql database, i.e. user postgres, needs to have access to that file.\n\n\nThe permission need to be read & executable by everybody, e.g.\n\n\n   -rwxr-xr-x 1 nominatim nominatim 297984 build/module/nominatim.so\n\n\n\n\nTry \nchmod a+r nominatim.so; chmod a+x nominatim.so\n.\n\n\nWhen running SELinux, make sure that the\n\ncontext is set up correctly\n.\n\n\nSetup.php fails with \"DB Error: extension not found\"\n\uf0c1\n\n\nMake sure you have the Postgres extensions hstore and postgis installed.\nSee the installation instruction for a full list of required packages.\n\n\nSetup.php reports \"Cannot redeclare getDB()\"\n\uf0c1\n\n\nCannot redeclare getDB() (previously declared in /your/path/Nominatim/lib/db.php:4)\n\n\nThe message is a bit misleading as PHP needs to load the file \nDB.php\n and\ninstead re-loads Nominatim's \ndb.php\n. To solve this make sure you\nhave the \nPear module 'DB'\n installed.\n\n\nsudo pear install DB\n\n\n\n\nI forgot to delete the flatnodes file before starting an import.\n\uf0c1\n\n\nThat's fine. For each import the flatnodes file get overwritten.\nSee \nhttps://help.openstreetmap.org/questions/52419/nominatim-flatnode-storage\n\nfor more information.\n\n\nRunning your own instance\n\uf0c1\n\n\nCan I import multiple countries and keep them up to date?\n\uf0c1\n\n\nYou should use the extracts and updates from https://download.geofabrik.de.\nFor the initial import, download the countries you need and merge them.\nSee \nOSM Help\n\nfor examples how to do that. Use the resulting single osm file when\nrunning \nsetup.php\n.\n\n\nFor updates you need to download the change files for each country\nonce per day and apply them \nseparately\n using\n\n\n./utils/update.php --import-diff <filename> --index\n\n\n\n\nSee \nthis issue\n\nfor a script that runs the updates using osmosis.\n\n\nCan I import negative OSM ids into Nominatim?\n\uf0c1\n\n\nSee \nthis question of Stackoverflow\n.\n\n\nMissing XML or text declaration\n\uf0c1\n\n\nThe website might show: \nXML Parsing Error: XML or text declaration not at start of entity Location.\n\n\nMake sure there are no spaces at the beginning of your \nsettings/local.php\n file.",
            "title": "Troubleshooting"
        },
        {
            "location": "/admin/Faq/#troubleshooting-nominatim-installations",
            "text": "",
            "title": "Troubleshooting Nominatim Installations"
        },
        {
            "location": "/admin/Faq/#installation-issues",
            "text": "",
            "title": "Installation Issues"
        },
        {
            "location": "/admin/Faq/#can-a-stoppedkilled-import-process-be-resumed",
            "text": "\"I accidentally killed the import process after it has been running for many hours. Can it be resumed?\"  It is possible if the import already got to the indexing stage.\nCheck the last line of output that was logged before the process\nwas killed. If it looks like this:  Done 844 in 13 @ 64.923080 per second - Rank 26 ETA (seconds): 7.886255  then you can resume with the following command:  ./utils/setup.php --index --create-search-indices --create-country-names  If the reported rank is 26 or higher, you can also safely add  --index-noanalyse .",
            "title": "Can a stopped/killed import process be resumed?"
        },
        {
            "location": "/admin/Faq/#php-open_basedir-restriction-in-effect-warnings",
            "text": "`PHP Warning:  file_get_contents(): open_basedir restriction in effect.`  You need to adjust the  open_basedir  setting\nin your PHP configuration ( php.ini file ). By default this setting may look like this:  open_basedir = /srv/http/:/home/:/tmp/:/usr/share/pear/  Either add reported directories to the list or disable this setting temporarily by \ndding \";\" at the beginning of the line. Don't forget to enable this setting again\nonce you are done with the PHP command line operations.",
            "title": "PHP \"open_basedir restriction in effect\" warnings"
        },
        {
            "location": "/admin/Faq/#php-timzeone-warnings",
            "text": "The Apache log may contain lots of PHP warnings like this:\n     PHP Warning:  date_default_timezone_set() function.  You should set the default time zone as instructed in the warning in\nyour  php.ini  file. Find the entry about timezone and set it to\nsomething like this:  ; Defines the default timezone used by the date functions\n; http://php.net/date.timezone\ndate.timezone = 'America/Denver'  Or  echo \"date.timezone = 'America/Denver'\" > /etc/php.d/timezone.ini",
            "title": "PHP timzeone warnings"
        },
        {
            "location": "/admin/Faq/#nominatimso-version-mismatch",
            "text": "When running the import you may get a version mismatch: COPY_END for place failed: ERROR: incompatible library \"/srv/Nominatim/nominatim/build/module/nominatim.so\": version mismatch  pg_config seems to use bad includes sometimes when multiple versions\nof PostgreSQL are available in the system. Make sure you remove the\nserver development libraries ( postgresql-server-dev-9.5  on Ubuntu)\nand recompile ( cmake .. && make ).",
            "title": "nominatim.so version mismatch"
        },
        {
            "location": "/admin/Faq/#i-see-the-error-function-transliterationtext-does-not-exist",
            "text": "Reinstall the nominatim functions with  setup.php --create--functions \nand check for any errors, e.g. a missing  nominatim.so  file.",
            "title": "I see the error: \"function transliteration(text) does not exist\""
        },
        {
            "location": "/admin/Faq/#the-website-shows-could-not-get-word-tokens",
            "text": "The server cannot access your database. Add  &debug=1  to your URL\nto get the full error message.",
            "title": "The website shows: \"Could not get word tokens\""
        },
        {
            "location": "/admin/Faq/#on-centos-the-website-shows-could-not-connect-to-server",
            "text": "could not connect to server: No such file or directory  On CentOS v7 the PostgreSQL server is started with  systemd .\nCheck if  /usr/lib/systemd/system/httpd.service  contains a line  PrivateTmp=true .\nIf so then Apache cannot see the  /tmp/.s.PGSQL.5432  file. It's a good security feature,\nso use the  preferred solution .  However, you can solve this the quick and dirty way by commenting out that line and then run  sudo systemctl daemon-reload\nsudo systemctl restart httpd",
            "title": "On CentOS the website shows \"Could not connect to server\""
        },
        {
            "location": "/admin/Faq/#website-reports-db-error-insufficient-permissions",
            "text": "The user the webserver, e.g. Apache, runs under needs to have access to the Nominatim database. You can find the user like  this , for default Ubuntu operating system for example it's  www-data .    Repeat the  createuser  step of the installation instructions.    Give the user permission to existing tables       GRANT usage ON SCHEMA public TO \"www-data\";\n   GRANT SELECT ON ALL TABLES IN SCHEMA public TO \"www-data\";",
            "title": "Website reports \"DB Error: insufficient permissions\""
        },
        {
            "location": "/admin/Faq/#website-reports-could-not-load-library-nominatimso",
            "text": "Example error message     SELECT make_standard_name('3039 E MEADOWLARK LN') [nativecode=ERROR: could not\n   load library \"/srv/nominatim/Nominatim-3.1.0/build/module/nominatim.so\":\n   /srv/nominatim/Nominatim-3.1.0/build/module/nominatim.so: cannot open shared\n   object file: Permission denied\n   CONTEXT: PL/pgSQL function make_standard_name(text) line 5 at assignment]  The Postgresql database, i.e. user postgres, needs to have access to that file.  The permission need to be read & executable by everybody, e.g.     -rwxr-xr-x 1 nominatim nominatim 297984 build/module/nominatim.so  Try  chmod a+r nominatim.so; chmod a+x nominatim.so .  When running SELinux, make sure that the context is set up correctly .",
            "title": "Website reports \"Could not load library \"nominatim.so\""
        },
        {
            "location": "/admin/Faq/#setupphp-fails-with-db-error-extension-not-found",
            "text": "Make sure you have the Postgres extensions hstore and postgis installed.\nSee the installation instruction for a full list of required packages.",
            "title": "Setup.php fails with \"DB Error: extension not found\""
        },
        {
            "location": "/admin/Faq/#setupphp-reports-cannot-redeclare-getdb",
            "text": "Cannot redeclare getDB() (previously declared in /your/path/Nominatim/lib/db.php:4)  The message is a bit misleading as PHP needs to load the file  DB.php  and\ninstead re-loads Nominatim's  db.php . To solve this make sure you\nhave the  Pear module 'DB'  installed.  sudo pear install DB",
            "title": "Setup.php reports \"Cannot redeclare getDB()\""
        },
        {
            "location": "/admin/Faq/#i-forgot-to-delete-the-flatnodes-file-before-starting-an-import",
            "text": "That's fine. For each import the flatnodes file get overwritten.\nSee  https://help.openstreetmap.org/questions/52419/nominatim-flatnode-storage \nfor more information.",
            "title": "I forgot to delete the flatnodes file before starting an import."
        },
        {
            "location": "/admin/Faq/#running-your-own-instance",
            "text": "",
            "title": "Running your own instance"
        },
        {
            "location": "/admin/Faq/#can-i-import-multiple-countries-and-keep-them-up-to-date",
            "text": "You should use the extracts and updates from https://download.geofabrik.de.\nFor the initial import, download the countries you need and merge them.\nSee  OSM Help \nfor examples how to do that. Use the resulting single osm file when\nrunning  setup.php .  For updates you need to download the change files for each country\nonce per day and apply them  separately  using  ./utils/update.php --import-diff <filename> --index  See  this issue \nfor a script that runs the updates using osmosis.",
            "title": "Can I import multiple countries and keep them up to date?"
        },
        {
            "location": "/admin/Faq/#can-i-import-negative-osm-ids-into-nominatim",
            "text": "See  this question of Stackoverflow .",
            "title": "Can I import negative OSM ids into Nominatim?"
        },
        {
            "location": "/admin/Faq/#missing-xml-or-text-declaration",
            "text": "The website might show:  XML Parsing Error: XML or text declaration not at start of entity Location.  Make sure there are no spaces at the beginning of your  settings/local.php  file.",
            "title": "Missing XML or text declaration"
        },
        {
            "location": "/develop/overview/",
            "text": "Basic Architecture\n\uf0c1\n\n\nNominatim provides geocoding based on OpenStreetMap data. It uses a Postgresql\ndatabase as a backend for storing the data.\n\n\nThere are three basic parts to Nominatim's architecture: the data import,\nthe address computation and the search frontend.\n\n\nThe \ndata import\n stage reads the raw OSM data and extracts all information\nthat is useful for geocoding. This part is done by osm2pgsql, the same tool\nthat can also be used to import a rendering database. It uses the special\ngazetteer output plugin in \nosm2pgsql/output-gazetter.[ch]pp\n. The result of\nthe import can be found in the database table \nplace\n.\n\n\nThe \naddress computation\n or \nindexing\n stage takes the data from \nplace\n\nand adds additional information needed for geocoding. It ranks the places by\nimportance, links objects that belong together and computes addresses and\nthe search index. Most of this work is done in Pl/pqSQL via database triggers\nand can be found in the file \nsql/functions.sql\n.\n\n\nThe \nsearch frontend\n implements the actual API. It takes queries for\nsearch and reverse geocoding queries from the user, looks up the data and\nreturns the results in the requested format. This part is written in PHP\nand can be found in the \nlib/\n and \nwebsite/\n directories.",
            "title": "Overview"
        },
        {
            "location": "/develop/overview/#basic-architecture",
            "text": "Nominatim provides geocoding based on OpenStreetMap data. It uses a Postgresql\ndatabase as a backend for storing the data.  There are three basic parts to Nominatim's architecture: the data import,\nthe address computation and the search frontend.  The  data import  stage reads the raw OSM data and extracts all information\nthat is useful for geocoding. This part is done by osm2pgsql, the same tool\nthat can also be used to import a rendering database. It uses the special\ngazetteer output plugin in  osm2pgsql/output-gazetter.[ch]pp . The result of\nthe import can be found in the database table  place .  The  address computation  or  indexing  stage takes the data from  place \nand adds additional information needed for geocoding. It ranks the places by\nimportance, links objects that belong together and computes addresses and\nthe search index. Most of this work is done in Pl/pqSQL via database triggers\nand can be found in the file  sql/functions.sql .  The  search frontend  implements the actual API. It takes queries for\nsearch and reverse geocoding queries from the user, looks up the data and\nreturns the results in the requested format. This part is written in PHP\nand can be found in the  lib/  and  website/  directories.",
            "title": "Basic Architecture"
        },
        {
            "location": "/appendix/Install-on-Centos-7/",
            "text": "Note:\n these installation instructions are also available in executable\n        form for use with vagrant under \nvagrant/Install-on-Centos-7.sh\n.\n\n\nInstalling the Required Software\n\uf0c1\n\n\nThese instructions expect that you have a freshly installed CentOS version 7.\nMake sure all packages are up-to-date by running:\n\n\nsudo yum update -y\n\n\n\n\nThe standard CentOS repositories don't contain all the required packages,\nyou need to enable the EPEL repository as well. To enable it on CentOS,\ninstall the epel-release RPM by running:\n\n\nsudo yum install -y epel-release\n\n\n\n\nNow you can install all packages needed for Nominatim:\n\n\nsudo yum install -y postgresql-server postgresql-contrib postgresql-devel \\\n                    postgis postgis-utils \\\n                    wget git cmake make gcc gcc-c++ libtool policycoreutils-python \\\n                    php-pgsql php php-pear php-pear-DB php-intl libpqxx-devel \\\n                    proj-epsg bzip2-devel proj-devel libxml2-devel boost-devel \\\n                    expat-devel zlib-devel\n\n\n\n\nIf you want to run the test suite, you need to install the following\nadditional packages:\n\n\nsudo yum install -y python34-pip python34-setuptools python34-devel \\\n                    php-phpunit-PHPUnit\npip3 install --user behave nose pytidylib psycopg2\nsudo pear install PHP_CodeSniffer\n\n\n\n\nSystem Configuration\n\uf0c1\n\n\nThe following steps are meant to configure a fresh CentOS installation\nfor use with Nominatim. You may skip some of the steps if you have your\nOS already configured.\n\n\nCreating Dedicated User Accounts\n\uf0c1\n\n\nNominatim will run as a global service on your machine. It is therefore\nbest to install it under its own separate user account. In the following\nwe assume this user is called nominatim and the installation will be in\n/srv/nominatim. To create the user and directory run:\n\n\nsudo useradd -d /srv/nominatim -s /bin/bash -m nominatim\n\n\n\n\nYou may find a more suitable location if you wish.\n\n\nTo be able to copy and paste instructions from this manual, export\nuser name and home directory now like this:\n\n\nexport USERNAME=nominatim\nexport USERHOME=/srv/nominatim\n\n\n\n\nNever, ever run the installation as a root user.\n You have been warned.\n\n\nMake sure that system servers can read from the home directory:\n\n\nchmod a+x $USERHOME\n\n\n\n\nSetting up PostgreSQL\n\uf0c1\n\n\nCentOS does not automatically create a database cluster. Therefore, start\nwith initializing the database, then enable the server to start at boot:\n\n\nsudo postgresql-setup initdb\nsudo systemctl enable postgresql\n\n\n\n\nNext tune the postgresql configuration, which is located in \n\n/var/lib/pgsql/data/postgresql.conf\n. See section \nPostgres Tuning\n in\n\nthe installation page\n\nfor the parameters to change.\n\n\nNow start the postgresql service after updating this config file.\n\n\nsudo systemctl restart postgresql\n\n\n\n\nFinally, we need to add two postgres users: one for the user that does\nthe import and another for the webserver which should access the database\nonly for reading:\n\n\nsudo -u postgres createuser -s $USERNAME\nsudo -u postgres createuser apache\n\n\n\n\nSetting up the Apache Webserver\n\uf0c1\n\n\nYou need to create an alias to the website directory in your apache\nconfiguration. Add a separate nominatim configuration to your webserver:\n\n\nsudo tee /etc/httpd/conf.d/nominatim.conf << EOFAPACHECONF\n<Directory \"$USERHOME/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\n\nAlias /nominatim $USERHOME/build/website\nEOFAPACHECONF\n\n\n\n\nThen reload apache\n\n\nsudo systemctl enable httpd\nsudo systemctl restart httpd\n\n\n\n\nInstalling Nominatim\n\uf0c1\n\n\nBuilding and Configuration\n\uf0c1\n\n\nGet the source code for the release and change into the source directory\n\n\ncd $USERHOME\nwget https://nominatim.org/release/Nominatim-3.2.0.tar.bz2\ntar xf Nominatim-3.2.0.tar.bz2\ncd Nominatim-3.2.0\n\n\n\n\nThe code must be built in a separate directory. Create this directory,\nthen configure and build Nominatim in there:\n\n\ncd $USERHOME\nmkdir build\ncd build\ncmake $USERHOME/Nominatim-3.2.0\nmake\n\n\n\n\nAdding SELinux Security Settings\n\uf0c1\n\n\nIt is a good idea to leave SELinux enabled and enforcing, particularly\nwith a web server accessible from the Internet. At a minimum the\nfollowing SELinux labeling should be done for Nominatim:\n\n\nsudo semanage fcontext -a -t httpd_sys_content_t \"$USERHOME/Nominatim-3.2.0/(website|lib|settings)(/.*)?\"\nsudo semanage fcontext -a -t httpd_sys_content_t \"$USERHOME/build/(website|lib|settings)(/.*)?\"\nsudo semanage fcontext -a -t lib_t \"$USERHOME/build/module/nominatim.so\"\nsudo restorecon -R -v $USERHOME/Nominatim-3.2.0\nsudo restorecon -R -v $USERHOME/build\n\n\n\n\nYou need to create a minimal configuration file that tells nominatim\nthe name of your webserver user and the URL of the website:\n\n\ntee settings/local.php << EOF\n<?php\n @define('CONST_Database_Web_User', 'apache');\n @define('CONST_Website_BaseURL', '/nominatim/');\nEOF\n\n\n\n\nNominatim is now ready to use. Continue with\n\nimporting a database from OSM data\n.",
            "title": "Installation on CentOS 7"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#installing-the-required-software",
            "text": "These instructions expect that you have a freshly installed CentOS version 7.\nMake sure all packages are up-to-date by running:  sudo yum update -y  The standard CentOS repositories don't contain all the required packages,\nyou need to enable the EPEL repository as well. To enable it on CentOS,\ninstall the epel-release RPM by running:  sudo yum install -y epel-release  Now you can install all packages needed for Nominatim:  sudo yum install -y postgresql-server postgresql-contrib postgresql-devel \\\n                    postgis postgis-utils \\\n                    wget git cmake make gcc gcc-c++ libtool policycoreutils-python \\\n                    php-pgsql php php-pear php-pear-DB php-intl libpqxx-devel \\\n                    proj-epsg bzip2-devel proj-devel libxml2-devel boost-devel \\\n                    expat-devel zlib-devel  If you want to run the test suite, you need to install the following\nadditional packages:  sudo yum install -y python34-pip python34-setuptools python34-devel \\\n                    php-phpunit-PHPUnit\npip3 install --user behave nose pytidylib psycopg2\nsudo pear install PHP_CodeSniffer",
            "title": "Installing the Required Software"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#system-configuration",
            "text": "The following steps are meant to configure a fresh CentOS installation\nfor use with Nominatim. You may skip some of the steps if you have your\nOS already configured.",
            "title": "System Configuration"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#creating-dedicated-user-accounts",
            "text": "Nominatim will run as a global service on your machine. It is therefore\nbest to install it under its own separate user account. In the following\nwe assume this user is called nominatim and the installation will be in\n/srv/nominatim. To create the user and directory run:  sudo useradd -d /srv/nominatim -s /bin/bash -m nominatim  You may find a more suitable location if you wish.  To be able to copy and paste instructions from this manual, export\nuser name and home directory now like this:  export USERNAME=nominatim\nexport USERHOME=/srv/nominatim  Never, ever run the installation as a root user.  You have been warned.  Make sure that system servers can read from the home directory:  chmod a+x $USERHOME",
            "title": "Creating Dedicated User Accounts"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#setting-up-postgresql",
            "text": "CentOS does not automatically create a database cluster. Therefore, start\nwith initializing the database, then enable the server to start at boot:  sudo postgresql-setup initdb\nsudo systemctl enable postgresql  Next tune the postgresql configuration, which is located in  /var/lib/pgsql/data/postgresql.conf . See section  Postgres Tuning  in the installation page \nfor the parameters to change.  Now start the postgresql service after updating this config file.  sudo systemctl restart postgresql  Finally, we need to add two postgres users: one for the user that does\nthe import and another for the webserver which should access the database\nonly for reading:  sudo -u postgres createuser -s $USERNAME\nsudo -u postgres createuser apache",
            "title": "Setting up PostgreSQL"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#setting-up-the-apache-webserver",
            "text": "You need to create an alias to the website directory in your apache\nconfiguration. Add a separate nominatim configuration to your webserver:  sudo tee /etc/httpd/conf.d/nominatim.conf << EOFAPACHECONF\n<Directory \"$USERHOME/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\n\nAlias /nominatim $USERHOME/build/website\nEOFAPACHECONF  Then reload apache  sudo systemctl enable httpd\nsudo systemctl restart httpd",
            "title": "Setting up the Apache Webserver"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#installing-nominatim",
            "text": "",
            "title": "Installing Nominatim"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#building-and-configuration",
            "text": "Get the source code for the release and change into the source directory  cd $USERHOME\nwget https://nominatim.org/release/Nominatim-3.2.0.tar.bz2\ntar xf Nominatim-3.2.0.tar.bz2\ncd Nominatim-3.2.0  The code must be built in a separate directory. Create this directory,\nthen configure and build Nominatim in there:  cd $USERHOME\nmkdir build\ncd build\ncmake $USERHOME/Nominatim-3.2.0\nmake",
            "title": "Building and Configuration"
        },
        {
            "location": "/appendix/Install-on-Centos-7/#adding-selinux-security-settings",
            "text": "It is a good idea to leave SELinux enabled and enforcing, particularly\nwith a web server accessible from the Internet. At a minimum the\nfollowing SELinux labeling should be done for Nominatim:  sudo semanage fcontext -a -t httpd_sys_content_t \"$USERHOME/Nominatim-3.2.0/(website|lib|settings)(/.*)?\"\nsudo semanage fcontext -a -t httpd_sys_content_t \"$USERHOME/build/(website|lib|settings)(/.*)?\"\nsudo semanage fcontext -a -t lib_t \"$USERHOME/build/module/nominatim.so\"\nsudo restorecon -R -v $USERHOME/Nominatim-3.2.0\nsudo restorecon -R -v $USERHOME/build  You need to create a minimal configuration file that tells nominatim\nthe name of your webserver user and the URL of the website:  tee settings/local.php << EOF\n<?php\n @define('CONST_Database_Web_User', 'apache');\n @define('CONST_Website_BaseURL', '/nominatim/');\nEOF  Nominatim is now ready to use. Continue with importing a database from OSM data .",
            "title": "Adding SELinux Security Settings"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/",
            "text": "Note:\n these installation instructions are also available in executable\n        form for use with vagrant under vagrant/Install-on-Ubuntu-16.sh.\n\n\nInstalling the Required Software\n\uf0c1\n\n\nThese instructions expect that you have a freshly installed Ubuntu 16.04.\n\n\nMake sure all packages are are up-to-date by running:\n\n\nsudo apt-get update -qq\n\n\n\n\nNow you can install all packages needed for Nominatim:\n\n\nsudo apt-get install -y build-essential cmake g++ libboost-dev libboost-system-dev \\\n                        libboost-filesystem-dev libexpat1-dev zlib1g-dev libxml2-dev\\\n                        libbz2-dev libpq-dev libproj-dev \\\n                        postgresql-server-dev-9.5 postgresql-9.5-postgis-2.2 \\\n                        postgresql-contrib-9.5 \\\n                        apache2 php php-pgsql libapache2-mod-php php-pear php-db \\\n                        php-intl git\n\n\n\n\nIf you want to run the test suite, you need to install the following\nadditional packages:\n\n\nsudo apt-get install -y python3-setuptools python3-dev python3-pip \\\n                        python3-psycopg2 python3-tidylib phpunit php-cgi\n\npip3 install --user behave nose\nsudo pear install PHP_CodeSniffer\n\n\n\n\nSystem Configuration\n\uf0c1\n\n\nThe following steps are meant to configure a fresh Ubuntu installation\nfor use with Nominatim. You may skip some of the steps if you have your\nOS already configured.\n\n\nCreating Dedicated User Accounts\n\uf0c1\n\n\nNominatim will run as a global service on your machine. It is therefore\nbest to install it under its own separate user account. In the following\nwe assume this user is called nominatim and the installation will be in\n/srv/nominatim. To create the user and directory run:\n\n\nsudo useradd -d /srv/nominatim -s /bin/bash -m nominatim\n\n\n\n\nYou may find a more suitable location if you wish.\n\n\nTo be able to copy and paste instructions from this manual, export\nuser name and home directory now like this:\n\n\nexport USERNAME=nominatim\nexport USERHOME=/srv/nominatim\n\n\n\n\nNever, ever run the installation as a root user.\n You have been warned.\n\n\nMake sure that system servers can read from the home directory:\n\n\nchmod a+x $USERHOME\n\n\n\n\nSetting up PostgreSQL\n\uf0c1\n\n\nTune the postgresql configuration, which is located in \n\n/etc/postgresql/9.5/main/postgresql.conf\n. See section \nPostgres Tuning\n in\n\nthe installation page\n\nfor the parameters to change.\n\n\nRestart the postgresql service after updating this config file.\n\n\nsudo systemctl restart postgresql\n\n\n\n\nFinally, we need to add two postgres users: one for the user that does\nthe import and another for the webserver which should access the database\nfor reading only:\n\n\nsudo -u postgres createuser -s $USERNAME\nsudo -u postgres createuser www-data\n\n\n\n\nSetting up the Apache Webserver\n\uf0c1\n\n\nYou need to create an alias to the website directory in your apache\nconfiguration. Add a separate nominatim configuration to your webserver:\n\n\nsudo tee /etc/apache2/conf-available/nominatim.conf << EOFAPACHECONF\n<Directory \"$USERHOME/Nominatim/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\n\nAlias /nominatim $USERHOME/Nominatim/build/website\nEOFAPACHECONF\n\n\n\n\nThen enable the configuration and restart apache\n\n\nsudo a2enconf nominatim\nsudo systemctl restart apache2\n\n\n\n\nInstalling Nominatim\n\uf0c1\n\n\nBuilding and Configuration\n\uf0c1\n\n\nGet the source code for the release and change into the source directory\n\n\ncd $USERHOME\nwget https://nominatim.org/release/Nominatim-3.2.0.tar.bz2\ntar xf Nominatim-3.2.0.tar.bz2\ncd Nominatim-3.2.0\n\n\n\n\nThe code must be built in a separate directory. Create this directory,\nthen configure and build Nominatim in there:\n\n\nmkdir build\ncd build\ncmake ..\nmake\n\n\n\n\nYou need to create a minimal configuration file that tells nominatim\nwhere it is located on the webserver:\n\n\ntee settings/local.php << EOF\n<?php\n @define('CONST_Website_BaseURL', '/nominatim/');\nEOF\n\n\n\n\nNominatim is now ready to use. Continue with\n\nimporting a database from OSM data\n.",
            "title": "Installation on Ubuntu 16"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#installing-the-required-software",
            "text": "These instructions expect that you have a freshly installed Ubuntu 16.04.  Make sure all packages are are up-to-date by running:  sudo apt-get update -qq  Now you can install all packages needed for Nominatim:  sudo apt-get install -y build-essential cmake g++ libboost-dev libboost-system-dev \\\n                        libboost-filesystem-dev libexpat1-dev zlib1g-dev libxml2-dev\\\n                        libbz2-dev libpq-dev libproj-dev \\\n                        postgresql-server-dev-9.5 postgresql-9.5-postgis-2.2 \\\n                        postgresql-contrib-9.5 \\\n                        apache2 php php-pgsql libapache2-mod-php php-pear php-db \\\n                        php-intl git  If you want to run the test suite, you need to install the following\nadditional packages:  sudo apt-get install -y python3-setuptools python3-dev python3-pip \\\n                        python3-psycopg2 python3-tidylib phpunit php-cgi\n\npip3 install --user behave nose\nsudo pear install PHP_CodeSniffer",
            "title": "Installing the Required Software"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#system-configuration",
            "text": "The following steps are meant to configure a fresh Ubuntu installation\nfor use with Nominatim. You may skip some of the steps if you have your\nOS already configured.",
            "title": "System Configuration"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#creating-dedicated-user-accounts",
            "text": "Nominatim will run as a global service on your machine. It is therefore\nbest to install it under its own separate user account. In the following\nwe assume this user is called nominatim and the installation will be in\n/srv/nominatim. To create the user and directory run:  sudo useradd -d /srv/nominatim -s /bin/bash -m nominatim  You may find a more suitable location if you wish.  To be able to copy and paste instructions from this manual, export\nuser name and home directory now like this:  export USERNAME=nominatim\nexport USERHOME=/srv/nominatim  Never, ever run the installation as a root user.  You have been warned.  Make sure that system servers can read from the home directory:  chmod a+x $USERHOME",
            "title": "Creating Dedicated User Accounts"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#setting-up-postgresql",
            "text": "Tune the postgresql configuration, which is located in  /etc/postgresql/9.5/main/postgresql.conf . See section  Postgres Tuning  in the installation page \nfor the parameters to change.  Restart the postgresql service after updating this config file.  sudo systemctl restart postgresql  Finally, we need to add two postgres users: one for the user that does\nthe import and another for the webserver which should access the database\nfor reading only:  sudo -u postgres createuser -s $USERNAME\nsudo -u postgres createuser www-data",
            "title": "Setting up PostgreSQL"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#setting-up-the-apache-webserver",
            "text": "You need to create an alias to the website directory in your apache\nconfiguration. Add a separate nominatim configuration to your webserver:  sudo tee /etc/apache2/conf-available/nominatim.conf << EOFAPACHECONF\n<Directory \"$USERHOME/Nominatim/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\n\nAlias /nominatim $USERHOME/Nominatim/build/website\nEOFAPACHECONF  Then enable the configuration and restart apache  sudo a2enconf nominatim\nsudo systemctl restart apache2",
            "title": "Setting up the Apache Webserver"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#installing-nominatim",
            "text": "",
            "title": "Installing Nominatim"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-16/#building-and-configuration",
            "text": "Get the source code for the release and change into the source directory  cd $USERHOME\nwget https://nominatim.org/release/Nominatim-3.2.0.tar.bz2\ntar xf Nominatim-3.2.0.tar.bz2\ncd Nominatim-3.2.0  The code must be built in a separate directory. Create this directory,\nthen configure and build Nominatim in there:  mkdir build\ncd build\ncmake ..\nmake  You need to create a minimal configuration file that tells nominatim\nwhere it is located on the webserver:  tee settings/local.php << EOF\n<?php\n @define('CONST_Website_BaseURL', '/nominatim/');\nEOF  Nominatim is now ready to use. Continue with importing a database from OSM data .",
            "title": "Building and Configuration"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-18/",
            "text": "Note:\n these installation instructions are also available in executable\n        form for use with vagrant under vagrant/Install-on-Ubuntu-18.sh.\n\n\nInstalling the Required Software\n\uf0c1\n\n\nThese instructions expect that you have a freshly installed Ubuntu 18.04.\n\n\nMake sure all packages are are up-to-date by running:\n\n\nsudo apt-get update -qq\n\n\n\n\nNow you can install all packages needed for Nominatim:\n\n\nsudo apt-get install -y build-essential cmake g++ libboost-dev libboost-system-dev \\\n                        libboost-filesystem-dev libexpat1-dev zlib1g-dev libxml2-dev\\\n                        libbz2-dev libpq-dev libproj-dev \\\n                        postgresql-server-dev-10 postgresql-10-postgis-2.4 \\\n                        postgresql-contrib-10 \\\n                        apache2 php php-pgsql libapache2-mod-php php-pear php-db \\\n                        php-intl git\n\n\n\n\nIf you want to run the test suite, you need to install the following\nadditional packages:\n\n\nsudo apt-get install -y python3-setuptools python3-dev python3-pip \\\n                        python3-psycopg2 python3-tidylib phpunit php-cgi\n\npip3 install --user behave nose\nsudo pear install PHP_CodeSniffer\n\n\n\n\nSystem Configuration\n\uf0c1\n\n\nThe following steps are meant to configure a fresh Ubuntu installation\nfor use with Nominatim. You may skip some of the steps if you have your\nOS already configured.\n\n\nCreating Dedicated User Accounts\n\uf0c1\n\n\nNominatim will run as a global service on your machine. It is therefore\nbest to install it under its own separate user account. In the following\nwe assume this user is called nominatim and the installation will be in\n/srv/nominatim. To create the user and directory run:\n\n\nsudo useradd -d /srv/nominatim -s /bin/bash -m nominatim\n\n\n\n\nYou may find a more suitable location if you wish.\n\n\nTo be able to copy and paste instructions from this manual, export\nuser name and home directory now like this:\n\n\nexport USERNAME=nominatim\nexport USERHOME=/srv/nominatim\n\n\n\n\nNever, ever run the installation as a root user.\n You have been warned.\n\n\nMake sure that system servers can read from the home directory:\n\n\nchmod a+x $USERHOME\n\n\n\n\nSetting up PostgreSQL\n\uf0c1\n\n\nTune the postgresql configuration, which is located in \n\n/etc/postgresql/9.5/main/postgresql.conf\n. See section \nPostgres Tuning\n in\n\nthe installation page\n\nfor the parameters to change.\n\n\nRestart the postgresql service after updating this config file.\n\n\nsudo systemctl restart postgresql\n\n\n\n\nFinally, we need to add two postgres users: one for the user that does\nthe import and another for the webserver which should access the database\nfor reading only:\n\n\nsudo -u postgres createuser -s $USERNAME\nsudo -u postgres createuser www-data\n\n\n\n\nSetting up the Apache Webserver\n\uf0c1\n\n\nYou need to create an alias to the website directory in your apache\nconfiguration. Add a separate nominatim configuration to your webserver:\n\n\nsudo tee /etc/apache2/conf-available/nominatim.conf << EOFAPACHECONF\n<Directory \"$USERHOME/Nominatim/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\n\nAlias /nominatim $USERHOME/Nominatim/build/website\nEOFAPACHECONF\n\n\n\n\nThen enable the configuration and restart apache\n\n\nsudo a2enconf nominatim\nsudo systemctl restart apache2\n\n\n\n\nInstalling Nominatim\n\uf0c1\n\n\nBuilding and Configuration\n\uf0c1\n\n\nGet the source code for the release and change into the source directory\n\n\ncd $USERHOME\nwget https://nominatim.org/release/Nominatim-3.2.0.tar.bz2\ntar xf Nominatim-3.2.0.tar.bz2\ncd Nominatim-3.2.0\n\n\n\n\nThe code must be built in a separate directory. Create this directory,\nthen configure and build Nominatim in there:\n\n\nmkdir build\ncd build\ncmake ..\nmake\n\n\n\n\nYou need to create a minimal configuration file that tells nominatim\nwhere it is located on the webserver:\n\n\ntee settings/local.php << EOF\n<?php\n @define('CONST_Website_BaseURL', '/nominatim/');\nEOF\n\n\n\n\nNominatim is now ready to use. Continue with\n\nimporting a database from OSM data\n.",
            "title": "Installation on Ubuntu 18"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-18/#installing-the-required-software",
            "text": "These instructions expect that you have a freshly installed Ubuntu 18.04.  Make sure all packages are are up-to-date by running:  sudo apt-get update -qq  Now you can install all packages needed for Nominatim:  sudo apt-get install -y build-essential cmake g++ libboost-dev libboost-system-dev \\\n                        libboost-filesystem-dev libexpat1-dev zlib1g-dev libxml2-dev\\\n                        libbz2-dev libpq-dev libproj-dev \\\n                        postgresql-server-dev-10 postgresql-10-postgis-2.4 \\\n                        postgresql-contrib-10 \\\n                        apache2 php php-pgsql libapache2-mod-php php-pear php-db \\\n                        php-intl git  If you want to run the test suite, you need to install the following\nadditional packages:  sudo apt-get install -y python3-setuptools python3-dev python3-pip \\\n                        python3-psycopg2 python3-tidylib phpunit php-cgi\n\npip3 install --user behave nose\nsudo pear install PHP_CodeSniffer",
            "title": "Installing the Required Software"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-18/#system-configuration",
            "text": "The following steps are meant to configure a fresh Ubuntu installation\nfor use with Nominatim. You may skip some of the steps if you have your\nOS already configured.",
            "title": "System Configuration"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-18/#creating-dedicated-user-accounts",
            "text": "Nominatim will run as a global service on your machine. It is therefore\nbest to install it under its own separate user account. In the following\nwe assume this user is called nominatim and the installation will be in\n/srv/nominatim. To create the user and directory run:  sudo useradd -d /srv/nominatim -s /bin/bash -m nominatim  You may find a more suitable location if you wish.  To be able to copy and paste instructions from this manual, export\nuser name and home directory now like this:  export USERNAME=nominatim\nexport USERHOME=/srv/nominatim  Never, ever run the installation as a root user.  You have been warned.  Make sure that system servers can read from the home directory:  chmod a+x $USERHOME",
            "title": "Creating Dedicated User Accounts"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-18/#setting-up-postgresql",
            "text": "Tune the postgresql configuration, which is located in  /etc/postgresql/9.5/main/postgresql.conf . See section  Postgres Tuning  in the installation page \nfor the parameters to change.  Restart the postgresql service after updating this config file.  sudo systemctl restart postgresql  Finally, we need to add two postgres users: one for the user that does\nthe import and another for the webserver which should access the database\nfor reading only:  sudo -u postgres createuser -s $USERNAME\nsudo -u postgres createuser www-data",
            "title": "Setting up PostgreSQL"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-18/#setting-up-the-apache-webserver",
            "text": "You need to create an alias to the website directory in your apache\nconfiguration. Add a separate nominatim configuration to your webserver:  sudo tee /etc/apache2/conf-available/nominatim.conf << EOFAPACHECONF\n<Directory \"$USERHOME/Nominatim/build/website\">\n  Options FollowSymLinks MultiViews\n  AddType text/html   .php\n  DirectoryIndex search.php\n  Require all granted\n</Directory>\n\nAlias /nominatim $USERHOME/Nominatim/build/website\nEOFAPACHECONF  Then enable the configuration and restart apache  sudo a2enconf nominatim\nsudo systemctl restart apache2",
            "title": "Setting up the Apache Webserver"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-18/#installing-nominatim",
            "text": "",
            "title": "Installing Nominatim"
        },
        {
            "location": "/appendix/Install-on-Ubuntu-18/#building-and-configuration",
            "text": "Get the source code for the release and change into the source directory  cd $USERHOME\nwget https://nominatim.org/release/Nominatim-3.2.0.tar.bz2\ntar xf Nominatim-3.2.0.tar.bz2\ncd Nominatim-3.2.0  The code must be built in a separate directory. Create this directory,\nthen configure and build Nominatim in there:  mkdir build\ncd build\ncmake ..\nmake  You need to create a minimal configuration file that tells nominatim\nwhere it is located on the webserver:  tee settings/local.php << EOF\n<?php\n @define('CONST_Website_BaseURL', '/nominatim/');\nEOF  Nominatim is now ready to use. Continue with importing a database from OSM data .",
            "title": "Building and Configuration"
        }
    ]
}